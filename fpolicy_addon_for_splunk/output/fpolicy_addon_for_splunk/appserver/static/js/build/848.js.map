{"version":3,"file":"848.js","mappings":";wRAKMA,EAAkBC,EAAAA,QAAAA,KAAW,6HACtB,SAACC,GAAK,OAAKA,EAAMC,KAAK,IAGnC,SAASC,EAAgBF,GAiCrB,OAAO,uBAAK,YAAU,iBAnBdG,EAAeH,EAAMI,KACE,SAAvBJ,EAAMK,aACNF,EAAe,gBAAC,IAAI,CAACG,GAAIN,EAAMO,MAAOP,EAAMI,MACd,WAAvBJ,EAAMK,cAEbF,EAfR,SAAiBK,EAAOC,GAEpB,IADA,IAAIN,EAAe,GACVO,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,GAAK,EAAG,CACtC,IAAME,EAY4D,CAATC,EAZtCL,EAAME,GAcrB,gBAAC,IAAI,CAACI,IAAKD,EAAMP,GAAIN,EAAMO,MACtBP,EAAMe,WAdfZ,EAAeA,EAAaa,OAAOJ,EACvC,CAU4D,IAACC,EAT7D,OAAOV,CACX,CAQuBc,CAAQd,EAAae,MAAMlB,EAAMmB,SAMnCC,MACiB,SAAvBpB,EAAMK,eACbF,EAAe,gBAACL,EAAe,CAACG,MAAOD,EAAMC,OAAQD,EAAMI,OAGxDD,IAjBX,IACQA,CAoBZ,CAEAD,EAAgBmB,UAAY,CACxBjB,KAAMkB,IAAAA,OACNf,KAAMe,IAAAA,OACNrB,MAAOqB,IAAAA,OACPjB,aAAciB,IAAAA,OACdH,MAAOG,IAAAA,OACPP,SAAUO,IAAAA,QAGd,QAAeC,EAAAA,KAAWrB,4kCCjD1B,IAAMsB,GAAczB,EAAAA,EAAAA,SAAO0B,IAAP1B,CAAY,+JAI1B2B,EAAa,+jCAGd,SAHc,wCACA,SAACC,EAAG,GAAc,IAAZC,EAAK,EAALA,MACjB,EAAK5B,MAAM6B,aAAa,EAAK7B,MAAM8B,MAAOF,EAC9C,SAHe,2GAGd,EAkBA,SAlBA,0BAED,WACI,OACI,gBAACJ,EAAW,CACRO,QAAM,EACNC,MAAOC,KAAKjC,MAAMgC,MAClBE,UAAWD,KAAKjC,MAAM8B,MACtBK,SAAUF,KAAKjC,MAAMmC,SACrBP,MACyB,OAArBK,KAAKjC,MAAM4B,YAA8C,IAArBK,KAAKjC,MAAM4B,MACzC,GACAK,KAAKjC,MAAM4B,MAAMQ,WAE3BC,SAAUJ,KAAKJ,aACfS,KAAML,KAAKjC,MAAMuC,UAAY,WAAa,QAGtD,0EAAC,EArBc,CAASC,EAAAA,WAwB5Bd,EAAcL,UAAY,CAEtBO,MAAON,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,SAC9CO,aAAcP,IAAAA,KAAAA,WACdQ,MAAOR,IAAAA,OACPU,MAAOV,IAAAA,KACPiB,UAAWjB,IAAAA,KACXa,SAAUb,IAAAA,MAGd,oCCtCME,GAAczB,EAAAA,EAAAA,SAAO0C,IAAP1C,CAAgB,+JAIpC,SAAS2C,EAAkB1C,GAAO,cAK9B,OACI,gBAAC,EAAW,CACR+B,QAAM,EACNY,UAAQ,EACRX,MAAOhC,EAAMgC,MACbE,UAAWlC,EAAM8B,MACjBK,SAAUnC,EAAMmC,SAChBP,OAAkB,QAAX,EAAA5B,EAAM4B,aAAK,aAAX,EAAaQ,aAAc,GAClCC,SAZa,SAACV,EAAG,GAAc,IAAZC,EAAK,EAALA,MACvB5B,EAAM6B,aAAa7B,EAAM8B,MAAOF,EACpC,EAWQgB,QAAS5C,SAAqB,QAAhB,EAALA,EAAO6C,sBAAc,OAArB,EAAuBD,QAAU5C,SAAqB,QAAhB,EAALA,EAAO6C,sBAAc,WAAhB,EAAL,EAAuBD,QAAU,GAC3EE,QAAS9C,SAAqB,QAAhB,EAALA,EAAO6C,sBAAc,OAArB,EAAuBC,QAAU9C,SAAqB,QAAhB,EAALA,EAAO6C,sBAAc,WAAhB,EAAL,EAAuBC,QAAU,GAGvF,CAEAJ,EAAkBrB,UAAY,CAC1BO,MAAON,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,SAC9CO,aAAcP,IAAAA,KAAAA,WACdQ,MAAOR,IAAAA,OACPU,MAAOV,IAAAA,KACPuB,eAAgBvB,IAAAA,OAChBa,SAAUb,IAAAA,MAGd,qjFCzBA,IAAMyB,IAAgBhD,EAAAA,EAAAA,SAAOiD,IAAPjD,CAAc,mDAI9BkD,IAAqBlD,EAAAA,EAAAA,SAAOmD,IAAPnD,CAAmB,4CAIxCoD,GAAYpD,EAAAA,QAAAA,IAAU,qFAM5B,SAASqD,GAAqBpD,GAC1B,IACI8B,EAMA9B,EANA8B,MAAK,EAML9B,EALAmC,SAAAA,OAAQ,IAAG,GAAK,IAKhBnC,EAJAgC,MAAAA,OAAK,IAAG,GAAK,EACba,EAGA7C,EAHA6C,eACAQ,EAEArD,EAFAqD,iBACGC,oXAAS,CACZtD,EAAK,IAELuD,EAUAV,EAVAU,YACAC,EASAX,EATAW,SACAC,EAQAZ,EARAY,UACAC,EAOAb,EAPAa,aACAC,EAMAd,EANAc,mBACAC,EAKAf,EALAe,cACAC,EAIAhB,EAJAgB,cACAC,EAGAjB,EAHAiB,WACAC,EAEAlB,EAFAkB,mBACAC,EACAnB,EADAmB,aAGJ,SAASnC,EAAaF,EAAGsC,GACrBX,EAAUzB,aAAaC,EAAOmC,EAAIrC,MACtC,CACA,IAAMsC,EAASP,EAAqBQ,IAAAA,OAAkBnB,IAAAA,OAChDoB,EAAUT,EAAqBQ,IAAAA,QAAmBnB,IAAAA,QAExD,SAASqB,EAAgBC,GACrB,IAAMC,EAAO,GAYb,OAXAD,EAAME,SAAQ,SAACC,GACPA,EAAK7C,OAAS6C,EAAKC,OACnBH,EAAKI,KAAK,gBAACT,EAAM,CAACQ,MAAOD,EAAKC,MAAO9C,MAAO6C,EAAK7C,MAAOd,IAAK2D,EAAK7C,SAElE6C,EAAKG,UAAYH,EAAKC,QACtBH,EAAKI,KAAK,gBAACP,EAAO,CAACtD,IAAK2D,EAAKC,OAAQD,EAAKC,QAC1CD,EAAKG,SAASJ,SAAQ,SAACK,GACnBN,EAAKI,KAAK,gBAACT,EAAM,CAACQ,MAAOG,EAAMH,MAAO9C,MAAOiD,EAAMjD,MAAOd,IAAK+D,EAAMjD,QACzE,IAER,IACO2C,CACX,CAEA,IAA6C,MAAfO,EAAAA,EAAAA,WAAS,GAAM,GAAtCC,EAAO,KAAEC,EAAU,KACkB,MAAdF,EAAAA,EAAAA,UAAS,MAAK,GAArCG,EAAO,KAAEC,EAAU,MAE1BC,EAAAA,EAAAA,YAAU,WACN,GAAK5B,GAAgBK,IAAiBG,EAAtC,CAKA,IAAIqB,GAAU,EACRC,EAASC,EAAAA,EAAAA,YAAAA,SAGTL,EAAU,CAAEM,YAAaF,EAAOlE,MAAOqE,aAAa,EAAMC,OAAQ,CAAEC,OAAQ,IAiClF,OAhCI9B,EACAqB,EAAQU,YAAc/B,EACfL,IACP0B,EAAQ1B,YAAcA,GAGtBF,IACA4B,EAAQQ,OAAS,GAAH,MAAQR,EAAQQ,QAAWpC,KAExCK,GAAgBL,GACjB2B,GAAW,IACXY,EAAAA,EAAAA,GAAiBX,GACZY,MAAK,SAACC,GACCV,IACAF,EACIb,GACI0B,EAAAA,EAAAA,IAAeD,EAASvB,KAAKyB,MAAOlC,EAAYL,EAAWD,KAGnEwB,GAAW,GAEnB,IAAE,OACK,WACCI,GACAJ,GAAW,GAEfE,EAAW,KACf,KAEJA,EAAW,MAGR,WACHG,EAAOY,OAAO,uBACdb,GAAU,CACd,CA1CA,CAFIF,EAAWb,EAAgBN,GA8CnC,GAAG,CAACV,IAEJ,IAAM6C,IAAoBnB,GAAiB5C,EACrCgE,EAAmBpB,EAAU,gBAAC9B,GAAkB,MAAM,KAGtDmD,IAAyBF,GAAqB5C,EAAU+C,UAAYrC,GAE1E,OAAOL,EACH,gBAACR,GAAS,CAACjB,UAAU,eACjB,gBAAC,IAAQ,CACLN,MAAuB,OAAhB5B,EAAM4B,MAAiB,GAAK5B,EAAM4B,MACzC0E,KAAMxE,EACNE,MAAOA,EACPG,SAAU+D,EACV7D,SAAUR,EACVE,QAAM,GAELkD,GAAWA,EAAQtE,OAAS,GAAKsE,GAErCkB,GAGL,gCACI,gBAACpD,GAAa,CACVb,UAAU,cACV,oBAAmB6C,EACnBnD,MAAO5B,EAAM4B,MACb0E,KAAMxE,EACNE,MAAOA,EACPG,SAAU+D,EACV7D,SAAUR,EACV0E,QAAS1C,EACT9B,QAAM,GAELkD,GAAWA,EAAQtE,OAAS,GAAKsE,GACrB,IAChBkB,EACAC,EACG,gBAAC,IAAM,CACH,YAAU,QACVI,WAAW,YACXC,KAAM,gBAAC,IAAK,MACZC,QAAS,kBAAMpD,EAAUzB,aAAaC,EAAO,GAAG,IAEpD,KAGhB,CAEAsB,GAAqB/B,UAAY,CAC7Bc,SAAUb,IAAAA,KACVM,MAAON,IAAAA,OACPU,MAAOV,IAAAA,KACPO,aAAcP,IAAAA,KAAAA,WACdQ,MAAOR,IAAAA,OACP+B,iBAAkB/B,IAAAA,OAClBuB,eAAgBvB,IAAAA,MAAgB,CAC5ByC,mBAAoBzC,IAAAA,MACpBiC,YAAajC,IAAAA,OACbkC,SAAUlC,IAAAA,OACVmC,UAAWnC,IAAAA,OACXoC,aAAcpC,IAAAA,MACdqC,mBAAoBrC,IAAAA,KACpBsC,cAAetC,IAAAA,OACfuC,cAAevC,IAAAA,KACfwC,WAAYxC,IAAAA,OACZ0C,aAAc1C,IAAAA,OAElB+E,SAAU/E,IAAAA,MAGd,o9ECxLA,IAAMqF,IAAqB5G,EAAAA,EAAAA,SAAO6G,KAAP7G,CAAmB,mDAIxCkD,IAAqBlD,EAAAA,EAAAA,SAAOmD,IAAPnD,CAAmB,4CAI9C,SAAS8G,GAAoB7G,GACzB,IACI8B,EAOA9B,EAPA8B,MAAK,EAOL9B,EANAmC,SAAAA,OAAQ,IAAG,GAAK,IAMhBnC,EALAgC,MAAAA,OAAK,IAAG,GAAK,EACbJ,EAIA5B,EAJA4B,MACAiB,EAGA7C,EAHA6C,eACAQ,EAEArD,EAFAqD,iBACGC,oXAAS,CACZtD,EAAK,IAELuD,EASAV,EATAU,YACAC,EAQAX,EARAW,SACAC,EAOAZ,EAPAY,UACAa,EAMAzB,EANAyB,MACAZ,EAKAb,EALAa,aACAE,EAIAf,EAJAe,cACAD,EAGAd,EAHAc,mBACAG,EAEAjB,EAFAiB,WAAU,EAEVjB,EADAiE,UAAAA,OAAS,IAAG,MAAG,EAOnB,SAASzC,EAAgB0C,GACrB,OAAOA,EAASC,KAAI,SAACvC,GAAI,OACrB,gBAAC,YAAkB,CAACC,MAAOD,EAAKC,MAAO9C,MAAO6C,EAAK7C,MAAOd,IAAK2D,EAAK7C,OAAS,GAErF,CAEA,IAA6C,MAAfkD,EAAAA,EAAAA,WAAS,GAAM,GAAtCC,EAAO,KAAEC,EAAU,KACkB,MAAdF,EAAAA,EAAAA,UAAS,MAAK,GAArCG,EAAO,KAAEC,EAAU,MAE1BC,EAAAA,EAAAA,YAAU,WACN,GAAK5B,IAAee,EAApB,CAKA,IAAIc,GAAU,EACRC,EAASC,EAAAA,EAAAA,YAAAA,SAGTL,EAAU,CAAEM,YAAaF,EAAOlE,MAAOqE,aAAa,EAAMC,OAAQ,CAAEC,OAAQ,IA8BlF,OA7BI9B,EACAqB,EAAQU,YAAc/B,EACfL,IACP0B,EAAQ1B,YAAcA,GAGtBF,IACA4B,EAAQQ,OAAS,SAAKR,EAAQQ,QAAWpC,IAExCK,IAAgBL,IACjB2B,GAAW,IACXY,EAAAA,EAAAA,GAAiBX,GACZY,MAAK,SAACC,GACCV,IACAF,EACIb,GACI0B,EAAAA,EAAAA,IAAeD,EAASvB,KAAKyB,MAAOlC,EAAYL,EAAWD,KAGnEwB,GAAW,GAEnB,IAAE,OACK,WACCI,GACAJ,GAAW,EAEnB,KAGD,WACHK,EAAOY,OAAO,uBACdb,GAAU,CACd,CAvCA,CAFIF,EAAWb,EAAgBC,GA2CnC,GAAG,CAACjB,IAEJ,IAAM6C,IAAoBnB,GAAiB5C,EACrCgE,EAAmBpB,EAAU,gBAAC,GAAkB,MAAM,KAEtDkC,EAAYrF,EAAQA,EAAMV,MAAM4F,GAAa,GAEnD,OACI,gCACI,gBAACH,GAAkB,CACfO,OAAQD,EACRjF,MAAOA,EACPsE,KAAMxE,EACNK,SAAU+D,EACViB,eAAgBxD,EAChBtB,SAzEZ,SAAsBV,EAAG,GAAY,IAAVuF,EAAM,EAANA,OACvB5D,EAAUzB,aAAaC,EAAOoF,EAAOE,KAAKN,GAC9C,EAwEY/E,QAAM,GAELkD,GAAWA,EAAQtE,OAAS,GAAKsE,GAErCkB,EAGb,CAEAU,GAAoBxF,UAAY,CAC5Bc,SAAUb,IAAAA,KACVM,MAAON,IAAAA,OACPU,MAAOV,IAAAA,KACPO,aAAcP,IAAAA,KAAAA,WACdQ,MAAOR,IAAAA,OACP+B,iBAAkB/B,IAAAA,OAClBuB,eAAgBvB,IAAAA,MAAgB,CAC5BwF,UAAWxF,IAAAA,OACXqC,mBAAoBrC,IAAAA,KACpBsC,cAAetC,IAAAA,OACfoC,aAAcpC,IAAAA,MACdiC,YAAajC,IAAAA,OACbkC,SAAUlC,IAAAA,OACVmC,UAAWnC,IAAAA,OACXwC,WAAYxC,IAAAA,OACZgD,MAAOhD,IAAAA,QACHA,IAAAA,MAAgB,CACZoD,MAAOpD,IAAAA,OAAAA,WACPM,MAAON,IAAAA,OAAAA,iBAMvB,smCCjJuC,IAEjC+F,GAAiB,okCAOlB,SAPkB,yCACJ,WACP,EAAKrH,MAAM4B,SAAU0F,EAAAA,EAAAA,IAAQ,EAAKtH,MAAM4B,OACxC,EAAK5B,MAAM6B,aAAa,EAAK7B,MAAM8B,MAAO,GAE1C,EAAK9B,MAAM6B,aAAa,EAAK7B,MAAM8B,MAAO,EAElD,UAPmB,2GAOlB,EAaA,SAbA,0BAED,WACI,OACI,gBAAC,KAAM,CACHhB,IAAKmB,KAAKjC,MAAM8B,MAChBF,MAAOK,KAAKjC,MAAM8B,MAClB4E,QAASzE,KAAKJ,aACdM,SAAUF,KAAKjC,MAAMmC,SACrBoF,YAAYtF,KAAKjC,MAAM4B,QAAQ0F,EAAAA,EAAAA,IAAQrF,KAAKjC,MAAM4B,QAClD4E,WAAW,YAGvB,2EAAC,EApBkB,CAAShE,EAAAA,WAuBhC6E,GAAkBhG,UAAY,CAC1BO,MAAON,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OAAkBA,IAAAA,SAC9DO,aAAcP,IAAAA,KAAAA,WACdQ,MAAOR,IAAAA,OACPa,SAAUb,IAAAA,MAGd,+tCC9BA,IAAMkG,IAAkBzH,EAAAA,EAAAA,SAAO0H,KAAP1H,CAAgB,wCAIlC2H,IAAiB3H,EAAAA,EAAAA,SAAO0H,KAAAA,OAAP1H,CAAuB,uDAIxC4H,GAAc,okCAGf,SAHe,yCACD,SAAChG,EAAG,GAAc,IAAZC,EAAK,EAALA,MACjB,EAAK5B,MAAM6B,aAAa,EAAK7B,MAAM8B,MAAOF,EAC9C,UAHgB,2GAGf,EAeA,SAfA,0BAED,WACI,OACI,gBAAC4F,GAAe,CACZzF,QAAM,EACNM,SAAUJ,KAAKJ,aACfD,MAAOK,KAAKjC,MAAM4B,MAClBd,IAAKmB,KAAKjC,MAAM8B,OAEfG,KAAKjC,MAAM6C,eAAeyB,MAAM0C,KAAI,SAACvC,GAAI,OACtC,gBAACiD,GAAc,CAAC5G,IAAK2D,EAAK7C,MAAOA,MAAO6C,EAAK7C,MAAO8C,MAAOD,EAAKC,OAAS,IAIzF,2EAAC,EAlBe,CAASlC,EAAAA,WAqB7BmF,GAAetG,UAAY,CACvBO,MAAON,IAAAA,OACPO,aAAcP,IAAAA,KAAAA,WACdQ,MAAOR,IAAAA,OACPuB,eAAgBvB,IAAAA,QAGpB,uCCrCA,SAASsG,GAAqB5H,GAC1B,IAAQ6H,EAAiB7H,EAAM6C,eAAvBgF,aAER,OAAO,gBAAC,KAAa,KAAEA,EAC3B,CAEAD,GAAqBvG,UAAY,CAC7BwB,eAAgBvB,IAAAA,QAGpB,suCCTiD,IAE3CwG,GAAa,63BAiBf,WAAY9H,GAAO,MAKU,mGALV,SACF,MAAb,cAAMA,IAAO,YAwCN,SAAC+H,GACR,EAAK/H,MAAM6B,aAAa,EAAK7B,MAAM8B,MAAOiG,EAC9C,IAzCI,EAAKC,MAAQ,CACTjD,SAAS,GAEb,EAAKkD,cAAe,EAAK,CAC7B,CAqDC,SArDA,qCAED,WAAoB,WACVC,GAAeC,EAAAA,EAAAA,MACfC,EAAUF,EAAaG,KAAK/B,KAElCwB,EAAcQ,kBACVrG,KAAKjC,MAAM6C,eAAe0F,IAC1BtG,KAAKjC,MAAM6C,eAAeP,KAC1B8F,GACFvC,MAAK,SAAC2C,GACJ,IAAMC,EAAgB,IAAID,EACtBN,EACA,EAAKQ,GACL,EAAK1I,MAAMuE,KACX,EAAKoE,SACL,EAAK3I,MAAM4I,qBAEfH,EAAcI,SAE0B,mBAA7BJ,EAAcK,YACrB,EAAK9I,MAAM+I,mBAAmB,EAAK/I,MAAM8B,MAAO2G,EAAcK,YAElE,EAAKE,SAAS,CAAEjE,SAAS,GAC7B,GACJ,GAAC,mCAED,SAAsBkE,EAAWC,GAC7B,QAAKA,EAAUnE,UAAW9C,KAAKgG,eAC3BhG,KAAKgG,cAAe,EACb,GAGf,GAAC,oBAMD,WAAS,WACL,OACI,gCACKhG,KAAK+F,MAAMjD,UAAWoE,EAAAA,GAAAA,GAAE,cAErB,wBACIC,IAAK,SAACV,GACF,EAAKA,GAAKA,CACd,EACAW,MAAO,CAAEC,WAAYrH,KAAK+F,MAAMjD,QAAU,SAAW,aAKzE,2EAAC,EA5Ec,CAASvC,EAAAA,WAAS,GAA/BsF,GAAa,qBACY,SAACyB,EAAQjH,EAAM8F,GAAO,OAC7C,IAAIoB,SAAQ,SAACC,GACI,aAATnH,EACAoH,OAAgC,GAAzB,QAA6BC,EAAAA,GAAAA,KAAiB,mBAAWJ,EAAM,QAAO1D,MACzE,SAAC+D,GACG,IAAMpB,EAAUoB,EAAQ,QACxBH,EAAQjB,EACZ,IAGJqB,QAAwB,CAAC,OAAD,OAAQzB,EAAO,4BAAoBmB,KAAW,SAACf,GACnEiB,EAAQjB,EACZ,GAER,GAAE,IAgEVV,GAAczG,UAAY,CACtBkD,KAAMjD,IAAAA,OACNQ,MAAOR,IAAAA,OACPO,aAAcP,IAAAA,KACduB,eAAgBvB,IAAAA,OAChByH,mBAAoBzH,IAAAA,KACpBsH,oBAAqBtH,IAAAA,QAGzB,glCCxFA,IAAMwI,IAAc/J,EAAAA,EAAAA,SAAOgK,KAAPhK,CAAY,kRCJ1BiK,IAAqBjK,EAAAA,EAAAA,SAAOkK,KAAPlK,CAAoB,03ECYxC,SAASmK,GAAWC,GACvB,IAAMC,EAAY,IAAIC,IAEtB,OAAKF,GAIeA,EAAWjJ,MAAM,KACzBsD,SAAQ,SAAC8F,GACjB,IAA+C,KAAnBA,EAASpJ,MAAM,KAAI,GAAxCY,EAAK,KAAEyI,EAAU,KAClBC,EAAkC,KAAfD,OAAoBE,EAAYC,OAAOH,GAChE,IAAKzI,GAAS4I,OAAOC,MAAMH,GACvB,MAAM,IAAII,MAAM,0BAAD,OAA2BT,IAG9CC,EAAUS,IAAI/I,EAAO,CACjBgJ,UAAU,EACVP,WAAYC,GAEpB,IAEOJ,GAjBIA,CAkBf,CAEO,SAASW,GAAU/D,GACtB,OAAOgE,MAAMC,KAAKjE,EAAIkE,WACjB3E,QAAO,YAAS,OAAT,QAAS,GAAYuE,QAAQ,IACpC9D,KAAI,0BAAElF,EAAK,YAAIyI,WAAAA,OAAU,IAAG,KAAE,kBAAWzI,EAAK,YAAIyI,EAAU,IAC5DnD,KAAK,IACd,CAyCO,SAAS+D,GAAgB1G,GAC5B,MAAO,UAAWA,CACtB,8JCnFA,IAAM2G,GAAerL,EAAAA,QAAAA,IAAU,oFAMzBsL,IAA0BtL,EAAAA,EAAAA,SAAOuL,KAAPvL,CAAwB,+VAgBlDwL,GAAiBxL,EAAAA,QAAAA,IAAU,sEAK3ByL,GAAmBzL,EAAAA,QAAAA,IAAU,sLAS7B0L,GAAc1L,EAAAA,QAAAA,KAAW,6FAsC/B,SAxBA,SAAe,GAAyE,IAAvE2L,EAAY,EAAZA,aAAcC,EAAW,EAAXA,YAAa/G,EAAQ,EAARA,SAAUgH,EAAK,EAALA,MAAOC,EAAW,EAAXA,YACzD,OACI,gBAACT,GAAY,KACRM,EACG,gBAACL,GAAuB,CACpBO,MAAOA,EACPD,YAAaA,EACbE,YAAaA,GAEb,gBAACN,GAAc,KAAE3G,IAGrB,gCACI,gBAAC4G,GAAgB,KACb,4BAAOI,GACP,gBAACH,GAAW,KAAEI,IAElB,2BAAMjH,IAK1B,2ICrEA,IAAMkH,IAAe/L,EAAAA,EAAAA,SAAOgM,KAAPhM,CAAc,2JA0DnC,SA7CA,SAAqBC,GACjB,QAAQ8B,EAA0D9B,EAA1D8B,MAAO4C,EAAmD1E,EAAnD0E,MAAOoG,EAA4C9K,EAA5C8K,SAAUkB,EAAkChM,EAAlCgM,MAAO7J,EAA2BnC,EAA3BmC,SAAUN,EAAiB7B,EAAjB6B,aAE0B,MAA/BiD,EAAAA,EAAAA,WAAUgG,GAAY3I,KAAS,s5BAApE8J,EAAc,KAAEC,EAAiB,KAexC,OAbA/G,EAAAA,EAAAA,YAAU,WACN+G,GAAmBpB,GAAY3I,EACnC,GAAG,CAAC2I,EAAU3I,IAYV,gBAAC6H,GAAkB,KACf,gBAAC,SAAgB,KACb,gBAAC,KAAAmC,OAAmB,CAACC,KAAM,GACvB,gBAACN,GAAY,CACThL,IAAKgB,EACLF,MAAOE,EACPyF,SAAUuD,EACVpE,QAbS,SAAC2F,EAAgB9H,GAC1C,IAAM+H,EAAgB/H,EAAKgD,SAC3B1F,EAAa,CAAEC,MAAAA,EAAOyI,WAAYyB,EAAOlB,UAAWwB,GACxD,EAWoB9F,WAAW,WACXrE,SAAUA,GAETuC,IAGT,gBAAC,KAAAyH,OAAmB,CAACC,KAAM,GACvB,gBAAC,KAAe,CACZrK,QAAM,EACNI,SAAU8J,EACVpE,aAAcmE,EACd3J,SA7B2B,SAACgK,EAAgB,GAAc,IAAZzK,EAAK,EAALA,MAC9DC,EAAa,CAAEC,MAAAA,EAAOyI,WAAY3I,EAAOkJ,SAAAA,GAC7C,MAiCJ,ECxCA,GApBA,SAA4B,GAQzB,QAPCyB,EAAG,EAAHA,IACArF,EAAM,EAANA,OACAsF,EAAe,EAAfA,gBAMMC,EAAgBvF,EAAOwF,IAAIH,EAAIzK,OACrC,OACI,gBAAC,GAAW,CACRA,MAAOyK,EAAIzK,MACX4C,OAAmB,QAAZ,EAAA6H,EAAIzB,gBAAQ,aAAZ,EAAcpG,QAAS6H,EAAIzK,MAClCgJ,WAAY2B,UAAAA,EAAe3B,UAC3BkB,MAAOS,EAAgBA,EAAclC,WAAsB,QAAZ,EAAGgC,EAAIP,aAAK,aAAT,EAAWnE,aAC7DhG,aAAc2K,GAG1B,SCjBMG,GAA2B5M,EAAAA,QAAAA,IAAU,sMAmC3C,SAvBA,SAA0B,GAA2D,QAAzD6M,EAAK,EAALA,MAAO1F,EAAM,EAANA,OAAQsF,EAAe,EAAfA,gBACjCK,EJiHH,SAAmCD,EAAsB1F,GAC5D,IAAI2F,EAAyB,EAM7B,OALAD,EAAME,KAAKtI,SAAQ,SAAC+H,GAAQ,MACC,QAAzB,EAAIrF,EAAOwF,IAAIH,EAAIzK,cAAM,OAArB,EAAuBgJ,WACvB+B,GAA0B,EAElC,IACOA,CACX,CIzHmCE,CAA0BH,EAAO1F,GAChE,OACI,gBAAC,GAAK,CACF0E,MAAOgB,EAAMlI,MACbmH,YAAW,UAAKgB,EAAsB,eAAOD,EAAMI,OAAOrM,QAC1D+K,aAA2B,QAAf,EAAEkB,EAAM3H,eAAO,aAAb,EAAeyG,aAC7BC,YAA0B,QAAf,EAAEiB,EAAM3H,eAAO,aAAb,EAAegI,QAE5B,gBAACN,GAAwB,KACpBC,EAAME,KAAK9F,KAAI,SAACkG,GAAc,OAC3B,gBAAC,GAAkB,CACfX,IAAKW,EACLhG,OAAQA,EACRsF,gBAAiBA,EACjB1L,IAAG,cAASoM,EAAepL,QAC7B,KAKtB,6ICkEA,MC7FA,IACIgJ,SAAUzD,GACV8F,cDIJ,SAAuBnN,GACnB,ILsEqC,EAAEoN,EAAQN,EACzCO,EKvEEvL,EAA4D9B,EAA5D8B,MAAOD,EAAqD7B,EAArD6B,aAAcgB,EAAuC7C,EAAvC6C,eAAgBkG,EAAuB/I,EAAvB+I,mBAEvCuE,GLoEiCF,GAAF,EKpEoBvK,GLoElBuK,OAAQN,EAAI,EAAJA,KACzCO,EAAyD,GAE/DP,EAAKtI,SAAQ,SAAC+H,GACV,IAAMgB,EAAkBH,aAAM,EAANA,EAAQI,MAAK,SAACZ,GAAK,OAAKA,EAAMI,OAAOS,SAASlB,EAAIzK,MAAM,IAChF,GAAIyL,EAAiB,CACjB,IAAMG,EAAaL,EAA2BG,MAC1C,SAAC/I,GAAI,OACD0G,GAAgB1G,IAASA,EAAKC,QAAU6I,EAAgB7I,KAAK,IAE/DiJ,EAAaD,GAAc,SAC1BH,GAAe,IAClBT,KAAM,KAMV,OAJAa,EAAWb,KAAKnI,KAAK4H,QAChBmB,GACDL,EAA2B1I,KAAKgJ,GAGxC,CACAN,EAA2B1I,KAAK4H,EACpC,IAEOc,GK1FDO,EAAwB5N,EAAM6N,OAASC,GAAAA,IAA+B,OAAhB9N,EAAM4B,MAC5DA,EAAQgM,ELuHX,SAA0Bd,GAC7B,IAAM1C,EAAY,IAAIC,IActB,OAZAyC,EAAKtI,SAAQ,SAAC+H,GACV,IAAKpB,GAAgBoB,GAAM,OAEwB,EADzCwB,EAAmC,QAAf,EAAGxB,EAAIzB,gBAAQ,aAAZ,EAAcjD,aACP,kBAAzBkG,GACP3D,EAAUS,IAAI0B,EAAIzK,MAAO,CACrBgJ,SAAUiD,EACVxD,WAAqB,QAAX,EAAEgC,EAAIP,aAAK,aAAT,EAAWnE,cAGnC,CACJ,IAEOuC,CACX,CKtIU4D,CAAiBnL,EAAeiK,MAChC5C,GAAWlK,EAAM4B,QAGvBuD,EAAAA,EAAAA,YAAU,WACFyI,GACA/L,EAAaC,EAAOiJ,GAAUnJ,GAAQ,gBAE9C,GAAG,CAACE,EAAOD,EAAc+L,EAAuBhM,IAEhD,QAA2C,MAAfkD,EAAAA,EAAAA,UAASlD,KAAM,s5BAApCsF,EAAM,KAAE+G,EAAS,MEwBrB,SACHlF,EACAjH,EACAe,IAEAsC,EAAAA,EAAAA,YAAU,WACN4D,SAAAA,EAAqBjH,GAAO,SAACoM,EAAgBC,GACzC,IAAMC,EAtDX,SACHtM,EACAuM,EACApJ,GAEA,IAAIqJ,GAA2B,EACzBC,EAAcrE,GAAWmE,GAsC/B,OArCApJ,EAAQ6H,KAAK0B,MAAK,SAACjC,GACf,IAAMkC,EAAoBF,EAAY7B,IAAIH,EAAIzK,OAC9C,GAAI2M,EAAmB,WACM,EAUU,EAVnC,GAAa,QAAb,EAAIlC,EAAIP,aAAK,OAAT,EAAW3F,SAOX,OANAiI,EAAeI,GAAAA,EAAAA,kBACX5M,GACY,QAAZ,EAAAyK,EAAIzB,gBAAQ,aAAZ,EAAcpG,QAAS6H,EAAIzK,MAC3B2M,EAAkBlE,YAM1B,GAAa,QAAb,EAAIgC,EAAIP,aAAK,OAAY,QAAZ,EAAT,EAAW2C,kBAAU,OAArB,EAAuBhO,OACvB,OAAgB,QAAhB,EAAO4L,EAAIP,aAAK,aAAT,EAAW2C,WAAWH,MAAK,SAACI,GAAc,MACrCtM,EAASsM,EAATtM,KACR,GACS,WADDA,EASA,OAPAgM,EAAeI,GAAAA,EAAAA,gBACX5M,GACY,QAAZ,EAAAyK,EAAIzB,gBAAQ,aAAZ,EAAcpG,QAAS6H,EAAIzK,MAC3B8M,EACAH,EAAkBlE,YAMtB,MAAM,IAAIK,MAAM,yCAAD,OAC8BtI,EAAI,sBAAcR,GAG3E,GAER,CACA,OAAO,CACX,IACOwM,CACX,CASqCO,CACrBX,EACAC,EACAtL,GAEJ,OAAyB,IAArBuL,EACOA,EAAiBU,SAErBV,CACX,GACJ,GAAG,CAACtM,EAAOiH,EAAoBlG,GACnC,CFxCIkM,CAAchG,EAAoBjH,EAAOe,GACzC,IAAM2J,EAAkB,SAACzE,GACrB,IAAMiH,EL6EP,SACH9H,EACAa,GAMA,IAAMiH,EAAY,IAAI3E,IAAInD,GAM1B,OALA8H,EAAUnE,IAAI9C,EAASjG,MAAO,CAC1BgJ,SAAU/C,EAAS+C,SACnBP,WAAYxC,EAASwC,aAGlByE,CACX,CK5F0BC,CAAqB/H,EAAQa,GAE/CkG,EAAUe,GACVnN,EAAaC,EAAOiJ,GAAUiE,GAAY,gBAC9C,EAEME,EAA0B,SAACC,GAC7B,IAAMH,EAAY,IAAI3E,IAAInD,GAE1BrE,EAAeiK,KAAKtI,SAAQ,SAAC+H,GAAQ,MAC3B6C,EAAWlI,EAAOwF,IAAIH,EAAIzK,SAC1BsN,UAAAA,EAAUtE,YAAaqE,GAG7BH,EAAUnE,IAAI0B,EAAIzK,MAAO,CACrBgJ,SAAUqE,EACV5E,YAAY6E,aAAQ,EAARA,EAAU7E,cAAuB,QAAb,EAAIgC,EAAIP,aAAK,aAAT,EAAWnE,eAEvD,IACAoG,EAAUe,GACVnN,EAAaC,EAAOiJ,GAAUiE,GAAY,gBAC9C,EAEA,OACI,gCACI,gBAAChF,GAAkB,CAACqF,OAAQ,GACvB/B,EAAwBtG,KAAI,SAACuF,GAC1B,OAAIpB,GAAgBoB,GAGZ,gBAAC,SAAgB,CAACzL,IAAG,gBAAWyL,EAAI7H,QAChC,gBAAC,GAAgB,CACbkI,MAAOL,EACPrF,OAAQA,EACRsF,gBAAiBA,KAM7B,gBAAC,SAAgB,CAAC1L,IAAG,cAASyL,EAAIzK,QAC9B,gBAAC,GAAkB,CACfyK,IAAKA,EACLrF,OAAQA,EACRsF,gBAAiBA,IAIjC,IACA,gBAAC,SAAgB,OAErB,2BACI,gBAAC,IAAM,CACH9H,MAAM,aACN8B,WAAW,OACXE,QAAS,kBAAMwI,GAAwB,EAAK,IAEhD,gBAAC,IAAM,CACHxK,MAAM,YACN8B,WAAW,OACXE,QAAS,kBAAMwI,GAAwB,EAAM,KAKjE,ECxFII,OAAQxH,GACRyH,KRgCJ,SAA4BvP,GACxB,IAAQ8B,EAAgF9B,EAAhF8B,MAAOK,EAAyEnC,EAAzEmC,SAAUU,EAA+D7C,EAA/D6C,eAAgBhB,EAA+C7B,EAA/C6B,aAAc2N,EAAiCxP,EAAjCwP,kBAAmBjN,EAAcvC,EAAduC,UAEtEkN,EAGA5M,EAHA4M,mBACAC,EAEA7M,EAFA6M,mBAAkB,EAElB7M,EADA8M,YAAAA,OAAW,IAAG,EUpDH,IVoD8B,EAGvCC,EAAa,IAAIC,WACjBC,EAAc,IAAIC,YAMwD,MAAhDjL,EAAAA,EAAAA,UAAwB0K,GAAqB,IAAG,GAAzEQ,EAAQ,KAAEC,EAAW,KAS3B,MAF+BnL,EAAAA,EAAAA,UAC5B0K,GAAqBjN,EUrEP,4BVqEoD,IACrE,GAFMuM,EAAQ,KAAEoB,EAAW,KAiD5B,OACI,gBAACpG,GAAW,CACRhJ,IAAKgB,EACLqO,aAhDe,SAACC,GACpB,GAAIA,EAAMzP,OAAQ,CACd,IAAM4O,EAAOa,EAAM,GAEW,IAA1BR,EAAWS,YACXT,EAAWU,QAGfV,EAAWW,kBAAkBhB,GAE7BK,EAAWY,OAAS,WAChB,IAAMC,EA1DtB,SACIC,EACAC,EACAjB,EACAC,GAEA,OAAKe,GAAahB,EAAmBjC,SAASiD,KAS1CC,EAAWhB,IACJ,wBAAMtG,MAAO,CAAEpJ,MAAO,SAAU2Q,EAAAA,GAAAA,GAAoB,GAAI,CAACjB,KAR5D,wBAAMtG,MAAO,CAAEpJ,MAAO,SACjB2Q,EAAAA,GAAAA,GAAkD,IAA9BlB,EAAmB/O,OAAe,GAAK,GAAI,CAC5D+O,EAAmBtI,KAAK,QAS5C,CAuCgCyJ,CACZtB,EAAKjJ,KAAKpF,MAAM,KAAKE,MACrBmO,EAAKuB,KAAO,KACZpB,EACAC,GAEJ,IAAgB,IAAZc,EAAkB,CAClBP,EAAY,IACZ,IACQN,EAAWmB,QAAuC,iBAAtBnB,EAAWmB,QACvClP,EAAaC,EAAOgO,EAAYkB,OAAOpB,EAAWmB,QAE1D,CAAE,MAAOE,GAELC,QAAQC,IAAIF,EAChB,CACJ,MACIf,EAAYO,GACZ5O,EAAaC,EUpGP,oBVsGVmO,EAAYV,EAAKjJ,KACrB,CACJ,CACJ,EAeQ8K,gBAbiB,WACS,IAA1BxB,EAAWS,YACXT,EAAWU,QAEfL,EAAY,MACZpO,EAAaC,EAAO,IACpBoO,EAAY,GAChB,EAOQmB,gBAAiB,gCAAE,IAAE5B,EAAmB,KACxCtN,SAAUA,EACVmP,KAAMxC,EACN9M,QAAS8M,GAERkB,GAAY,gBAAC,UAAS,CAAC1J,KAAM0J,IAG1C,EQnHIuB,SGPJ,SAA2BvR,GACvB,MAAuBA,EAAM6C,eAArBzC,EAAI,EAAJA,KAAMG,EAAI,EAAJA,KAEd,OACI,gBAAC,IAAI,CAACD,GAAIC,EAAMiR,kBAAgB,GAC3BpR,EAGb,EHAIqR,eAAgB5K,GAChB6K,YAAa9J,GACb+J,MAAOhK,GACPiK,aAAcxO,GACdhD,KAAMsB,EACNmQ,SAAUnP,mkCIfd,aAAMoP,GAAgB/R,EAAAA,QAAAA,IAAU,6CAI1BgS,IAAsBhS,EAAAA,EAAAA,SAAOiS,KAAcC,OAAM,SAACjS,GAAK,MAAM,CAC/D,YAAaA,EAAMkS,SACtB,GAF2BnS,CAEzB,+VAmBGoS,GAAc,o/BAGhB,WAAYnS,GAAO,MAIJ,mGAJI,UACf,cAAMA,IACDoS,YAAcD,EAAeE,SAASrS,EAAMsS,OAAOhQ,MAClDiQ,GAAiBvS,EAAMsS,OAAOhQ,MAC9B,KAAK,CACf,CAkFC,SAlFA,0BAED,WACI,IAcIkQ,EAdJ,EAQIvQ,KAAKjC,MAAMsS,OAPXxQ,EAAK,EAALA,MACAQ,EAAI,EAAJA,KACAoC,EAAK,EAALA,MACA+N,EAAO,EAAPA,QACAnB,EAAI,EAAJA,KAAI,IACJ/O,UAAAA,OAAS,IAAG,GAAK,EACjB8D,EAAQ,EAARA,SAEJ,EAAkEpE,KAAKjC,MAAM0S,cAArE7Q,EAAY,EAAZA,aAAckH,EAAkB,EAAlBA,mBAAoBH,EAAmB,EAAnBA,oBAG1C,EACI3G,KAAKjC,MAAM2S,iBAAmB,CAAC,EAD3BvS,EAAI,EAAJA,KAAMG,EAAI,EAAJA,KAAMN,EAAK,EAALA,MAAOI,EAAY,EAAZA,aAAcc,EAAK,EAALA,MAAOJ,EAAQ,EAARA,SAGhD,GAA+B,WAA3BkB,KAAKjC,MAAMsS,OAAOhQ,KAAmB,CACrC,IAAMiC,EAAO,CACT3C,MAAOK,KAAKjC,MAAM4B,MAClBiM,KAAM5L,KAAKjC,MAAM6N,KACjBlI,YAAa1D,KAAKjC,MAAM2F,aAG5B6M,EAAUvQ,KAAKmQ,YACT7Q,EAAAA,cAAoBU,KAAKmQ,YAAa,CAClC7N,KAAAA,EACAzC,MAAAA,EACAD,aAAAA,EACAkH,mBAAAA,EACAH,oBAAAA,EACA/F,eAAgBZ,KAAKjC,MAAMsS,OAAOrN,UACpC,4BACmB3C,EAAI,QACnC,MACIkQ,EAAUvQ,KAAKmQ,YACT7Q,EAAAA,cAAoBU,KAAKmQ,YAAa,CAClCvQ,aAAAA,EACAD,MAAOK,KAAKjC,MAAM4B,MAClBE,MAAAA,EACAe,eAAgBZ,KAAKjC,MAAMsS,OAAOrN,QAClCjD,MAAOC,KAAKjC,MAAMgC,MAClBG,SAAUF,KAAKjC,MAAMmC,SACrBI,UAAAA,EACAc,iBAAkBpB,KAAKjC,MAAMqD,iBAC7BgD,SAAAA,EACA0C,mBAAAA,EACAyG,kBAAmBvN,KAAKjC,MAAMwP,kBAC9B3B,KAAM5L,KAAKjC,MAAM6N,OACnB,4BACmBvL,EAAI,SAGnC,IAAMsQ,EACF,gCACI,gBAAC,EAAe,CACZxS,KAAMA,GAAQ,GACdG,KAAMA,GAAQ,GACdN,MAAOA,GAAS,GAChBI,aAAcA,GAAgB,GAC9Bc,MAAOA,GAAS,GAChBJ,SAAUA,GAAY,KAEzBuQ,GAIT,OACIrP,KAAKjC,MAAM6S,SACP,gBAACd,GAAmB,CAChBrN,MAAOA,EACP4M,KAAMsB,EACNH,QAASA,EACTzQ,MAAOC,KAAKjC,MAAMgC,MAClBkQ,SAAUpQ,EACVuE,SAAUA,GAEV,gBAACyL,GAAa,KAAEU,GAIhC,2EAAC,EA1Fe,CAASjR,EAAAA,kBAAvB4Q,MACgB,SAACW,GAAG,SAAuB,iBAARA,GAAoBA,aAAeC,OAAO,YAD/D,8GA6FpBZ,GAAe9Q,UAAY,CACvBwM,KAAMvM,IAAAA,OACNoR,cAAepR,IAAAA,OACfM,MAAON,IAAAA,IACPuR,QAASvR,IAAAA,KACTU,MAAOV,IAAAA,KACPgR,OAAQhR,IAAAA,OACRa,SAAUb,IAAAA,KACVqR,gBAAiBrR,IAAAA,OACjBqE,YAAarE,IAAAA,OACb+B,iBAAkB/B,IAAAA,OAClBkO,kBAAmBlO,IAAAA,QAGvB,4BCxIa0R,GACT,oUCJJ,knGAAAtS,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4zBAAAA,EAAA,EAAAA,EAAA,iBAAAA,IAAA,uBAAAA,GAAA,UAAAA,GAAA,GAAAA,EAAA,88BAAAA,EAAA,iBAAAA,EAAA,EAAAA,IAAA,EAAAA,GAAA,EAAAA,GAAA,kCAAAA,EAAA,EAAAA,EAAA,SAAAA,IAAA,SAAAA,GAAA,65BAyBA,SAASuS,GAAkBxN,GAAQ,QAE/ByL,QAAQlP,MAAM,oDAAD,OAC2CyD,EAAOyN,WAAU,oBAAwB,QAAxB,EAAYzN,EAAOzD,aAAK,aAAZ,EAAcsE,KAAI,YAAgB,QAAhB,EAAIb,EAAOzD,aAAK,aAAZ,EAAcmR,SAE7H,CAAC,IAEKC,GAAY,aAhClB,sRAgCkB,UAhClB,QAgCkB,GAhClB,EAgCkB,EAhClB,ikBAmCI,WAAYpT,EAAOqT,GAAS,OAnChC,4FAmCgC,SAExB,MADA,cAAMrT,IACN,uBAsVkB,WACd,EAAKoN,QACL,EAAKA,OAAO5I,SAAQ,SAACoI,GACjBA,EAAMI,OAAOxI,SAAQ,SAAC8O,GAAS,OAAK,EAAKC,cAAc5O,KAAK2O,EAAU,GAC1E,GAER,IAAC,yBAGc,WAUX,GATA,EAAKE,gBACL,EAAKxT,MAAMyT,kBAAoC,GAAwB,GAEvE,EAAKC,SAAW,CAAC,EAEjBC,OAAOC,KAAK,EAAK5L,MAAMzD,MAAMC,SAAQ,SAAC1C,GAClC,EAAK4R,SAAS5R,GAAS,EAAKkG,MAAMzD,KAAKzC,GAAOF,KAClD,KAEI,EAAKiS,MAAoC,mBAArB,EAAKA,KAAKC,QACP,EAAKD,KAAKC,OAAO,EAAKJ,UADjD,CAOA,IAAMK,EAA0B,WAOxB,IAkBAC,EAnBJ,GALAL,OAAOC,KAAK,EAAK5L,MAAMzD,MAAMC,SAAQ,SAAC1C,GAClC,EAAK4R,SAAS5R,GAAS,EAAKkG,MAAMzD,KAAKzC,GAAOF,KAClD,IAGI,CAACkM,GAAAA,GAAamG,GAAAA,IAAYxG,SAAS,EAAKzN,MAAM6N,OACvBqG,QACnBP,OAAOzM,OAAO,EAAKmM,QAAQc,SAAS3G,MAAK,SAAC4G,GAAG,OACzCT,OAAOC,KAAKQ,GAAK5G,MAAK,SAAClH,GAAI,OAAKA,IAAS,EAAKoN,SAASpN,IAAI,GAAC,KAIhD,CAChB,IAAM+N,EAAQ,EAAKC,SAASC,WAAU,SAAC5S,GAAC,MAAiB,SAAZA,EAAEG,KAAgB,IAM/D,OALA,EAAK0S,iBACD,QACA5D,EAAAA,GAAAA,GAAoB,EAAG,CAAC,EAAK0D,SAASD,GAAO3P,MAAO,EAAKgP,SAASpN,aAEtE,EAAKtG,MAAMyT,kBAAoC,GAAyB,EAE5E,CAKJ,GAAI,EAAKgB,QAAS,CACd,IAAIC,EAAY,GAChBf,OAAOC,KAAK,EAAKe,SAASnQ,SAAQ,SAAClC,GAE3BA,IAAS,EAAKoR,SAASkB,WAAc,EAAKC,YAC1CH,EAAY,GAAH,UAAOA,GAAS,GAAK,EAAKC,QAAQrS,KAEnD,IACA0R,EAAc,EAAKM,SAAStN,KAAI,SAACrF,GAC7B,OAAI+S,EAAUjH,SAAS9L,EAAEG,OAEd,IAAEuE,UAAU,GAAS1E,GAEzBA,CACX,GACJ,MACIqS,EAAc,EAAKM,SAIvB,IACItS,EADc,IAAI0M,GAAAA,EAAUsF,GACVc,aAAa,EAAKpB,UAUxC,GATI1R,EACA,EAAKwS,iBAAiBxS,EAAM+S,WAAY/S,EAAM8M,UACvC,EAAK7J,SAAW,EAAKA,QAAQ+P,gBACpChT,GAAQiT,EAAAA,GAAAA,GAAc,EAAKhQ,QAAQ+P,cAAe,EAAKtB,YAEnD,EAAKxD,YAAYlO,EAAM8M,UAI3B9M,EACA,EAAKhC,MAAMyT,kBAAoC,GAAyB,QACrE,GACH,EAAKgB,UACJ,EAAKS,eAAkB,EAAKL,WAAyC,UAA5B,EAAKnB,SAASkB,WAC1D,CAGE,IAAIO,EAAa,iCAAH,OAAoC,EAAKzB,SAAS0B,UAAS,yBAAiB,EAAK1B,SAAS2B,cAElGC,EAAoC,MAArB,EAAKC,cAAuB,EAAKA,aACjC,SAAjBD,IAA4C,IAAjBA,IAC3B,EAAKE,eAAgB,EAErB,EAAKC,aAAcC,EAAAA,EAAAA,KAASC,QAAQ,KAAM,IAG1CR,EAAa,GAAH,OAAMA,EAAU,kBAAU,EAAKM,cAGzC,EAAK/B,SAASkC,QACdT,EAAa,GAAH,OAAMA,EAAU,kBAAU,EAAKzB,SAASkC,QAGlD,EAAKC,UAAUC,8BACfX,EAAa,GAAH,OAAMA,EAAU,8BAAsB,EAAKU,UAAUC,8BAGnE,IAAIC,EAAOC,UAAU,WAAD,OACL,EAAKtC,SAASuC,UAAQ,OAAG,EAAKJ,UAAUK,kBAAgB,OAAGf,IAEpEgB,EAAc,IAAIC,gBAAgBL,GAAMrJ,IAAI,gBAClDqJ,EAAOA,EAAKJ,QAAQQ,EAAaE,mBAAmBF,IAEpD,cAAC,+EAkBG,OAjBA,EAAKG,UAAW,EAChB,EAAKC,SAAU,EACf,EAAKC,YAAa,EAIlB,EAAKC,SAAWC,OAAOC,KACnBZ,EAAI,UACD,EAAK3N,QAAO,0BACN,EAAKyN,UAAUe,WAAU,oBAAY,EAAKf,UAAUgB,cAGjEH,OAAOI,WAAa,SAAC3D,GACjB,EAAKmD,UAAW,EAEhB,EAAKS,iBAAiB5D,EAC1B,EACA,SACM,EAAK6D,sBAAsB,EAAKnB,UAAUoB,aAAY,UAEvD,EAAKX,WAAY,EAAKG,SAASS,OAAM,iBAMpC,OAJF,EAAKhH,YDjgBzB,yDCkgBoB,EAAKlQ,MAAMyT,kBACY,GACD,GACpB,mBACK,GAAK,WAGX,EAAK6C,SAAU,CAAF,gBAMZ,OAJF,EAAKpG,YDjhBzB,4DCkhBoB,EAAKlQ,MAAMyT,kBACY,GACD,GACpB,mBACK,GAAK,yBAKV,EAAK0D,uBAAuB,IAAG,WAEhC,EAAKX,YAAe,EAAKD,QAAO,iBAS/B,OAPF,EAAKA,SAAU,EAGf,EAAKrG,YDhiBzB,iECiiBoB,EAAKlQ,MAAMyT,kBACY,GACD,GACpB,mBACK,GAAK,kCAET,GAAI,2CAzDf,GA0DK5N,MAAK,WACD,EAAK0Q,QAGN,EAAKvW,MAAMyT,kBACY,GACD,GAJtB,EAAK2D,UAOb,GACJ,MACI,EAAKA,UAEb,EAEI,EAAKvD,MACuB,mBAArB,EAAKA,KAAKC,aACa,IAAvB,EAAKuD,cAEZ,EAAKA,cAAcxR,MAAK,WACpBkO,GACJ,IAEAA,GA7KJ,MAHQ,EAAK/T,MAAMyT,kBAAoC,GAAyB,EAkLpF,IAAC,qBAEU,WACP,IAAM6D,EAAO,IAAIlB,gBACjBzC,OAAOC,KAAK,EAAKF,UAAUlP,SAAQ,SAAC1D,GACN,MAAtB,EAAK4S,SAAS5S,KAGoB,WAA9B,GAAO,EAAK4S,SAAS5S,KAC+B,SAApD,EAAKwT,SAAS9G,MAAK,SAAC+J,GAAC,OAAKA,EAAEzV,QAAUhB,CAAG,IAAEwB,KAE3CgV,EAAKE,OAAO1W,EAAK,EAAK4S,SAAS5S,GAAK2W,aAEpCH,EAAKE,OAAO1W,EAAK,EAAK4S,SAAS5S,IAG3C,IAGI,EAAK+T,WACLlB,OAAOC,KAAK,EAAKe,SAASnQ,SAAQ,SAAClC,GAC3B,EAAKoR,SAASkB,YAActS,GAC5B,EAAKqS,QAAQrS,GAAMkC,SAAQ,SAAC7C,GACxB2V,EAAKzM,IAAIlJ,EAAG,GAChB,GAER,IAGA,EAAK8S,SAEL6C,EAAI,OAAQ,gBAEZ,EAAKtX,MAAM6N,OAAS6J,GAAAA,IACpBJ,EAAI,OAAQ,SAGhB1R,EAAAA,EAAAA,GAAiB,CACbD,YAAa,EAAKsQ,SAClBqB,KAAAA,EACAK,cAAe,CAAE,eAAgB,qCACjCC,OAAQ,OACRpS,aAAa,IAEZK,MAAK,SAACC,GAAa,MACVsO,EAAMtO,SAAc,QAAN,EAARA,EAAUvB,YAAI,WAAN,EAAR,EAAgByB,MAAM,GAClC,GAAI,EAAKhG,MAAM6N,OAASgK,GAAAA,GAAa,CACjC,IAAMC,EAAS,CAAC,EAEhBA,EAAO1D,EAAI9N,MAAQ,YAEZ,EAAKoN,UACLU,EAAI2D,SAAO,IACdC,GAAI5D,EAAI4D,GACR1R,KAAM8N,EAAI9N,KACVX,YAAa,EAAK3F,MAAM2F,cAG5B,EAAK0N,QAAQ4E,WACTC,IAAO,EAAK7E,QAAQc,QAAS,MACxB,EAAKnU,MAAM2F,YAAc,CAAEwS,OAAQL,KAGhD,CACI,EAAKjE,MAA2C,mBAA5B,EAAKA,KAAKuE,eAC9B,EAAKvE,KAAKuE,gBAEV,EAAKpY,MAAM6N,OAAS6J,GAAAA,IACpBW,EAAAA,EAAAA,IAAc,YAAD,OAAajE,EAAI9N,KAAI,KAAK,WAChC,EAAKtG,MAAM6N,OAASgK,GAAAA,IAC3BQ,EAAAA,EAAAA,IAAc,YAAD,OACG,EAAKC,kBAAoB,EAAKA,kBAAoBlE,EAAI9N,KAAI,KACtE,YAGJ+R,EAAAA,EAAAA,IAAc,YAAD,OAAajE,EAAI9N,KAAI,KAAK,WAE3C,EAAKtG,MAAMyT,kBAAoC,GAAyB,EAC5E,IAAE,OACK,SAACxC,GACJ,IAAMsH,GAAiBC,EAAAA,GAAAA,GAAcvH,GACrC,EAAKjI,SAAS,CAAE8F,SAAUyJ,IACtB,EAAK1E,MAAwC,mBAAzB,EAAKA,KAAK4E,YAC9B,EAAK5E,KAAK4E,aAEd,EAAKzY,MAAMyT,kBAAoC,GAAyB,EAC5E,GACR,IAAC,yBAEc,SAAC3R,EAAO4W,GACnB,EAAK1P,UAAS,SAAC2P,GACX,IAAMC,EAAU,CAAC,EAejB,GAdc,cAAV9W,GACA6R,OAAOC,KAAK,EAAKe,SAASnQ,SAAQ,SAAClC,GAC3BA,IAASoW,EACT,EAAK/D,QAAQrS,GAAMkC,SAAQ,SAAC7C,GACxBiX,EAAQjX,GAAK,CAAEkR,QAAS,CAAEgG,MAAM,GACpC,IAEA,EAAKlE,QAAQrS,GAAMkC,SAAQ,SAAC7C,GACxBiX,EAAQjX,GAAK,CAAEkR,QAAS,CAAEgG,MAAM,GACpC,GAER,IAGA,EAAKC,cAAcC,IAAIjX,GAAQ,CAC/B,IAAMF,EAAQ,EAAKkX,cAAcpM,IAAI5K,GACrC6R,OAAOC,KAAKhS,GAAO4C,SAAQ,SAACwU,GACxB,IAAMzU,EAAO,CAAC,EACV0U,GAAO,EAEXrX,EAAMoX,GAAWxU,SAAQ,SAAC0U,GACtB,IAAM7S,IAAa,EAAKiO,SAAS9G,MAAK,SAAC7L,GAAC,OAAKA,EAAEG,QAAUoX,CAAU,IAC9D7S,SAEC8S,EACFD,IAAepX,EAAQ4W,EAAcC,EAAUpU,KAAK2U,GAAYtX,MAChEyE,IAAa8S,GACbF,GAAO,EACP1U,EAAK2U,GAAc,MAEnB3U,EAAK2U,GAAcC,CAE3B,IAEIF,IACAL,EAAQI,GAAa,CACjB3V,iBAAkB,CAAEwV,KAAMtU,GAC1B3C,MAAO,CAAEiX,KAAM,OAG3B,GACJ,CAEAD,EAAQ9W,GAAS,CAAEF,MAAO,CAAEiX,KAAMH,IAElC,IAAMU,EAAYlB,IAAOS,EAAW,CAAEpU,KAAMqU,IACtCS,EAAY,EAAKC,iBAAiBF,GAUxC,OARI,EAAKG,cACL,EAAKA,aAAa1T,MAAK,WACe,mBAAvB,EAAKgO,KAAKxR,UACjB,EAAKwR,KAAKxR,SAASP,EAAO4W,EAAaW,EAE/C,IAGGA,CACX,GACJ,IAAC,+BAEoB,SAACvX,EAAO0X,GACzB,IAAMnF,EAAQ,EAAKC,SAASC,WAAU,SAACgD,GAAC,OAAKA,EAAEzV,QAAUA,CAAK,IACxD8M,EAAY,CAAC,CAAEtM,KAAM,SAAUkX,cAAAA,IACrC,EAAKlF,SAASD,GAAO1F,WAAaC,CACtC,IAAC,6BAGkB,SAAC9M,EAAO2X,GACvB,EAAKzQ,UAAS,SAAC0Q,GACX,IAAMN,EAAYlB,IAAOwB,EAAe,CACpCnV,KAAM,MAAGzC,EAAQ,CAAEE,MAAO,CAAE6W,MAAM,OAGtC,OADAO,EAAUtK,SAAW2K,EACdL,CACX,GACJ,IAAC,0BAIe,SAACtX,GACb,EAAKkH,UAAS,SAAC0Q,GAAa,OACxBxB,IAAOwB,EAAe,CAAEnV,KAAM,MAAGzC,EAAQ,CAAEE,MAAO,CAAE6W,MAAM,MAAa,GAE/E,IAAC,0BAGe,WACR,EAAK7Q,MAAM8G,UACX,EAAK9F,UAAS,SAAC0Q,GAAa,gBAAWA,GAAa,IAAE5K,SAAU,IAAE,GAE1E,IAAC,wBAGa,SAAC2K,GACX,EAAKzQ,UAAS,SAAC0Q,GAAa,gBAAWA,GAAa,IAAE5K,SAAU2K,GAAG,GACvE,IAAC,6BAGkB,SAACE,GAChB,IAAMP,EAAoB,MAARO,GAA4B,EAAK3R,OACnDoR,EAAUtK,SAAW,GACrBsK,EAAUQ,WAAa,GACvB,IAAMC,EAAkB,MAARF,EAAaA,EAAMpV,KAAc,EAAKyD,MAAMzD,MACtDuV,EAAU,CAAC,EASjB,OARAnG,OAAOC,KAAKiG,GAASrV,SAAQ,SAAC1D,GACtB+Y,EAAQ/Y,GAAKkB,MACb8X,EAAQhZ,GAAO,SAAK+Y,EAAQ/Y,IAAI,IAAEkB,OAAO,IAEzC8X,EAAQhZ,GAAO+Y,EAAQ/Y,EAE/B,IACAsY,EAAU7U,KAAOuV,EACVH,EAAQP,EAAY,IAC/B,IAAC,iCAGsB,WACnB,OAAI,EAAKpR,MAAM8G,SAEP,gBAAC,IAAO,CAACtI,WAAW,OAAOlE,KAAK,SAC3B,EAAK0F,MAAM8G,UAIjB,IACX,IAAC,mCAEwB,WACrB,OAAI,EAAK9G,MAAM4R,WAEP,gBAAC,IAAO,CAACpT,WAAW,OAAOlE,KAAK,WAC3B,EAAK0F,MAAM4R,YAIjB,IACX,IAAC,qBAGU,SAACrQ,EAAQjH,EAAM4F,GAiCtB,OAhCkB,IAAIsB,SAAQ,SAACC,GACd,aAATnH,EACAoH,OAAgC,GAAzB,QAA6BC,EAAAA,GAAAA,KAAiB,mBAAWJ,EAAM,QAAO1D,MACzE,SAAC+D,GACG,IAAMmQ,EAAOnQ,EAAQ,QACrB,EAAKiK,KAAO,IAAIkG,EACZ7R,EACA,EAAKlI,MAAM2F,YACX,EAAKqC,MACL,EAAKhI,MAAM6N,KACX,EAAKmM,KACL,EAAKha,MAAMia,WAEfxQ,EAAQsQ,EACZ,IAGJlQ,QACI,CAAC,OAAD,OAAQ,EAAKzB,QAAO,4BAAoBmB,KACxC,SAACwQ,GACG,EAAKlG,KAAO,IAAIkG,EACZ7R,EACA,EAAKlI,MAAM2F,YACX,EAAKqC,MACL,EAAKhI,MAAM6N,KACX,EAAKmM,MAETvQ,EAAQsQ,EACZ,GAGZ,GAEJ,IAAC,6BAOkB,SAAC5G,GAEhB,IAAKA,GAAYA,GAAWA,EAAQnR,YAA2ByI,IAAjB0I,EAAQ+G,KAIlD,OAHA,EAAKhK,YAAY8C,IACjB,EAAKuD,SAAU,EACf,EAAKC,YAAa,GACX,EAEX,IAAM2D,EAAgBhH,EAAQnL,MAE9B,IAA2B,IAAvB,EAAKwN,eAA0B,EAAKC,cAAgB0E,EAIpD,OAHA,EAAKjK,YDt1Bb,qECu1BQ,EAAKqG,SAAU,EACf,EAAKC,YAAa,GACX,EAGX,IAAM0D,EAAOE,mBAAmBjH,EAAQ+G,MAClC3V,EAAO,CACTqT,OAAQ,OACRyC,IAAK,WAAF,OAAa,EAAK3G,SAASuC,UAAQ,OAAG,EAAKJ,UAAUyE,qBACxDC,WAAY,qBACZnF,UAAW,EAAK1B,SAAS0B,UACzBoF,cAAe,EAAK9G,SAAS8G,cAC7BN,KAAAA,EACAO,aAAc,EAAK/G,SAAS2B,cAG5B,EAAK3B,SAASkC,QACdrR,EAAKqR,MAAQ,EAAKlC,SAASkC,OAG/B,IAAM0B,EAAO,IAAIlB,gBACjBzC,OAAOC,KAAKrP,GAAMC,SAAQ,SAAC1D,GACvBwW,EAAKE,OAAO1W,EAAKyD,EAAKzD,GAC1B,IAEA,IAAM4Z,EAAgB,GAAH,OAAM,EAAKtS,QAAO,iBAErCxC,EAAAA,EAAAA,GAAiB,CACbrC,YAAamX,EACbpD,KAAAA,EACAK,cAAe,CAAE,eAAgB,qCACjCC,OAAQ,OACRpS,aAAa,IAEZK,MAAK,SAACC,GACH,QAA6C2E,IAAzC3E,EAASvB,KAAKyB,MAAM,GAAG+R,QAAQ/V,MAAqB,CACpD,IAAM2Y,EAAc7U,EAASvB,KAAKyB,MAAM,GAAG+R,QAAQ6C,aAC7CC,EAAc/U,EAASvB,KAAKyB,MAAM,GAAG+R,QAAQ+C,aAC7CC,EAAejV,EAASvB,KAAKyB,MAAM,GAAG+R,QAAQiD,cAMpD,OAJA,EAAKtH,SAASoH,aAAeD,EAC7B,EAAKnH,SAASsH,cAAgBD,EAC9B,EAAKrH,SAASkH,aAAeD,EAC7B,EAAKnE,YAAa,GACX,CACX,CAIA,OAHA,EAAKtG,YAAYpK,EAASvB,KAAKyB,MAAM,GAAG+R,QAAQ/V,OAChD,EAAKuU,SAAU,EACf,EAAKC,YAAa,GACX,CACX,IAAE,OACK,WAIH,OAHA,EAAKtG,YAAY8C,IACjB,EAAKuD,SAAU,EACf,EAAKC,YAAa,GACX,CACX,GACR,IAAC,gEAIuB,WAAO9Q,GAAK,kEAGhC,GADAA,GAAS,GAEa,IAAlB,EAAK4Q,SAAiB,0CACf,GAAI,UAGD,IAAV5Q,IAAe,EAAK+Q,SAASS,OAAM,gBACf,OAApB,EAAKX,SAAU,EAAK,mBACb,GAAK,uBAGV,EAAK0E,MAAM,EAAKjE,sBAAuBtR,GAAM,2CACtD,mDAlBA,IAkBA,iEAKwB,WAAOA,GAAK,kEAGjC,GADAA,GAAS,GAEe,IAApB,EAAK8Q,WAAmB,0CACjB,GAAI,UAGD,KAAV9Q,EAAY,0CACL,GAAK,uBAGV,EAAKuV,MAAM,EAAK9D,uBAAwBzR,GAAM,2CACvD,mDAlBA,IAkBA,gDAKO,WAAOjF,GAAE,wGACP,EAAKya,QAAQ,KAAK,sBADNC,EAAI,iCAAJA,EAAI,mCAEf1a,EAAE,aAAI0a,IAAK,2CACrB,mDARA,IAQA,oBAMS,SAACC,GAAE,OAAK,IAAI5R,SAAQ,SAACC,GAAO,OAAK4R,WAAW5R,EAAS2R,EAAG,GAAC,oCAE7C,WAClB,IAAI1S,EAAK,KAyCT,OAxCI,EAAK0E,QAAU,EAAKA,OAAOzM,SAC3B+H,EAAK,EAAK0E,OAAOpG,KAAI,SAAC4F,GAAU,UACtB0O,GACU,QAAZ,EAAA1O,EAAMI,cAAM,aAAZ,EAAcrM,SACdiM,EAAMI,OAAOhG,KAAI,SAACsM,GAAS,OACvB,EAAKgB,SAAStN,KAAI,SAACrF,GACf,GAAIA,EAAEG,QAAUwR,EAAW,CACvB,IAAMiI,EAAW,EAAKvT,MAAMzD,KAAK5C,EAAEG,OACnC,OACI,gBAAC,GAAc,CACXhB,IAAKa,EAAEG,MACP4Q,cAAe,EAAK8I,mBACpB5Z,MAAO2Z,EAAS3Z,MAChBiR,QAAS0I,EAAS1I,QAClB7Q,MAAOuZ,EAASvZ,MAChBsQ,OAAQ3Q,EACRgE,YAAa,EAAK3F,MAAM2F,YACxBkI,KAAM,EAAK7N,MAAM6N,KACjB1L,SAAUoZ,EAASpZ,SACnBwQ,gBAAiB4I,EAAS5I,gBAC1BtP,iBAAkBkY,EAASlY,kBAAoB,MAG3D,CACA,OAAO,IACX,GAAE,IAGV,OACI,gBAAC,GAAK,CACFvC,IAAK8L,EAAMlI,MACXgH,aAA2B,QAAf,EAAEkB,EAAM3H,eAAO,aAAb,EAAeyG,aAC7BC,YAA0B,QAAf,EAAEiB,EAAM3H,eAAO,aAAb,EAAegI,OAC5BrB,MAAOgB,EAAMlI,OAEZ4W,EAGb,KAEG5S,CACX,IAj9BI,EAAK+S,MAAO,EACZ,EAAKzT,MAAQ,CAAC,EACd,EAAK0T,aAAe,CAAC,EACrB,IAAMxT,GAAeC,EAAAA,EAAAA,MACrB,EAAKC,QAAUF,EAAaG,KAAK/B,KACjC,EAAKiN,cAAgB,GACrB,EAAK0C,SACDjW,EAAM6N,OAAS6J,GAAAA,IAAa1X,EAAM6N,OAASgK,GAAAA,GAAW,UAC7C,EAAK7X,MAAM2F,YAAW,YAAI0Q,mBAAmB,EAAKrW,MAAM2b,aAAW,UACnE,EAAK3b,MAAM2F,aAExB,EAAKqU,KAAO,CACRhR,SAAU,SAAC4S,GACP,EAAKvE,cAAgB,IAAI7N,SAAQ,SAACC,GAC9B,EAAKT,UAAS,SAAC0Q,GAAa,OAAKkC,EAASlC,EAAc,GAAEjQ,EAC9D,GACJ,EACA+K,iBAAkB,EAAKA,iBACvB8E,iBAAkB,EAAKA,iBACvBpJ,YAAa,EAAKA,aAGtB,EAAKsL,mBAAqB,CACtB3Z,aAAc,EAAKA,aACnBkH,mBAAoB,EAAKA,mBACzBH,oBAAqB,EAAKoR,MAG1Bha,EAAM6b,OAASC,GAAAA,EACf5T,EAAa6T,MAAMC,OAAOC,SAASzX,SAAQ,SAAC0X,GACpCA,EAAQ5V,OAAStG,EAAM2F,cACvB,EAAKyH,OAAS8O,EAAQ9O,OACtB,EAAKkH,SAAW4H,EAAQ5J,OACxB,EAAK6J,sBACL,EAAKlX,QAAUiX,EAAQjX,QACnBiX,EAAQrI,OACR,EAAK0F,aAAe,EAAK6C,SACrBF,EAAQrI,KAAKtL,IACb2T,EAAQrI,KAAKvR,KACb4F,IAGJlI,EAAM6N,OAAS6J,GAAAA,IAAa1X,EAAM6N,OAASoG,GAAAA,KAC3C,EAAKyH,aAAerI,EAAQc,QAAQnU,EAAM2F,aAAa3F,EAAM2b,aAGzE,IAEAzT,EAAa6T,MAAMM,cAAcC,KAAK9X,SAAQ,SAAC+X,IAC9BA,EAAIC,MACXD,EAAIjW,OAAStG,EAAM2F,YACnB4W,EAAIjW,OAAStG,EAAM2b,YAAoC,aAAtB3b,EAAM2F,eAEzC,EAAK2O,SAAWiI,EAAIjK,OACpB,EAAKrN,QAAUsX,EAAItX,QACfsX,EAAI1I,OACJ,EAAK0F,aAAe,EAAK6C,SACrBG,EAAI1I,KAAKtL,IACTgU,EAAI1I,KAAKvR,KACT4F,KAGJqU,EAAIC,OAAUxc,EAAM6N,OAAS6J,GAAAA,IAAa1X,EAAM6N,OAASoG,GAAAA,GAElDjU,EAAM6N,OAASgK,GAAAA,IACtB,EAAK6D,aAAe1b,EAAMyc,oBAC1B,EAAKnE,kBAAoBiE,EAAI3Q,OAE7B,EAAK8P,aAAerI,EAAQc,QAAQnU,EAAM2F,aAL1C,EAAK+V,aAAerI,EAAQc,QAAQnU,EAAM2F,aAAa3F,EAAM2b,YAQzE,IAEJ,EAAK7C,cAAgB,IAAIzO,IACzB,EAAKoK,SAAU,EACf,EAAKI,WAAY,EACjB,EAAKF,QAAU,CAAC,EAChB,IAAI4G,EAAW,CAAC,EACVvH,EAAc,GAEpB,EAAKM,SAAS9P,SAAQ,SAAC7C,GACnB,GAAe,UAAXA,EAAEW,MAEF,GADA,EAAKmS,SAAU,EACXzU,EAAM6b,OAASa,GAAAA,GAAmC,YAAtB1c,EAAM2F,YAA2B,WACvDgX,EAAWhb,SAAU,QAAT,EAADA,EAAGsD,eAAO,WAAT,EAAD,EAAY2P,UAM7B,GALA,EAAKW,kBAC0C,KAApC5T,SAAU,QAAT,EAADA,EAAGsD,eAAO,WAAT,EAAD,EAAY2X,qBACbjb,SAAU,QAAT,EAADA,EAAGsD,eAAO,WAAT,EAAD,EAAY2X,oBACZ,KAEND,EAAShc,OAAS,EAAG,CACrB,EAAKkU,WAAY,EAEjB,IAAMgI,EAAa,CAAC,EACpBA,EAAWjb,WACgC,IAAhC,EAAK8Z,aAAa9G,UACnB,EAAK8G,aAAa9G,UAClB+H,EAAS,GACnBE,EAAWhK,SAAU,EACrBgK,EAAW7a,OAAQ,EACnB6a,EAAW1a,UAAW,EACtBoZ,EAAS3G,UAAYiI,EAGrB,IAAMvK,EAAS,CACfA,MAAe,YACfA,KAAc,eACdA,MAAe,aACTyF,EAAU,CACZ+E,MAAO,uBACPC,MAAO,4BAEXzK,EAAOrN,QAAU,CAAC,EAClBqN,EAAOrN,QAAQjB,cAAe,EAC9BsO,EAAOrN,QAAQlB,mBAAqB4Y,EAAS3V,KAAI,SAAC1E,GAAI,MAAM,CACxDoC,MAAOqT,EAAQzV,GACfV,MAAOU,EACV,IACD0R,EAAYrP,KAAK2N,EACrB,MACI,EAAK4C,cAAgByH,EAASlP,SAAS,SAuD3C,GAlDAkP,EAASnY,SAAQ,SAAClC,GACd,IAAM0a,EAAa,GACbhQ,EAASrL,aAAC,EAADA,EAAGsD,QAAQ3C,GACtB0K,IAEAA,EAAOxI,SAAQ,SAAC1C,GAEZ,IAAM+a,EAAa,CAAC,EAEpB,GAAI7c,EAAM6N,OAASC,GAAAA,GACf+O,EAAWjb,WACwB,KAAxBE,aAAK,EAALA,EAAO+F,cACR/F,EAAM+F,aACN,SACP,CACH,IAAMoV,OAC0B,KAArBnb,aAAK,EAALA,EAAOS,aACRT,aAAK,EAALA,EAAOS,WAEjBsa,EAAWjb,MAAQqb,EACb,GACA,EAAKvB,aAAa5Z,EAAMA,MAClC,CACA+a,EAAWhK,aACuB,IAAvB0I,EAAS3G,WACVtS,IAASiZ,EAAS3G,UAAUhT,MAEtCib,EAAW7a,OAAQ,EACnB6a,EAAW1a,UAAW,EACtBoZ,EAASzZ,EAAMA,OAAS+a,EAExB/a,EAAMQ,UACqB,KAAhBR,aAAK,EAALA,EAAOQ,MAAuBR,EAAMQ,KAAO,OAGlC,iBAAhBR,EAAMA,QACN+a,EAAWjb,MAAQ8U,OAAOwG,SAASC,KAC9Bjc,MAAM,KAAK,GACXyU,QACG,gBAAe,UACZ,EAAKvN,QAAQgV,cAAa,cAErCP,EAAW1a,UAAW,GAE1B6R,EAAYrP,KAAK7C,GACjBkb,EAAWrY,KAAK7C,EAAMA,MAC1B,IACA,EAAK6S,QAAQrS,GAAQ0a,EAE7B,IACIL,EAASlP,SAAS,SAAU,CAC5B,IAAM4P,EAAgB,CAAC,EAEvBA,EAAczG,WAAajV,EAAEsD,QAAQqY,kBAC/B3b,EAAEsD,QAAQqY,kBACV,IACND,EAAcxG,YAAclV,EAAEsD,QAAQsY,mBAChC5b,EAAEsD,QAAQsY,mBACV,IACNF,EAAcpG,YAActV,EAAEsD,QAAQuY,cAChC7b,EAAEsD,QAAQuY,cACV,IACNH,EAAcnH,iBAAmBvU,EAAEsD,QAAQwY,mBACrC9b,EAAEsD,QAAQwY,mBACV,KACNJ,EAAc/C,oBAAsB3Y,EAAEsD,QAAQyY,sBACxC/b,EAAEsD,QAAQyY,sBACV,KACNL,EAAcvH,4BAA8BnU,EAAEsD,QACzC0Y,gCACChc,EAAEsD,QAAQ0Y,gCACV,KACN,EAAK9H,UAAYwH,CACrB,CACJ,MACG,OAc6B,EAb1BR,EAAa,CAAC,EAapB,GAZAlb,EAAEY,eAAmC,IAAhBZ,EAAEY,WAA4BZ,EAAEY,UAEtC,SAAXZ,EAAEW,MAAmB,EAAKoZ,aAAa/Z,EAAEG,SAOzC+a,EAAWrN,kBAAoB,iBAG/BxP,EAAM6N,OAASC,GAAAA,GACf+O,EAAWjb,WACmB,IAAnBD,EAAEkG,aAA+BlG,EAAEkG,aAAe,KAC7DgV,EAAWhK,aACwB,KAAxBlR,SAAU,QAAT,EAADA,EAAGsD,eAAO,WAAT,EAAD,EAAY4N,UAA0BlR,EAAEsD,QAAQ4N,QAC3DgK,EAAW7a,OAAQ,EACnB6a,EAAW1a,UAAW,EACtBoZ,EAAS5Z,EAAEG,OAAS+a,OACjB,GAAI7c,EAAM6N,OAAS6J,GAAAA,GAAW,SACjCmF,EAAWjb,WAC+B,IAA/B,EAAK8Z,aAAa/Z,EAAEG,OACrB,EAAK4Z,aAAa/Z,EAAEG,OACpB,KACV+a,EAAWjb,MAAQD,EAAEY,UAAY,GAAKsa,EAAWjb,MACjDib,EAAWhK,aACwB,KAAxBlR,SAAU,QAAT,EAADA,EAAGsD,eAAO,WAAT,EAAD,EAAY4N,UAA0BlR,EAAEsD,QAAQ4N,QAC3DgK,EAAW7a,OAAQ,EACnB6a,EAAW1a,UAAW,EACN,SAAZR,EAAEG,MACF+a,EAAW1a,UAAW,OACsB,KAA9BR,SAAU,QAAT,EAADA,EAAGsD,eAAO,WAAT,EAAD,EAAY2Y,iBAC1Bf,EAAW1a,SAAWR,EAAEsD,QAAQ2Y,eAEpCrC,EAAS5Z,EAAEG,OAAS+a,CACxB,MAAO,GAAI7c,EAAM6N,OAASoG,GAAAA,GAAY,OAClC4I,EAAWjb,MACK,SAAZD,EAAEG,OAAoBH,EAAEY,UAAY,GAAK,EAAKmZ,aAAa/Z,EAAEG,OACjE+a,EAAWhK,aACwB,KAAxBlR,SAAU,QAAT,EAADA,EAAGsD,eAAO,WAAT,EAAD,EAAY4N,UAA0BlR,EAAEsD,QAAQ4N,QAC3DgK,EAAW7a,OAAQ,EACnB6a,EAAW1a,UAAW,EACtBoZ,EAAS5Z,EAAEG,OAAS+a,CACxB,KAAO,IAAI7c,EAAM6N,OAASgK,GAAAA,GAkBtB,MAAM,IAAIjN,MAAM,iBAAkB5K,EAAM6N,MAlBL,QACnClM,EAAEkG,kBAAyC,IAAnBlG,EAAEkG,aAA+BlG,EAAEkG,aAAe,KAC1EgV,EAAWjb,WAC+B,IAA/B,EAAK8Z,aAAa/Z,EAAEG,OACrB,EAAK4Z,aAAa/Z,EAAEG,OACpBH,EAAEkG,aACZgV,EAAWjb,MAAQD,EAAEY,UAAY,GAAKsa,EAAWjb,MACjDib,EAAWhK,aACwB,KAAxBlR,SAAU,QAAT,EAADA,EAAGsD,eAAO,WAAT,EAAD,EAAY4N,UAA0BlR,EAAEsD,QAAQ4N,QAC3DgK,EAAW7a,OAAQ,EACnB6a,EAAW1a,UAAW,EACN,SAAZR,EAAEG,MACF+a,EAAW1a,UAAW,OACsB,KAA9BR,SAAU,QAAT,EAADA,EAAGsD,eAAO,WAAT,EAAD,EAAY2Y,iBAC1Bf,EAAW1a,SAAWR,EAAEsD,QAAQ2Y,eAEpCrC,EAAS5Z,EAAEG,OAAS+a,CAGxB,CAGA,IAAM7P,EAAkB,QAAZ,EAAGrL,EAAEsD,eAAO,aAAT,EAAWvB,aACtBsJ,GACAA,EAAOxI,SAAQ,SAAC1C,GACZ,IAAM+b,EAAe,EAAK/E,cAAcpM,IAAI5K,GACxC+b,EACAA,EAAalc,EAAEG,OAASkL,EAExB,EAAK8L,cAAcjO,IAAI/I,EAAO,MACzBH,EAAEG,MAAQkL,GAGvB,IAEJgH,EAAYrP,KAAKhD,EACrB,CACJ,IAEA,EAAK2S,SAAWN,EAIhB,IAAI8J,EAAe,CAAC,EACpB,EAAKhF,cAActU,SAAQ,SAAC5C,GACxBkc,EAAe,SAAKA,GAAiBlc,EACzC,IAEA,IAAMgX,EAAU,CAAC,EA4ChB,OA3CDjF,OAAOC,KAAKkK,GAActZ,SAAQ,SAAC1C,GAC/B,IAAMoF,EAAS4W,EAAahc,GACtByC,EAAO,CAAC,EACV0U,GAAO,EAEX/R,EAAO1C,SAAQ,SAAC0U,GACZ,IAAM7S,IAAa,EAAKiO,SAAS9G,MAAK,SAAC7L,GAAC,OAAKA,EAAEG,QAAUoX,CAAU,IAAE7S,SAE/D8S,EAAeoC,EAASrC,GAAYtX,MACtCyE,IAAa8S,GACbF,GAAO,EACP1U,EAAK2U,GAAc,MAEnB3U,EAAK2U,GAAcC,CAE3B,IAEIF,IACAL,EAAQ9W,GAAS,CACbuB,iBAAkB,CAAEwV,KAAMtU,IAGtC,IAGAgX,EAAWrD,IAAOqD,EAAU3C,GAC5B,EAAK5Q,MAAQ,CACTzD,KAAMgX,EACNzM,SAAU,GACV8K,WAAY,IAIZ,EAAKL,cACL,EAAKA,aAAa1T,MAAK,WACnB,GAAkC,mBAAvB,EAAKgO,KAAKkK,SACjB,IACI,EAAKlK,KAAKkK,UACd,CAAE,MAAO/b,GACLiR,GAAkB,CAAEC,WAAY,WAAYlR,MAAAA,GAChD,CAER,IACH,CACL,CAksBC,OA3jCL,EAyXK,GAzXL,EAyXK,qBAgoBD,WAAS,WA8BL,OA5BIC,KAAKwZ,OACDxZ,KAAKsX,cACLtX,KAAKsX,aAAa1T,MAAK,WACnB,GAAkC,mBAAvB,EAAKgO,KAAKmK,SACjB,IACI,EAAKnK,KAAKmK,UACd,CAAE,MAAOhc,GACLiR,GAAkB,CAAEC,WAAY,WAAYlR,MAAAA,GAChD,CAER,IAGAC,KAAKjC,MAAM6N,OAAS6J,GAAAA,IAChBzV,KAAKsX,cACLtX,KAAKsX,aAAa1T,MAAK,WACnB,GAAoC,mBAAzB,EAAKgO,KAAKoK,WACjB,IACI,EAAKpK,KAAKoK,YACd,CAAE,MAAOjc,GACLiR,GAAkB,CAAEC,WAAY,aAAclR,MAAAA,GAClD,CAER,IAGRC,KAAKwZ,MAAO,GAGZ,2BACI,wBAAMpS,MAAOpH,KAAKjC,MAAM6N,OAASgK,GAAAA,GAAc,CAAEqG,UAAW,QAAW,CAAC,GACnEjc,KAAKkc,yBACLlc,KAAKmc,uBACLnc,KAAKqS,SAAStN,KAAI,SAACrF,GAEhB,GAAI,EAAK4R,cAAc9F,SAAS9L,EAAEG,OAC9B,OAAO,KAGX,IAAMyZ,EAAW,EAAKvT,MAAMzD,KAAK5C,EAAEG,OAEnC,OAAKyZ,EAGD,gBAAC,GAAc,CACXza,IAAKa,EAAEG,MACP4Q,cAAe,EAAK8I,mBACpB5Z,MAAO2Z,EAAS3Z,MAChBiR,QAAS0I,EAAS1I,QAClB7Q,MAAOuZ,EAASvZ,MAChBsQ,OAAQ3Q,EACRgE,YAAa,EAAK3F,MAAM2F,YACxBkI,KAAM,EAAK7N,MAAM6N,KACjB1L,SAAUoZ,EAASpZ,SACnBwQ,gBAAiB4I,EAAS5I,gBAC1BtP,iBAAkBkY,EAASlY,kBAAoB,KAC/CmM,kBAAmB+L,EAAS/L,mBAAqB,OAfnC,IAkB1B,IACCvN,KAAKoc,uBAItB,MA3jCJ,qEA2jCK,EA3hCa,CAASC,EAAAA,eAAa,GAAlClL,GAAY,cACOmL,GAAAA,GA6hCzBnL,GAAa/R,UAAY,CACrBwa,KAAMva,IAAAA,OACNqE,YAAarE,IAAAA,OACbqa,WAAYra,IAAAA,OACZmb,oBAAqBnb,IAAAA,OACrBuM,KAAMvM,IAAAA,OACNmS,iBAAkBnS,IAAAA,KAClB2Y,UAAW3Y,IAAAA,QAGf,61CC9jCA,QAAMkd,GAAeze,EAAAA,EAAAA,SAAO0e,IAAP1e,CAAa,+HAI5B2e,EAAW,w3BACb,WAAY1e,GAAO,MAcd,mGAdc,SAEf,IADA,cAAMA,IACN,sBAeiB,WACjB,EAAKA,MAAM2e,oBACf,IAAC,uBAEc,WACI,EAAKC,KAAKxZ,QAAQyZ,gBAE7B,EAAKF,oBAEb,IAAC,2BAMkB,SAAC9T,EAAKiU,GACrB,EAAK9V,SAAS,CAAE+V,aAAclU,IAC1BiU,GACA,EAAKH,oBAEb,IAlCI,EAAKC,KAAOrd,EAAAA,YACZ,EAAKyG,MAAQ,CAAE+W,cAAc,GAEzB/e,EAAM6N,OAASC,EAAAA,GACf,EAAKkR,YAAa7V,EAAAA,EAAAA,GAAE,OACbnJ,EAAM6N,OAASoG,EAAAA,GACtB,EAAK+K,YAAa7V,EAAAA,EAAAA,GAAE,QACbnJ,EAAM6N,OAAS6J,EAAAA,GACtB,EAAKsH,YAAa7V,EAAAA,EAAAA,GAAE,UAEpB,EAAK6V,YAAa7V,EAAAA,EAAAA,GAAE,UACvB,CACL,CA2DC,SA3DA,0BAwBD,WACI,OACI,gBAACqV,EAAY,CAAC7H,KAAM1U,KAAKjC,MAAM2W,MAC3B,gBAAC,WAAY,CACT/K,MAAO3J,KAAKjC,MAAMif,UAClBC,eAAgBjd,KAAK0c,qBAEzB,gBAAC,SAAU,KACP,gBAAC,IAAa,CACVvV,IAAKnH,KAAK2c,KACV/C,KAAM5Z,KAAKjC,MAAM6b,KACjBlW,YAAa1D,KAAKjC,MAAM2F,YACxBkI,KAAM5L,KAAKjC,MAAM6N,KACjB8N,WAAY1Z,KAAKjC,MAAM2b,WACvBlI,iBAAkBxR,KAAKwR,iBACvBwG,UAAWhY,KAAKjC,MAAMia,aAG9B,gBAAC,WAAY,KACT,gBAAC,KAAY,CACTzT,WAAW,YACXE,QAASzE,KAAK0c,mBACdja,OAAOyE,EAAAA,EAAAA,GAAE,UACThH,SAAUF,KAAK+F,MAAM+W,eAEzB,gBAAC,KAAY,CACT7c,UAAU,UACVsE,WAAW,UACX9B,MAAOzC,KAAK+F,MAAM+W,aAAe,gBAAC,IAAW,MAAM9c,KAAK+c,WACxDtY,QAASzE,KAAK4c,aACd1c,SAAUF,KAAK+F,MAAM+W,gBAKzC,0EAAC,EA3EY,CAASvc,EAAAA,WA8E1Bkc,EAAYrd,UAAY,CACpBwa,KAAMva,IAAAA,OACNqV,KAAMrV,IAAAA,KACNqd,mBAAoBrd,IAAAA,KACpBqE,YAAarE,IAAAA,OACbuM,KAAMvM,IAAAA,OACNqa,WAAYra,IAAAA,OACZ2d,UAAW3d,IAAAA,OACX2Y,UAAW3Y,IAAAA,QAGf,kUCzFA,SAAS6d,EAAW,GAQjB,QAPCR,EAAkB,EAAlBA,mBACAhZ,EAAW,EAAXA,YACAkI,EAAI,EAAJA,KACA8N,EAAU,EAAVA,WACAsD,EAAS,EAATA,UACApD,EAAI,EAAJA,KACA5B,EAAS,EAATA,UAGM2E,GAAOQ,EAAAA,EAAAA,UAC0C,MAAfta,EAAAA,EAAAA,WAAS,KAAM,o5BAAhDua,EAAY,KAAEC,EAAe,KAChCN,GAAa7V,EAAAA,EAAAA,GAAE,UAEf0E,IAASC,EAAAA,GACTkR,GAAa7V,EAAAA,EAAAA,GAAE,OACR0E,IAASoG,EAAAA,GAChB+K,GAAa7V,EAAAA,EAAAA,GAAE,eACR0E,IAAS6J,EAAAA,KAChBsH,GAAa7V,EAAAA,EAAAA,GAAE,WAGnB,IACMoW,EAAW,CACbC,WAFqBC,EAAAA,EAAAA,kBAAjBC,aAGJC,QAAS,KACTC,gBAAiB,SAgBrB,OACI,gBAAC,IAAY,CAACvQ,OAAQ,GAClB,gBAAC,QAAgB,CAAChG,MAAO,CAAEsW,QAAS,YAChC,gBAAC,WAAmB,KAChB,gBAAC,KAAiB,KACd,gBAAC,IAAI,CAACjZ,QAASiY,GACV9C,IAASC,EAAAA,GAAa3S,EAAAA,EAAAA,GAAE,WAAYA,EAAAA,EAAAA,GAAE,kBAE1C,OACAA,EAAAA,EAAAA,GAAE8V,MAIf,gBAAC,QAAgB,KACb,gBAAC,WAAmB,CAAC7S,KAAM,IAC3B,gBAAC,WAAmB,CAACA,KAAM,EAAG/C,MAAOkW,GACjC,gBAAC,IAAa,CACVnW,IAAKwV,EACL/C,KAAMA,EACNlW,YAAaA,EACbkI,KAAMA,EACN8N,WAAYA,EACZlI,iBA5BK,SAAC5I,EAAKiU,GAC3BQ,EAAgBzU,GACZiU,GACAH,GAER,EAwBoB1E,UAAWA,KAGnB,gBAAC,WAAmB,CAAC7N,KAAM,KAE/B,gBAAC,QAAgB,KACb,gBAAC,WAAmB,CAACA,KAAM,IAC3B,gBAAC,WAAmB,CAACA,KAAM,EAAG/C,MAAO,CAAEwW,UAAW,UAC9C,gBAAC,KAAY,CACTrZ,WAAW,YACXE,QAASiY,EACTja,OAAOyE,EAAAA,EAAAA,GAAE,UACThH,SAAUkd,EACVhW,MAAO,CAAEyW,MAAO,UAEpB,gBAAC,KAAY,CACTtZ,WAAW,UACX9B,MAAO2a,EAAe,gBAAC,IAAW,MAAML,EACxCtY,QAtDC,WACFkY,EAAKxZ,QAAQyZ,gBAExBF,GAER,EAkDoBxc,SAAUkd,EACVhW,MAAO,CAAEyW,MAAO,WAGxB,gBAAC,WAAmB,CAAC1T,KAAM,KAI3C,CAEA+S,EAAW9d,UAAY,CACnBsd,mBAAoBrd,IAAAA,KACpBqE,YAAarE,IAAAA,OACbuM,KAAMvM,IAAAA,OACNqa,WAAYra,IAAAA,OACZ2d,UAAW3d,IAAAA,OACXua,KAAMva,IAAAA,OACN2Y,UAAW3Y,IAAAA,QAGf,SAAeye,EAAAA,EAAAA,MAAKZ,mKCpHpB,SACIa,QACI,gCAAE,wHAEgC,gBAAC,IAAI,CAAC1f,GAAG,iBAAgB,sBAAyB,KAGxF2f,QACI,iIACJC,QAAS,yDACTC,QAAS,2DACTC,QAAS,k+BCPoC,IAE3CC,EAAa,k/BACf,WAAYrgB,GAAO,MAE+B,mGAF/B,UACf,cAAMA,IACDgI,MAAQ,CAAEsY,UAAW,KAAMte,MAAO,MAAO,CAClD,CAKC,SALA,IAoDA,uCAlDD,SAAgCA,GAE5B,MAAO,CAAEse,UAAWte,EAAMue,aAC9B,OALC,gCAOD,SAAkBve,GAEdC,KAAK+G,SAAS,CACVhH,MAAAA,GAGR,GAAC,oBAED,WAC0B,MAAtB,OAAIC,KAAK+F,MAAMhG,MAGP,uBAAKqH,MAAO,CAAE6U,UAAW,QACrB,gBAAC,IAAI,CAAC7U,MAAO,CAAEmW,UAAW,0BACtB,gBAAC,WAAW,KACR,gBAAC,IAAO,CAACnW,MAAO,CAAEwW,UAAW,UAAYW,MAAO,GAC5C,gBAAC,IAAW,CAACnX,MAAO,CAAEoX,SAAU,QAASxgB,MAAO,aAChD,2BACA,2BAC0B,YAAzBgC,KAAK+F,MAAMsY,WACNnX,EAAAA,EAAAA,GAAE,+BACFA,EAAAA,EAAAA,GAAE,2BAGhB,gBAAC,SAAS,KACLlH,KAAK+F,MAAMsY,UACR,iCACKnX,EAAAA,EAAAA,GAAEuX,EAAWze,KAAK+F,MAAMsY,YACzB,2BACA,4BAEJ,KACJ,2BAASjX,MAAO,CAAEsX,WAAY,aACT,QADsB,EACtC1e,KAAK+F,MAAMhG,aAAK,aAAhB,EAAkBI,aAG3B,gBAAC,WAAW,CAACwe,YAAY,GACpB3e,KAAK+F,MAAMsY,UAAYre,KAAK+F,MAAMsY,UAAY,QAO5Dre,KAAKjC,MAAM4E,QACtB,oFA/CC,EATc,CAASrD,EAAAA,WA2D5B8e,EAAchf,UAAY,CACtBuD,SAAUtD,IAAAA,UAAoB,CAACA,IAAAA,QAAkBA,IAAAA,MAAiBA,IAAAA,OAAiBuf,YAGvF,4zCC5DC,IAEKC,EAAkB,w3BACpB,WAAY9gB,GAAO,YAKU,mGALV,WACF,EAAb,cAAMA,MAiCU,kBAChB,IAAIwJ,SAAQ,SAACC,GACT,GAAwB,aAApB,EAAKzJ,MAAMsC,KACXoH,OAC6B,GAAzB,QAA6BC,EAAAA,EAAAA,KAAiB,mBAC1C,EAAK3J,MAAMgQ,SAAQ,QAEzBnK,MAAK,SAAC+D,GACJ,IAAMpB,EAAUoB,EAAQ,QACxBH,EAAQjB,EACZ,QACG,CACH,IACMJ,GADeD,EAAAA,EAAAA,MACQE,KAAK/B,KAClCuD,QACI,CAAC,OAAD,OAAQzB,EAAO,4BAAoB,EAAKpI,MAAMgQ,YAC9C,SAACxH,GAAO,OAAKiB,EAAQjB,EAAQ,GAErC,CACJ,GAAE,SApDW,gHACb,EAAKR,MAAQ,CACTjD,SAAS,GAEb,EAAKkD,cAAe,EAAK,CAC7B,CAsEC,SAtEA,qCAED,WAAoB,WACVC,GAAeC,EAAAA,EAAAA,MACrBlG,KAAK+G,SAAS,CAAEjE,SAAS,IACzB9C,KAAKqG,oBAAoBzC,MAAK,SAAC2C,GAC3B,EAAKC,cAAgB,IAAID,EACrBN,EACA,EAAKlI,MAAM2F,YACX,EAAK+C,GACL,EAAK1I,MAAMuM,IACX,EAAKvM,MAAM8B,OAEf,EAAKkH,SAAS,CAAEjE,SAAS,GAC7B,GACJ,GAAC,mCAED,SAAsBkE,EAAWC,GAC7B,OAAIjH,KAAKjC,MAAMuM,MAAQtD,EAAUsD,OAG5BrD,EAAUnE,UAAW9C,KAAKgG,gBAC3BhG,KAAKgG,cAAe,GACb,EAGf,GAAC,oBAuBD,WAAS,IA/DiBxC,EAAQ,IA+DzB,OACL,IAAKxD,KAAK+F,MAAMjD,QACZ,IACI9C,KAAKwG,cAAcI,OAAO5G,KAAKjC,MAAMuM,IAAKtK,KAAKjC,MAAM8B,MACzD,CAAE,MAAOE,GAnESyD,EAoEO,CAAEyN,WAAY,SAAUlR,MAAAA,GAlEzDkP,QAAQlP,MAAM,uDAAD,OAC8CyD,EAAOyN,WAAU,oBAAwB,QAAxB,EAAYzN,EAAOzD,aAAK,aAAZ,EAAcsE,KAAI,YAAgB,QAAhB,EAAIb,EAAOzD,aAAK,aAAZ,EAAcmR,SAkEpH,CAEJ,OACI,gCACKlR,KAAK+F,MAAMjD,UAAWoE,EAAAA,EAAAA,GAAE,cAErB,wBACIC,IAAK,SAACV,GACF,EAAKA,GAAKA,CACd,EACAW,MAAO,CAAEC,WAAYrH,KAAK+F,MAAMjD,QAAU,SAAW,aAKzE,0EAAC,EA7EmB,CAASvC,EAAAA,WAgFjCse,EAAmBzf,UAAY,CAC3BsE,YAAarE,IAAAA,OAAAA,WACbiL,IAAKjL,IAAAA,OAAAA,WACLQ,MAAOR,IAAAA,OACP0O,SAAU1O,IAAAA,OAAAA,WACVgB,KAAMhB,IAAAA,QAGV,oBC5FMyf,GAAmBhhB,EAAAA,EAAAA,SAAOihB,IAAAA,KAAPjhB,CAAkB,mIA0BpC,SAASkhB,EAAgBC,EAAS3U,EAAK4U,GAAU,QAC9CnF,EAAkC,QAA5B,GAAG7T,EAAAA,EAAAA,MAAoB4T,aAAK,aAAzB,EAA2BC,OAEpCoF,EAAYpF,SAAAA,EAAQQ,MACpBR,EAAOQ,MAAM4E,UAC4D,QADnD,EACtBpF,EAAOC,SAASzO,MAAK,SAAC0O,GAAO,OAAKA,EAAQ5V,OAASiG,EAAI5G,WAAW,IAAE6W,aAAK,aAAzE,EAA2E4E,UAEjF,OACI,gBAAC,QAAS,CAACtgB,IAAG,UAAKyL,EAAIyL,GAAE,cAAc3O,MAAO,CAAEgY,UAAW,eACvD,gBAACN,EAAgB,CAACG,QAASA,GACtBE,GAAaA,EAAU7Y,IACpB,gCACKhH,EAAAA,cAAoBuf,EAAoB,CACrCnb,YAAa4G,EAAI5G,YACjB4G,IAAAA,EACAyD,SAAUoR,EAAU7Y,IACpBjG,KAAM8e,EAAU9e,QAIxB,gCACI,gBAAC,IAAE,CAACgf,UAAW,KA3CvC,SAA6B/U,EAAK4U,GAC9B,IAAMI,EAAkB,GAkBxB,OAhBIJ,SAAAA,EAAUxgB,QACVwgB,EAAS3c,SAAQ,SAAC4P,GACd,IAAM1P,GAAQyE,EAAAA,EAAAA,GAAEiL,EAAI1P,OAEhB0P,EAAItS,SAASyK,GAA0B,OAAnBA,EAAI6H,EAAItS,QAAsC,KAAnByK,EAAI6H,EAAItS,SACvDyf,EAAgB5c,KAAK,gBAAC,SAAO,CAAC7D,IAAKsT,EAAItS,OAAQ4C,IAC/C6c,EAAgB5c,KACZ,gBAAC,gBAAc,CAAC7D,IAAG,UAAKsT,EAAItS,MAAK,UAC5BsS,EAAIxT,SAAWwT,EAAIxT,QAAQ2L,EAAI6H,EAAItS,QAC9BsS,EAAIxT,QAAQ2L,EAAI6H,EAAItS,QACpBiR,OAAOxG,EAAI6H,EAAItS,UAIrC,IAEGyf,CACX,CAuB6CC,CAAoBjV,EAAK4U,IAC9C,gBAAC,IAAM,CACH7gB,GAAE,sEAAiEiM,EAAIjG,KAAI,KAC3EkL,kBAAgB,EAChB9M,OAAOyE,EAAAA,EAAAA,GAAE,QAAD,OAASoD,EAAIjG,KAAI,sBAOrD,0fCnDA,IAAMya,IAAmBhhB,EAAAA,EAAAA,SAAOihB,IAAAA,KAAPjhB,CAAkB,sCAIrC0hB,GAAgB1hB,EAAAA,QAAAA,IAAU,wHAShC,SAAS2hB,GAAe1hB,GACpB,IACIuM,EAQAvM,EARAuM,IACAoV,EAOA3hB,EAPA2hB,QACAC,EAMA5hB,EANA4hB,WACAC,EAKA7hB,EALA6hB,cACAC,EAIA9hB,EAJA8hB,wBACAC,EAGA/hB,EAHA+hB,sBACAC,EAEAhiB,EAFAgiB,uBACAC,EACAjiB,EADAiiB,wBAYEC,GAA0BC,EAAAA,EAAAA,cAC5B,SAACC,GAAW,OACR,gBAAC,GAAgB,CAAC,cAAY,UAAUthB,IAAKshB,EAAYpK,IACrD,gBAAC,IAAW,KACP4J,EAAWnU,SAAS,SACjB,gBAAC,IAAO,CAACsK,SAAS5O,EAAAA,EAAAA,GAAE,SAChB,gBAAC,KAAqB,CAClB3C,WAAW,OACXC,KAAM,gBAAC,IAAM,CAAC4b,iBAAkB,KAAMvR,KAAM,IAC5CpK,QAAS,kBAAMqb,EAAsBK,EAAY,EACjDlgB,UAAU,aAIrB0f,EAAWnU,SAAS,UACjB,gBAAC,IAAO,CAACsK,SAAS5O,EAAAA,EAAAA,GAAE,UAChB,gBAAC,KAAqB,CAClB3C,WAAW,OACXC,KAAM,gBAAC,IAAK,CAAC4b,iBAAkB,KAAMvR,KAAM,IAC3CpK,QAAS,kBAAMsb,EAAuBI,EAAY,EAClDlgB,UAAU,cAIrB0f,EAAWnU,SAAS,WACjB,gBAAC,IAAO,CAACsK,SAAS5O,EAAAA,EAAAA,GAAE,WAChB,gBAAC,KAAqB,CAClB3C,WAAW,OACXC,KAAM,gBAAC,IAAK,CAAC4b,iBAAkB,KAAMvR,KAAM,IAC3CpK,QAAS,kBAAMub,EAAwBG,EAAY,EACnDlgB,UAAU,gBAKX,GAGvB,CAAC6f,EAAuBC,EAAwBC,IAGhDK,EAAgB,UAYpB,OAVI/V,EAAIgW,oBACJD,EAAgB,gBAAC,IAAW,MACrB/V,EAAIpK,WACXmgB,EACIT,SAAAA,EAAe1f,UAAY0f,EAAc1f,SAASoK,EAAIpK,UAChD0f,EAAc1f,SAASoK,EAAIpK,UAC3B,YAKV,gBAAC,QAAS,IACNrB,IAAKyL,EAAIyL,IACLhY,GAEH2hB,GACGA,EAAQhhB,QACRghB,EAAQ3a,KAAI,SAACwb,GACT,IAAIC,EAAW,GAEf,GAAID,EAAOE,YAAcF,EAAOE,WAAWna,IACvCka,EACI,gBAAC,SAAU,CAAC,cAAaD,EAAO1gB,MAAOhB,IAAK0hB,EAAO1gB,OA1ErD,SAACsf,EAAWoB,GAAM,OACpCjhB,EAAAA,cAAoBuf,EAAoB,CACpCnb,YAAa4G,EAAI5G,YACjB7D,MAAO0gB,EAAO1gB,MACdyK,IAAK6U,EACLpR,SAAUwS,EAAOE,WAAWna,IAC5BjG,KAAMkgB,EAAOE,WAAWpgB,MAC1B,CAoEuBqgB,CAAcpW,EAAKiW,SAGzB,GAAqB,aAAjBA,EAAO1gB,MAAsB,SACpC2gB,EACI,gBAAC,SAAU,CAAC,cAAaD,EAAO1gB,MAAOhB,IAAK0hB,EAAO1gB,OAC/C,gBAAC2f,GAAa,KACV,gBAAC,IAAM,CACH3gB,IAAKyL,EAAIjG,KACT1E,MAAO2K,EAAIpK,SACXuE,QAAS,kBAAMob,EAAwBvV,EAAI,EAC3ChF,UAAWgF,EAAIpK,SAEfA,SAAUoK,EAAIgW,oBACd/b,WAAW,SACXtE,UAAU,gBACV0gB,eAAezZ,EAAAA,EAAAA,GACX0Y,SAAuB,QAAV,EAAbA,EAAe1f,gBAAQ,OAAvB,QACM0f,EAAc1f,SAAQ,MACtB,WAEV0gB,iBAAiB1Z,EAAAA,EAAAA,GACb0Y,SAAuB,QAAV,EAAbA,EAAe1f,gBAAQ,OAAvB,OACM0f,EAAc1f,SAAQ,KACtB,cAGd,wBAAM,YAAU,UAAUmgB,IAI1C,MACIG,EADwB,YAAjBD,EAAO1gB,MACHogB,EAAwB3V,GAG/B,gBAAC,SAAU,CACPlD,MAAO,CAAEgY,UAAW,cACpB,cAAamB,EAAO1gB,MACpBhB,IAAK0hB,EAAO1gB,OAEX+f,EAAcW,EAAO1gB,QACtB6R,OAAOmP,UAAUC,eAAeC,KAC5BnB,EAAcW,EAAO1gB,OACrByK,EAAIiW,EAAO1gB,QAET+f,EAAcW,EAAO1gB,OAAOyK,EAAIiW,EAAO1gB,QACvCyK,EAAIiW,EAAO1gB,QAI7B,OAAO2gB,CACX,IAGhB,CAEAf,GAAergB,UAAY,CACvBkL,IAAKjL,IAAAA,IACLqgB,QAASrgB,IAAAA,MACTsgB,WAAYtgB,IAAAA,MACZugB,cAAevgB,IAAAA,OACfwgB,wBAAyBxgB,IAAAA,KACzBygB,sBAAuBzgB,IAAAA,KACvB0gB,uBAAwB1gB,IAAAA,KACxB2gB,wBAAyB3gB,IAAAA,MAG7B,SAAeC,EAAAA,KAAWmgB,02DCxK1B,IAAMlD,IAAeze,EAAAA,EAAAA,SAAO0e,KAAP1e,CAAa,sJAI5BkjB,GAAW,63BAGb,WAAYjjB,GAAO,MAEkC,mGAFlC,SACF,MAAb,cAAMA,IAAO,sBAII,WAGjB,EAAKgI,MAAMkb,SAAW,GACtB,EAAKljB,MAAM2e,oBACf,IAAC,yBAEc,WACX,EAAK3V,UACD,SAAC2P,GAAS,gBAAWA,GAAS,IAAEwK,YAAY,EAAMD,SAAU,IAAE,IAC9D,YACItd,EAAAA,EAAAA,GAAiB,CACbD,YAAa,GAAF,OAAK,EAAK3F,MAAM2F,YAAW,YAAI0Q,mBACtC,EAAKrW,MAAM2b,aAEfhE,cAAe,CAAE,eAAgB,qCACjCC,OAAQ,SACRpS,aAAa,IACf,OACS,SAACyL,GACJ,IAAMsH,GAAiBC,EAAAA,GAAAA,GAAcvH,GAErC,OADA,EAAKjI,SAAS,CAAEka,SAAU3K,EAAgB4K,YAAY,IAC/C3Z,QAAQ4Z,OAAOnS,EAC1B,IACCpL,MAAK,WACF,EAAKwN,QAAQ4E,WACTC,IAAO,EAAK7E,QAAQc,QAAS,MACxB,EAAKnU,MAAM2F,YAAc,CAAE0d,OAAQ,CAAC,EAAKrjB,MAAM2b,gBAGxD,EAAK3S,SAAS,CAAEma,YAAY,IAC5B,EAAKxE,sBACLtG,EAAAA,EAAAA,IAAc,YAAD,OAAa,EAAKrY,MAAM2b,WAAU,KAAK,UACxD,GACR,GAER,IAAC,iCAGsB,WACnB,OAAI,EAAK3T,MAAMkb,SAEP,2BACI,gBAAC,KAAO,CAAC1c,WAAW,OAAOlE,KAAK,SAC3B,EAAK0F,MAAMkb,WAKrB,IACX,IArDI,EAAKlb,MAAQ,CAAEmb,YAAY,EAAOD,SAAU,IAAK,CACrD,CAuFC,SAvFA,0BAsDD,WACI,IAAII,EAMJ,OAJIA,EADArhB,KAAKjC,MAAM6b,OAASC,EAAAA,GACRlL,EAAAA,GAAAA,GAAoB,IAAK,CAAC3O,KAAKjC,MAAM2b,cAErC/K,EAAAA,GAAAA,GAAoB,IAAK,CAAC3O,KAAKjC,MAAM2b,aAGjD,gBAAC6C,GAAY,CAAC7H,KAAM1U,KAAKjC,MAAM2W,MAC3B,gBAAC,YAAY,CACT/K,OAAOgF,EAAAA,GAAAA,GAAoB,KAC3BsO,eAAgBjd,KAAK0c,qBAEzB,gBAAC,UAAU,CAACzc,UAAU,gBACjBD,KAAKmc,uBACN,yBAAIkF,IAER,gBAAC,YAAY,KACT,gBAAC,MAAY,CACT9c,WAAW,YACXE,QAASzE,KAAK0c,mBACdja,OAAOyE,EAAAA,EAAAA,GAAE,UACThH,SAAUF,KAAK+F,MAAMmb,aAEzB,gBAAC,MAAY,CACT3c,WAAW,UACX9B,MAAOzC,KAAK+F,MAAMmb,WAAa,gBAAC,IAAW,OAAMha,EAAAA,EAAAA,GAAE,UACnDzC,QAASzE,KAAKshB,aACdphB,SAAUF,KAAK+F,MAAMmb,cAKzC,2EAAC,EA7FY,CAAS3gB,EAAAA,WAAS,GAA7BygB,GAAW,cACQ1E,GAAAA,GA+FzB0E,GAAY5hB,UAAY,CACpBwa,KAAMva,IAAAA,OAAAA,WACNqV,KAAMrV,IAAAA,KACNqd,mBAAoBrd,IAAAA,KACpBqE,YAAarE,IAAAA,OACbqa,WAAYra,IAAAA,QAGhB,u9EC1GA,SAASkiB,GAAY,GAUlB,IATC3H,EAAI,EAAJA,KACAlW,EAAW,EAAXA,YACApB,EAAI,EAAJA,KACAud,EAAuB,EAAvBA,wBACA2B,EAAyB,EAAzBA,0BACAC,EAAU,EAAVA,WACAC,EAAO,EAAPA,QACAC,EAAO,EAAPA,QACAC,EAAW,EAAXA,YAEMC,GAAiB3b,EAAAA,EAAAA,MACwC,MAAzBrD,EAAAA,EAAAA,UAAS,CAAE6R,MAAM,IAAQ,GAAxDoN,EAAW,KAAEC,EAAc,KAC6B,MAAzBlf,EAAAA,EAAAA,UAAS,CAAE6R,MAAM,IAAQ,GAAxDsN,EAAW,KAAEC,EAAc,KAE1B/P,GAAYgQ,EAAAA,EAAAA,YAAW5F,GAAAA,GAAvBpK,QAEAgN,EAAuC0C,EAAvC1C,SAAkBiD,EAAqBP,EAA7BrB,OAAiB6B,EAAYR,EAAZQ,QAE7BxC,EAAgB,CAAC,EACvBuC,EAAQ5f,SAAQ,SAAC+S,GACbsK,EAActK,EAAEzV,OAASyV,EAAE3W,OAC/B,IAEA,IAAM0jB,EAAoB,CAAC,EACvBzI,IAASC,EAAAA,EACTgI,EAAe/H,MAAMC,OAAOC,SAASzX,SAAQ,SAAC+S,GAC1C+M,EAAkB/M,EAAEjR,MAAQiR,EAAElO,QAAUkb,EAAAA,EAAaA,EAAAA,EAAaC,EAAAA,CACtE,IAEAV,EAAe/H,MAAMM,cAAcC,KAAK9X,SAAQ,SAAC+S,GAC7C+M,EAAkB/M,EAAEjR,MAAQiR,EAAElO,QAAUkb,EAAAA,EAAaA,EAAAA,EAAaC,EAAAA,CACtE,IAGJ,IAAMC,GAAQC,EAAAA,EAAAA,MAIdvf,EAAAA,EAAAA,YAAU,WAEN,GAAIsf,IAAUA,EAAM/X,IAAI,SAAW/G,QAAsC,IAAhBA,GAErD,GAAI8e,EAAM/X,IAAI,YAAcqX,EAAYpN,KAAM,CAC1C,IAAMgO,EAAahR,OAAOC,KAAKO,GAAS3G,MACpC,SAAC+J,GAAC,YAAgD,IAApCpD,EAAQoD,GAAGkN,EAAM/X,IAAI,UAA0B,IAEjE,GAAIiY,EAAY,CACZ,IAAMpY,EAAM4H,EAAQwQ,GAAYF,EAAM/X,IAAI,WAC1CsX,EAAe,SACRD,GAAW,IACdpN,MAAM,EACNhR,YAAa4G,EAAI5G,YACjBgW,WAAYpP,EAAIjG,KAChBuH,KAAM6J,EAAAA,KAEd,CACJ,MAAY+M,EAAM/X,IAAI,WAAaqX,EAAYpN,MAI3CqN,EAAe,SAAKD,GAAW,IAAEpN,MAAM,IAInD,GAAG,IAEH,IA8FUiO,EA9FJC,EAAoB,WACtBb,EAAe,SAAKD,GAAW,IAAEpN,MAAM,IAC3C,EAEMoL,GAAwBI,EAAAA,EAAAA,cAC1B,SAACC,GACOkC,EAAkBlC,EAAYzc,eAAiB4e,EAAAA,EAC/Cd,EAA0BrB,EAAa1K,EAAAA,IAEvCsM,EAAe,SACRD,GAAW,IACdpN,MAAM,EACNhR,YAAayc,EAAYzc,YACzBgW,WAAYyG,EAAY9b,KACxBuH,KAAM6J,EAAAA,KAGlB,GAEA,CAACqM,IAOC/B,GAAyBG,EAAAA,EAAAA,cAC3B,SAACC,GACOkC,EAAkBlC,EAAYzc,eAAiB4e,EAAAA,EAC/Cd,EAA0BrB,EAAanO,EAAAA,IAEvC+P,EAAe,SACRD,GAAW,IACdpN,MAAM,EACNhR,YAAayc,EAAYzc,YACzBgW,WAAYyG,EAAY9b,KACxBuH,KAAMoG,EAAAA,KAGlB,GAEA,CAAC8P,IAGC9B,GAA0BE,EAAAA,EAAAA,cAC5B,SAACC,GACG8B,EAAe,SACRD,GAAW,IACdtN,MAAM,EACNgF,WAAYyG,EAAY9b,KACxBX,YAAayc,EAAYzc,cAEjC,GACA,CAACse,IA0DCtC,GAjBIiD,EAAS,GACXR,GAAWA,EAAQzjB,QACnByjB,EAAQ5f,SAAQ,SAACC,GACbmgB,EAAOjgB,KAAK,SACLF,GAAI,IACPmf,QAASnf,EAAK3C,OAAS,OAE/B,IAGAuiB,GAAWA,EAAQ1jB,QACnBikB,EAAOjgB,KAAK,CAAED,MAAO,UAAW5C,MAAO,UAAW8hB,QAAS,KAGxDgB,GAKLE,GAAqB3C,EAAAA,EAAAA,cACvB,kBACI,gBAAC,SAAU,KACNR,GACGA,EAAQhhB,QACRghB,EAAQ3a,KAAI,SAAC+d,GAAQ,OACjB,gBAAC,aAAc,CACXjkB,IAAKikB,EAASjjB,MACdkjB,OAAQD,EAASnB,QAAUF,EAAa,KACxCE,QAASmB,EAASnB,QAAUmB,EAASnB,QAAU,KAC/CD,QACIoB,EAASnB,SAAWmB,EAASnB,UAAYA,EAAUD,EAAU,QAGhEoB,EAASrgB,MACG,IAEhB,GAEjB,CAACid,EAAS+B,EAAYC,EAASC,IA8BnC,OACI,gCACKjC,GAAWA,EAAQhhB,QAChB,gBAAC,IAAM,IACHskB,YAAU,EACVC,SAAS,UACJ/D,EAAW,CAAEgE,aAAc,UAAa,CAAC,GAE7CL,IAlCb,gBAAC,SAAU,KACNvgB,GACGA,EAAK5D,QACL4D,EAAKyC,KAAI,SAACuF,GAAG,OACT,gBAAC,GAAe,IACZzL,IAAKyL,EAAIyL,GACTzL,IAAKA,EACLoV,QAASA,EACTC,WAAYyC,EACZxC,cAAeA,EAEXE,sBAAAA,EACAC,uBAAAA,EACAC,wBAAAA,EAEJH,wBAAyBA,GACpBX,EACC,CACIiE,aAAcnE,EAAgBU,EAAQhhB,OAAQ4L,EAAK4U,IAEvD,CAAC,GACT,MAiBR5c,EAAK5D,OAAyD,KAAhD,gBAAC,KAAY,KAAC,oBAtHV,WACxB,GAAIojB,EAAYpN,KAAM,CAClB,IAAIjS,EACmB,EAAvB,GAAa,WAATmX,EAEAnX,EAAgE,QAA3D,EADgBof,EAAe/H,MAAMC,OAAlCC,SACSzO,MAAK,SAAC+J,GAAC,OAAKA,EAAEjR,OAASyd,EAAYpe,WAAW,WAAC,aAAxD,EAA0DiG,WAC/D,GAAa,kBAATiQ,EAA0B,OAEjCnX,EAA4D,QAAvD,EADYof,EAAe/H,MAAMM,cAA9BC,KACK9O,MAAK,SAAC+J,GAAC,OAAKA,EAAEjR,OAASyd,EAAYpe,WAAW,WAAC,aAApD,EAAsDiG,KAClE,CACA,OACI,gBAAC8S,GAAA,EAAW,CACR7C,KAAMA,EACNlF,KAAMoN,EAAYpN,KAClBgI,mBAAoBkG,EACpBlf,YAAaoe,EAAYpe,YACzBgW,WAAYoI,EAAYpI,WACxB9N,KAAMkW,EAAYlW,KAClBoR,UACI8E,EAAYlW,OAASoG,EAAAA,IAAa9K,EAAAA,EAAAA,GAAE,UAAYzE,GAAQyE,EAAAA,EAAAA,GAAE,WAAazE,GAIvF,CACA,OAAO,IACX,CA8FS2gB,GA3FL,gBAAC,GAAW,CACRxJ,KAAMA,EACNlF,KAAMsN,EAAYtN,KAClBgI,mBAjEkB,WACtBuF,EAAe,SAAKD,GAAW,IAAEtN,MAAM,IAC3C,EAgEQhR,YAAase,EAAYte,YACzBgW,WAAYsI,EAAYtI,aA0FpC,CAEA6H,GAAYniB,UAAY,CACpBwa,KAAMva,IAAAA,OAAAA,WACNqE,YAAarE,IAAAA,OACbiD,KAAMjD,IAAAA,MAAAA,WACNwgB,wBAAyBxgB,IAAAA,KACzBmiB,0BAA2BniB,IAAAA,KAC3BoiB,WAAYpiB,IAAAA,KACZqiB,QAASriB,IAAAA,OACTsiB,QAAStiB,IAAAA,OACTuiB,YAAaviB,IAAAA,OAAAA,YAGjB,UAAeye,EAAAA,EAAAA,MAAKyD,6ECjRpB,SAAS8B,GAAYtlB,GACjB,IAAQulB,GAAepB,EAAAA,EAAAA,YAAW5F,GAAAA,GAA1BgH,WAER,OAAO,gBAAC,KAAI,CAAC/e,WAAW,SAASnE,SAAUrC,EAAM6B,aAAcD,MAAO2jB,GAC1E,CAEAD,GAAYjkB,UAAY,CACpBQ,aAAcP,IAAAA,MAGlB,+BCTMkd,IAAeze,EAAAA,EAAAA,SAAO0e,KAAP1e,CAAa,sJAyClC,SA5BA,SAAqBC,GACjB,OACI,gBAAC,GAAY,CAAC2W,KAAM3W,EAAM2W,MACtB,gBAAC,YAAY,CACTuI,eAAgB,kBAAMlf,EAAM2e,oBAAmB,EAAM,EACrD/S,MAAO5L,EAAM4L,QAEjB,gBAAC,UAAU,KACP,gBAAC,KAAO,CAACpF,WAAW,OAAOlE,KAAK,WAC3BtC,EAAMmT,UAGf,gBAAC,YAAY,KACT,gBAAC,MAAY,CACT3M,WAAW,UACXE,QAAS,kBAAM1G,EAAM2e,oBAAmB,EAAM,EAC9Cja,MAAO1E,EAAMwlB,iBAAmB,WAEpC,gBAAC,MAAY,CACThf,WAAW,UACXE,QAAS,kBAAM1G,EAAM2e,oBAAmB,EAAK,EAC7Cja,MAAO1E,EAAMylB,gBAAkB,QAKnD,+hCCpBA,UAAMC,IAA0B3lB,EAAAA,EAAAA,SAAO4lB,IAAP5lB,CAAc,oLAE7B6lB,GAAAA,UAAAA,UAGV,SAASC,GAAyB7lB,GACrC,IAAqD,MAAf8E,EAAAA,EAAAA,WAAS,GAAM,GAA9CghB,EAAW,KAAEC,EAAc,KACmB,MAAfjhB,EAAAA,EAAAA,WAAS,GAAM,GAA9CkhB,EAAW,KAAEC,EAAc,KAiBlC,OAAOjmB,EAAMkmB,wBACT,2BACI,gBAACR,GAAuB,CACpB,cAAY,eACZhf,QAAS,WACLqf,GAAe,GACfE,GAAe,EACnB,EACAE,KAAK,SACLhkB,SAAUnC,EAAMomB,SAASzlB,OAAS,GACrC,cAGD,gBAAC+kB,GAAuB,CACpB,cAAY,gBACZhf,QAAS,WACLqf,GAAe,GACfE,GAAe,EACnB,EACAE,KAAK,SACLhkB,SAAUnC,EAAMomB,SAASzlB,OAAS,GACrC,eAGAmlB,GACG,gBAAC,GAAW,CACR3S,QAAO,yBACH6S,EAAc,UAAY,SAAQ,8BAEtCrP,KAAMmP,EACNnH,mBArCU,SAAChd,GACvBokB,GAAe,GACXpkB,GACgC3B,EAAMomB,SAVjC5hB,SAAQ,SAAC+H,GACVA,EAAIpK,WAAa6jB,GACjBhmB,EAAMqmB,mBAAmB9Z,EAEjC,GAQJ,EAiCgBX,MAAOoa,EAAc,cAAgB,aACrCR,gBAAgB,KAChBC,eAAe,SAI3B,IACR,oHCzEA,IAAMa,GAAqBvmB,EAAAA,QAAAA,IAAU,+JAQ/BwmB,GAAqBxmB,EAAAA,QAAAA,IAAU,8DAKrC,SAASymB,GAAY,GASlB,IARC3K,EAAI,EAAJA,KACA4K,EAAM,EAANA,OACAxK,EAAQ,EAARA,SACAyK,EAAY,EAAZA,aACAC,EAAsB,EAAtBA,uBACAC,EAAe,EAAfA,gBACAP,EAAkB,EAAlBA,mBACAH,EAAuB,EAAvBA,wBAEA,GAQI/B,EAAAA,EAAAA,YAAW5F,GAAAA,GAPXsI,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACAC,EAAc,EAAdA,eACAC,EAAW,EAAXA,YACAC,EAAU,EAAVA,WACAC,EAAa,EAAbA,cACAC,EAAa,EAAbA,cAGEC,EAAYvL,IAASC,EAAAA,EAAa,QAAU,OA0BlD,OACI,gBAACwK,GAAkB,KACf,2BACI,wBAAMpkB,UAAU,eACXwkB,EACAA,EAAe,GAAIvd,EAAAA,EAAAA,GAAE,IAAD,OAAKie,EAAS,OAAOje,EAAAA,EAAAA,GAAE,IAAD,OAAKie,KAEnDvL,IAASC,EAAAA,EACN,gBAAC,KAAqB,KAClB,gBAAC,KAAM,CACHla,MAAOilB,EACP3kB,UAAU,eACVG,SAAU,SAACV,EAAG,GAAc,IAAZC,EAAK,EAALA,MACZmlB,EAAe,GACfC,EAAYplB,EAChB,GAEA,gBAAC,YAAa,CAACd,IAAI,KAAK4D,OAAOyE,EAAAA,EAAAA,GAAE,eAAgBvH,MAAO,KACxD,gBAAC,YAAa,CAACd,IAAI,KAAK4D,OAAOyE,EAAAA,EAAAA,GAAE,eAAgBvH,MAAO,KACxD,gBAAC,YAAa,CAACd,IAAI,KAAK4D,OAAOyE,EAAAA,EAAAA,GAAE,eAAgBvH,MAAO,OAE1D6kB,GA7CQ,WAC1B,GAAIxK,EAAStb,OAAS,EAClB,OAAO,KAEX,IAAI0mB,EAAM,GAMV,OALAA,EAAMpL,EAASjV,KAAI,SAACkV,GAAO,OACvB,gBAAC,YAAa,CAACpb,IAAKob,EAAQ5V,KAAM5B,MAAOwX,EAAQtQ,MAAOhK,MAAOsa,EAAQ5V,MAAQ,KAG/EghB,QAAQ,gBAAC,YAAa,CAACxmB,IAAI,MAAM4D,OAAOyE,EAAAA,EAAAA,GAAE,OAAQvH,MAAM,SAExD,gBAAC,KAAM,CACHA,MAAOqlB,EACP/kB,UAAU,gBACVG,SAAU,SAACV,EAAG,GAAc,IAAZC,EAAK,EAALA,MACZmlB,EAAe,GACfG,EAActlB,EAClB,GAECylB,EAGb,CAuBgCE,IAEhB,MAER,gBAAChB,GAAkB,KACf,gBAAC,GAAW,CACR1kB,aAAc,SAACF,EAAG,GAAc,IAAZC,EAAK,EAALA,MAChBmlB,EAAe,GACfI,EAAcvlB,EAClB,KAGR,2BACI,gBAAC,KAAS,CACNS,SAAU,SAACV,EAAG,GAAF,IAAU6lB,EAAU,EAAhB3L,KAAI,OAAmBkL,EAAeS,EAAa,EAAE,EACrEpiB,QAAS0hB,EAAc,EACvBW,wBAAsB,EACtBC,WAAYC,KAAKC,KAAKlB,EAAeG,KAExCJ,GACG,gBAAC,MAAY,CACT/hB,OAAOyE,EAAAA,EAAAA,GAAE,OACT3C,WAAW,UACXE,QAASigB,KAIrB,gBAACd,GAAwB,CACrBK,wBAAyBA,EACzBE,SAAUQ,EACVP,mBAAoBA,IAIpC,CAEAG,GAAYnlB,UAAY,CACpBwa,KAAMva,IAAAA,OACN2a,SAAU3a,IAAAA,MACVolB,aAAcplB,IAAAA,OACdmlB,OAAQnlB,IAAAA,KACRqlB,uBAAwBrlB,IAAAA,KACxB4kB,wBAAyB5kB,IAAAA,KACzB+kB,mBAAoB/kB,IAAAA,KACpBslB,gBAAiBtlB,IAAAA,OAGrB,gvEChIA,SAASumB,GAAa,GAMnB,IALChM,EAAI,EAAJA,KACAlW,EAAW,EAAXA,YACAghB,EAAsB,EAAtBA,uBACAlD,EAAyB,EAAzBA,0BACAyC,EAAuB,EAAvBA,wBAE8C,MAAhBphB,EAAAA,EAAAA,UAAS,QAAO,GAAvC8e,EAAO,KAAEkE,EAAU,KACmB,MAAfhjB,EAAAA,EAAAA,UAAS,OAAM,GAAtC6e,EAAO,KAAEoE,EAAU,KACkB,MAAdjjB,EAAAA,EAAAA,WAAS,GAAK,GAArCC,EAAO,KAAEC,EAAU,KACc,MAAdF,EAAAA,EAAAA,UAAS,MAAK,GAAjC9C,EAAK,KAAEgmB,EAAQ,KAEtB,GACI7D,EAAAA,EAAAA,YAAW5F,GAAAA,GADPpK,EAAO,EAAPA,QAAS8D,EAAU,EAAVA,WAAY4O,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAAavB,EAAU,EAAVA,WAAY0B,EAAU,EAAVA,WAG1DnD,GAAiB3b,EAAAA,EAAAA,MAEjB8T,EACFJ,IAASC,EAAAA,EACHgI,EAAe/H,MAAMC,OAAOC,SAC5B6H,EAAe/H,MAAMM,cAAcC,KAAK/V,QAAO,SAACgR,GAAC,OAAKA,EAAEjR,OAASX,CAAW,IAEhFke,EACFhI,IAASC,EAAAA,EACHgI,EAAe/H,MAAMC,OAAOQ,OAC5BP,EAASzO,MAAK,SAAC+J,GAAC,OAAKA,EAAEjR,OAASX,CAAW,IAAE6W,MAC7CsH,EAAe/H,MAAMM,cAAcC,KAAK9O,MAAK,SAAC+J,GAAC,OAAKA,EAAEjR,OAASX,CAAW,IAAE6W,MAE9E2E,EAAa0C,EAAb1C,SACFiD,EAAUP,EAAYrB,OACtBiE,IAAW9gB,GAgEjBR,EAAAA,EAAAA,YAAU,WAzCU,IACV8iB,IAAW,GACjBhM,EAASzX,SAAQ,SAAC0X,GACd+L,EAAStjB,MACLiB,EAAAA,EAAAA,GAAiB,CACbD,YAAauW,EAAQ5V,KACrBb,OAAQ,CAAEC,OAAQ,KAG9B,IACAJ,EAAAA,EAAAA,IACS2iB,GACL,OACO,SAACjmB,GACJ,IAAImR,EAAU,GACVmN,EAAY,GAmBhB,OAlBIte,EAAM8D,UAENqN,EAAU,+BAAH,OAAkCnR,EAAM8D,SAASvB,KAAK2jB,SAAS,GAAG9nB,MACzEkgB,EAAYzE,IAASC,EAAAA,EAAa,UAAY,WACvC9Z,EAAMmmB,SAEbhV,EAAU,gDAAH,OAAmD0I,EAAI,aAC9DyE,EAAY,YAGZnN,EAAU,2BAAH,OAA8B0I,EAAI,aACzCyE,EAAY,WAGhBte,EAAMue,aAAeD,GACrBjI,EAAAA,EAAAA,IAAclF,GACdnO,GAAW,GACXgjB,EAAShmB,GACFwH,QAAQ4Z,OAAOphB,EAC1B,IACC6D,MAAK,SAACC,GAzDW,IAACvB,EACjBN,EADiBM,EA0DGuB,EAASkB,KAAI,SAACohB,GAAG,OAAKA,EAAI7jB,KAAKyB,KAAK,IAzDxD/B,EAAM,CAAC,EACbgY,EAASzX,SAAQ,SAAC0X,EAAS7H,GACvB,GAAI6H,GAAWA,EAAQ5V,MAAQ/B,EAAM,CACjC,IAAMuT,EAAS,CAAC,EAChBvT,EAAK8P,GAAO7P,SAAQ,SAAC4P,GACjB0D,EAAO1D,EAAI9N,MAAQ,SACZ8N,EAAI2D,SAAO,IACdC,GAAI5D,EAAI4D,GACR1R,KAAM8N,EAAI9N,KACVX,YAAauW,EAAQ5V,KACrB+hB,aAAcnM,EAAQtQ,OAAS,IAEvC,IACA3H,EAAIiY,EAAQ5V,MAAQwR,CACxB,CACJ,IACAG,EAAWhU,GACXe,GAAW,EAyCP,GAMR,GAAG,IAMH,IAAMqhB,EAAqB,SAAC9Z,GACxB0L,GAAW,SAACqQ,GAAc,OACtBpQ,IAAOoQ,EAAgB,MAClB/b,EAAI5G,YAAW,MACX4G,EAAIjG,KAAO,CACRic,oBAAqB,CAAE1J,MAAM,MAGvC,IAEN,IAAMvB,EAAO,IAAIlB,gBACjBkB,EAAKE,OAAO,YAAajL,EAAIpK,WAC7ByD,EAAAA,EAAAA,GAAiB,CACbD,YAAa,GAAF,OAAK4G,EAAI5G,YAAW,YAAI4G,EAAIjG,MACvCgR,KAAAA,EACAK,cAAe,CAAE,eAAgB,qCACjCC,OAAQ,OACRpS,aAAa,EACb+iB,gBAAiB,WACbtQ,GAAW,SAACqQ,GAAc,OACtBpQ,IAAOoQ,EAAgB,MAClB/b,EAAI5G,YAAW,MACX4G,EAAIjG,KAAO,CACRic,oBAAqB,CAAE1J,MAAM,MAGvC,GAEV,IACDhT,MAAK,SAACC,GACLmS,GAAW,SAACqQ,GAAc,OACtBpQ,IAAOoQ,EAAgB,MAClB/b,EAAI5G,YAAW,MACX4G,EAAIjG,KAAO,CAERnE,SAAU,CAAE0W,MAAM2P,EAAAA,EAAAA,IAAO1iB,EAASvB,KAAKyB,MAAM,GAAG+R,QAAQ5V,WACxDogB,oBAAqB,CAAE1J,MAAM,MAGvC,GAEV,GACJ,EAgBM4P,EAAsB,SAAClkB,GACzB,IAAM8iB,EAAM,GACNqB,EAAc,GAuBpB,OArBAtE,EAAQ5f,SAAQ,SAACugB,GACb2D,EAAY/jB,KAAKogB,EAASjjB,MAC9B,IACAqf,SAAAA,EAAU3c,SAAQ,SAACmkB,GACfD,EAAY/jB,KAAKgkB,EAAa7mB,MAClC,IAEA6R,OAAOC,KAAKrP,GAAMC,SAAQ,SAACokB,GACvB,IAAIC,GAAQ,EACZlV,OAAOC,KAAKrP,EAAKqkB,IAAIpkB,SAAQ,SAACskB,GAEtBJ,EAAYjb,SAASqb,IACE,iBAAhBvkB,EAAKqkB,GAAGE,IACfvkB,EAAKqkB,GAAGE,GAAI1L,cAAc3P,SAAS8X,EAAWnI,cAAc2L,UAC3DF,IAEDxB,EAAI1iB,KAAKJ,EAAKqkB,IACdC,GAAQ,EAEhB,GACJ,IACOxB,CACX,EA+CA,GAAIrlB,SAAAA,EAAOue,aACP,MAAMve,EAGV,GAAI+C,EACA,OAAO,gBAAC,KAAkB,CAAC+L,KAAK,WAGpC,IAAkE,KArD/C,WACf,IAAIuW,EAAM,GACS,QAAfJ,EACAtT,OAAOC,KAAKO,GAAS3P,SAAQ,SAAC1D,GAC1B,IAAIkoB,EAEAA,EADAzD,GAAcA,EAAW5kB,OAChB8nB,EAAoBtU,EAAQrT,IAE5B6S,OAAOC,KAAKO,EAAQrT,IAAMkG,KAAI,SAACoN,GAAG,OAAKD,EAAQrT,GAAKsT,EAAI,IAErEiT,EAAMA,EAAIrmB,OAAOgoB,EACrB,IAEA3B,EAAMoB,EAAoBtU,EAAQ8S,IAIlCR,IACAY,EAAMA,EAAI9gB,QAAO,SAACqiB,GAAC,OAAKA,EAAEjjB,cAAgBA,CAAW,KAIzD,IAAMsjB,EAAY5B,EAAI6B,MAAK,SAACC,EAAMC,GAC9B,GAAgB,QAAZzF,EAGA,YAFoClZ,IAAlB0e,EAAKvF,GAAyB,GAAKuF,EAAKvF,UACtBnZ,IAAlB2e,EAAKxF,GAAyB,GAAKwF,EAAKxF,IAC3B,GAAK,EAExC,GAAgB,SAAZD,EAAoB,CACpB,IAAM0F,OAA8B5e,IAAlB0e,EAAKvF,GAAyB,GAAKuF,EAAKvF,GAE1D,YADoCnZ,IAAlB2e,EAAKxF,GAAyB,GAAKwF,EAAKxF,IACvCyF,EAAY,GAAK,CACxC,CACA,OAAO,CACX,IAEIC,EAAaL,EAAUM,MAAMzC,EAAcD,GAAWC,EAAc,GAAKD,GAM7E,OAJIC,EAAc,IAAMwC,EAAW3oB,SAC/B2oB,EAAaL,EAAUM,OAAOzC,EAAc,GAAKD,EAAUA,IAGxD,CAACyC,EAAYjC,EAAI1mB,OAAQ0mB,EACpC,CAUsDmC,GAAY,GAA3DC,EAAY,KAAE/C,EAAY,KAAEE,EAAe,KAClD,OACI,gCACI,gBAAC,GAAW,CACR/K,KAAMA,EACNI,SAAUA,EACVyK,aAAcA,EACdC,uBAAwBA,EACxBN,mBAAoBA,EACpBI,OAAQA,EACRG,gBAAiBA,EACjBV,wBAAyBA,IAE7B,gBAAC,GAAW,CACRrK,KAAMA,EACNlW,YAAaA,EACbpB,KAAMklB,EACN3H,wBAAyB,SAACvV,GAAG,OAAK8Z,EAAmB9Z,EAAI,EACzDmX,WAjHO,SAAC/hB,EAAGyS,GACnB,IACMsV,EADc9F,IACgBxP,EAAIwP,QAAUD,EAAU,OAE5DoE,EADoC,QAAhB2B,EAAwB,OAAS,OAErD5B,EAAW1T,EAAIwP,QACnB,EA4GYD,QAASA,EACTC,QAASA,EACTH,0BAA2BA,EAC3BI,YAAaA,EACb5H,SAAUA,IAI1B,CAEA4L,GAAaxmB,UAAY,CACrBwa,KAAMva,IAAAA,OACNqE,YAAarE,IAAAA,OACbqlB,uBAAwBrlB,IAAAA,KACxBmiB,0BAA2BniB,IAAAA,KAC3B4kB,wBAAyB5kB,IAAAA,MAG7B,UAAeye,EAAAA,EAAAA,MAAK8H,8CCpSb,IAAMtD,EAAa,OACbC,EAAc,sECDpB,IAAMvQ,EAAa,QACbnG,EAAc,SAEd4J,EAAY,OACZG,EAAc,2DCad8R,EAA6B,CACtCtP,IAAK,CAAEuP,MAPP,6VAOyBC,gBAAgBjZ,EAAAA,EAAAA,GAAoB,MAC7DkZ,MAAO,CAAEF,MAZT,wIAY6BC,gBAAgBjZ,EAAAA,EAAAA,GAAoB,MACjEmZ,KAAM,CAAEH,MAhBc,sDAgBKC,gBAAgBjZ,EAAAA,EAAAA,GAAoB,MAC/DoZ,KAAM,CAAEJ,MANR,mJAM2BC,gBAAgBjZ,EAAAA,EAAAA,GAAoB,smCClBnE,IAAM2N,GAAe0L,EAAAA,EAAAA,eAAc,CAC/B9V,QAAS,CAAC,EACV8D,WAAY,WAAO,IAGhB,SAASiS,EAAqB,GAAc,IAAZtlB,EAAQ,EAARA,SACO,KAAZE,EAAAA,EAAAA,UAAS,CAAC,GAAE,GAAnCqP,EAAO,KAAE8D,EAAU,KACsB,KAAZnT,EAAAA,EAAAA,UAAS,IAAG,GAAzCygB,EAAU,KAAE4B,EAAa,KACmB,KAAfriB,EAAAA,EAAAA,UAAS,OAAM,GAA5CmiB,EAAU,KAAEC,EAAa,KACY,KAAZpiB,EAAAA,EAAAA,UAAS,IAAG,GAArC+hB,EAAQ,KAAEG,EAAW,KACqB,KAAXliB,EAAAA,EAAAA,UAAS,GAAE,GAA1CgiB,EAAW,KAAEC,EAAc,KAElC,OACI,gBAACxI,EAAa4L,SAAQ,CAElBvoB,MAAO,CACHuS,QAAAA,EACA8D,WAAAA,EACAsN,WAAAA,EACA4B,cAAAA,EACAF,WAAAA,EACAC,cAAAA,EACAL,SAAAA,EACAG,YAAAA,EACAF,YAAAA,EACAC,eAAAA,IAGHniB,EAGb,CAEAslB,EAAqB7oB,UAAY,CAC7BuD,SAAUtD,IAAAA,UAAoB,CAACA,IAAAA,QAAkBA,IAAAA,MAAiBA,IAAAA,OAAiBuf,YAGvF,2DCjCA,QAJA,WACI,OAAO,IAAIzK,iBAAgBgU,EAAAA,EAAAA,MAAcC,OAC7C,gMCFO,IAAMC,EAAiBvqB,EAAAA,QAAAA,IAAAA,MAAiB,CAC3CmC,UAAW,aADenC,CAE5B,kGAEmB6lB,EAAAA,UAAAA,iBAKR2E,EAAoBxqB,EAAAA,QAAAA,IAAAA,MAAiB,CAC9CmC,UAAW,gBADkBnC,CAE/B,qGAEmB6lB,EAAAA,UAAAA,UAKgB7lB,EAAAA,QAAAA,IAAU,qxDCF/C,IAAMyqB,oBAAsB,SAAtBA,oBAAuBC,QACzB,IAAIxZ,IACAF,OAEJ,IAEIA,OAAS2Z,KAAK,IAAD,OAAKD,OAAM,KAC5B,CAAE,MAAO9oB,GACLsP,KAAML,EAAAA,0CAAAA,GAAoB,GAAI6Z,OAClC,CAEA,MAAO,CAAExZ,IAAKF,OAClB,EAGO,SAASkE,cAAcuE,EAAemR,GACzC,MAA0BH,oBAAoBhR,GAAtCxX,EAAK,EAALA,MAAO+O,EAAM,EAANA,OACf,GAAI/O,EACA,MAAO,CAAE8M,SAAU9M,GAEvB,IAAM4oB,EAAM7Z,EAAO4Z,GACnB,MAAmB,iBAARC,EACA,CAAE9b,SAAU8b,QADvB,CAGJ,CAEA,IAAMC,qBAAuB,SAACC,GAM1B,MAAO,CAAE9oB,MAJY,IAAjB8oB,EAAMnqB,QAAgBwI,oCAAAA,SAAW2hB,EAAM,KAAO3hB,oCAAAA,SAAW2hB,EAAM,KAAOA,EAAM,IAAMA,EAAM,QAE/DrgB,GAAYmG,EAAAA,0CAAAA,GAAoB,GAAIma,KAAKC,UAAUF,IAGpF,EAEMG,iBAAmB,SAACR,GACtB,IAAIzoB,EACA+O,EAEJ,IACIA,EAAS,IAAIma,OAAOT,EACxB,CAAE,MAAO9oB,GACLK,GAAQ4O,EAAAA,0CAAAA,GAAoB,GAAI6Z,EACpC,CAEA,MAAO,CAAEzoB,MAAAA,EAAO+O,OAAAA,EACpB,EAEMrC,UAAS,WACX,WAAY4F,GAAU,wBAClBrS,KAAKqS,SAAWA,EAChBrS,KAAKkpB,OAAS7W,EAAS9G,MAAK,SAAC7L,GAAC,MAAiB,SAAZA,EAAEG,KAAgB,GACzD,CAwJC,OAtJD,0CAwJA,SAAayC,GACT,GAAItC,KAAKkpB,OAAQ,CACb,IAAMzS,EAAcnU,EAAK+B,KACnB8kB,EAAiBnpB,KAAKkpB,OAAOzmB,MAEnC,QAA2B,IAAhBgU,GAA+C,KAAhBA,GAAqC,MAAfA,EAC5D,MAAO,CAAE3D,WAAY,OAAQjG,UAAU8B,EAAAA,0CAAAA,GAAoB,EAAG,CAACwa,KAEnE,KAA6B,iBAAhB1S,GAA4BA,aAAuB3F,QAC5D,MAAO,CAAEgC,WAAY,OAAQjG,UAAU8B,EAAAA,0CAAAA,GAAoB,EAAG,CAACwa,KAEnE,GACI1S,EAAY2S,WAAW,MACP,MAAhB3S,GACgB,OAAhBA,GAC8B,YAA9BA,EAAY0E,cAEZ,MAAO,CAAErI,WAAY,OAAQjG,UAAU8B,EAAAA,0CAAAA,GAAoB,EAAG,CAACwa,KAGnE,GAD4B,CAAC,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,KACzC5c,MAAK,SAAC8c,GAAC,OAAK5S,EAAY6S,QAAQD,IAAM,CAAC,IAC3D,MAAO,CAAEvW,WAAY,OAAQjG,UAAU8B,EAAAA,0CAAAA,GAAoB,EAAG,CAACwa,KAGnE,GAAI1S,EAAY/X,QAAU,KACtB,MAAO,CAAEoU,WAAY,OAAQjG,UAAU8B,EAAAA,0CAAAA,GAAoB,GAAI,CAACwa,IAExE,CAEA,IAAIR,EACAlqB,EACA8qB,EAEJ,IAAK9qB,EAAI,EAAGA,EAAIuB,KAAKqS,SAAS3T,OAAQD,GAAK,EAAG,CAC1C,IAAkC,IAA9BuB,KAAKqS,SAAS5T,GAAG2F,WACjBukB,EAAMlc,EAAU+c,kBACZxpB,KAAKqS,SAAS5T,GAAGoB,MACjBG,KAAKqS,SAAS5T,GAAGgE,MACjBH,EAAKtC,KAAKqS,SAAS5T,GAAGoB,SAGtB,OAAO8oB,EAGf,GAAqC,KAAjCrmB,EAAKtC,KAAKqS,SAAS5T,GAAGoB,QAAkD,OAAjCyC,EAAKtC,KAAKqS,SAAS5T,GAAGoB,OAAjE,CAMA,GAC8B,SAA1BG,KAAKqS,SAAS5T,GAAG4B,MACgB,qBAAjCiC,EAAKtC,KAAKqS,SAAS5T,GAAGoB,OAEtB,MAAO,CACHiT,WAAY9S,KAAKqS,SAAS5T,GAAGoB,MAC7BgN,UAAU8B,EAAAA,0CAAAA,GAAoB,KAItC,GAAI3O,KAAKqS,SAAS5T,GAAGiO,WACjB,IAAK6c,EAAI,EAAGA,EAAIvpB,KAAKqS,SAAS5T,GAAGiO,WAAWhO,OAAQ6qB,GAAK,EACrD,OAAQvpB,KAAKqS,SAAS5T,GAAGiO,WAAW6c,GAAGlpB,MACnC,IAAK,SAOD,GANAsoB,EAAMlc,EAAUgd,gBACZzpB,KAAKqS,SAAS5T,GAAGoB,MACjBG,KAAKqS,SAAS5T,GAAGgE,MACjBzC,KAAKqS,SAAS5T,GAAGiO,WAAW6c,GAC5BjnB,EAAKtC,KAAKqS,SAAS5T,GAAGoB,QAGtB,OAAO8oB,EAEX,MACJ,IAAK,QAOD,GANAA,EAAMlc,EAAUid,eACZ1pB,KAAKqS,SAAS5T,GAAGoB,MACjBG,KAAKqS,SAAS5T,GAAGgE,MACjBzC,KAAKqS,SAAS5T,GAAGiO,WAAW6c,GAC5BjnB,EAAKtC,KAAKqS,SAAS5T,GAAGoB,QAGtB,OAAO8oB,EAEX,MACJ,IAAK,SAOD,GANAA,EAAMlc,EAAUkd,gBACZ3pB,KAAKqS,SAAS5T,GAAGoB,MACjBG,KAAKqS,SAAS5T,GAAGgE,MACjBzC,KAAKqS,SAAS5T,GAAGiO,WAAW6c,GAC5BjnB,EAAKtC,KAAKqS,SAAS5T,GAAGoB,QAGtB,OAAO8oB,EAEX,MACJ,IAAK,MASD,GARAA,EAAMlc,EAAUmd,yBACZ5pB,KAAKqS,SAAS5T,GAAGoB,MACjBG,KAAKqS,SAAS5T,GAAGgE,MACjBzC,KAAKqS,SAAS5T,GAAGiO,WAAW6c,GAC5BjnB,EAAKtC,KAAKqS,SAAS5T,GAAGoB,OACtB6nB,wDAAAA,GAAAA,IAAAA,MACAA,wDAAAA,GAAAA,IAAAA,gBAGA,OAAOiB,EAEX,MACJ,IAAK,OASD,GARAA,EAAMlc,EAAUmd,yBACZ5pB,KAAKqS,SAAS5T,GAAGoB,MACjBG,KAAKqS,SAAS5T,GAAGgE,MACjBzC,KAAKqS,SAAS5T,GAAGiO,WAAW6c,GAC5BjnB,EAAKtC,KAAKqS,SAAS5T,GAAGoB,OACtB6nB,wDAAAA,GAAAA,KAAAA,MACAA,wDAAAA,GAAAA,KAAAA,gBAGA,OAAOiB,EAEX,MACJ,IAAK,QASD,GARAA,EAAMlc,EAAUmd,yBACZ5pB,KAAKqS,SAAS5T,GAAGoB,MACjBG,KAAKqS,SAAS5T,GAAGgE,MACjBzC,KAAKqS,SAAS5T,GAAGiO,WAAW6c,GAC5BjnB,EAAKtC,KAAKqS,SAAS5T,GAAGoB,OACtB6nB,wDAAAA,GAAAA,MAAAA,MACAA,wDAAAA,GAAAA,MAAAA,gBAGA,OAAOiB,EAEX,MACJ,IAAK,OASD,GARAA,EAAMlc,EAAUmd,yBACZ5pB,KAAKqS,SAAS5T,GAAGoB,MACjBG,KAAKqS,SAAS5T,GAAGgE,MACjBzC,KAAKqS,SAAS5T,GAAGiO,WAAW6c,GAC5BjnB,EAAKtC,KAAKqS,SAAS5T,GAAGoB,OACtB6nB,wDAAAA,GAAAA,KAAAA,MACAA,wDAAAA,GAAAA,KAAAA,gBAGA,OAAOiB,EAEX,MACJ,IAAK,SAMD,GALAA,EAAMlc,EAAUod,gBACZ7pB,KAAKqS,SAAS5T,GAAGiO,WAAW6c,GAAGhS,cAC/BvX,KAAKqS,SAAS5T,GAAGoB,MACjByC,EAAKtC,KAAKqS,SAAS5T,GAAGoB,QAGtB,OAAO8oB,EA5G3B,CAmHJ,CACA,OAAO,CACX,IAAC,gCA/SD,SAAyB9oB,EAAO4C,EAAOH,GACnC,OAAKmK,EAAUqd,qBAAqBxnB,IACzB,CAAEwQ,WAAYjT,EAAOgN,UAAU8B,EAAAA,0CAAAA,GAAoB,EAAG,CAAClM,IAGtE,GAQA,6BAQA,SAAuB5C,EAAO4C,EAAOkK,EAAWrK,GAC5C,OAAImK,EAAUqd,qBAAqBxnB,IAASA,EAAK5D,OAASiO,EAAUod,UACzD,CACHjX,WAAYjT,EACZgN,SAAUF,EAAUE,SACdF,EAAUE,UACV8B,EAAAA,0CAAAA,GAAoB,GAAI,CAAClM,EAAOkK,EAAUod,gBAGpDtd,EAAUqd,qBAAqBxnB,IAASA,EAAK5D,OAASiO,EAAUqd,YACzD,CACHlX,WAAYjT,EACZgN,SAAUF,EAAUE,SACdF,EAAUE,UACV8B,EAAAA,0CAAAA,GAAoB,GAAI,CAAClM,EAAOkK,EAAUqd,YAI5D,GAOA,4BAQA,SAAsBnqB,EAAO4C,EAAOkK,EAAWrK,GAC3C,MAAiC0mB,iBAAiBrc,EAAUsd,SAApDlqB,EAAK,EAALA,MAAe4nB,EAAK,EAAb7Y,OACf,OAAI/O,EACO,CAAE+S,WAAYjT,EAAOgN,SAAU9M,MAEtC0M,EAAUqd,qBAAqBxnB,IAAUqlB,EAAMuC,KAAK5nB,KAC7C,CACHwQ,WAAYjT,EACZgN,SAAUF,EAAUE,SACdF,EAAUE,UACV8B,EAAAA,0CAAAA,GAAoB,GAAI,CAAClM,EAAOkK,EAAUsd,UAI5D,GAEA,6BACA,SAAuB1S,EAAe1X,EAAOyC,GACzC,IAAMqmB,EAAMpR,EAAc1X,EAAOyC,GACjC,MAAmB,iBAARqmB,GACA,CAAE7V,WAAYjT,EAAOgN,SAAU8b,EAG9C,GAEA,sCACA,SAAgC9oB,EAAO4C,EAAOkK,EAAWrK,EAAM2nB,EAASrC,GACpE,MAAiCoB,iBAAiBiB,GAA1ClqB,EAAK,EAALA,MAAe4nB,EAAK,EAAb7Y,OACf,OAAI/O,EACO,CAAE+S,WAAYjT,EAAOgN,SAAU9M,MAEtC0M,EAAUqd,qBAAqBxnB,IAAUqlB,EAAMuC,KAAK5nB,KAC7C,CACHwQ,WAAYjT,EACZgN,SAAUF,EAAUE,SACdF,EAAUE,UACV8B,EAAAA,0CAAAA,GAAoB,GAAI,CAAClM,EAAOmlB,IAIlD,GAeA,6BACA,SAAuB/nB,EAAO4C,EAAOkK,EAAWrK,GAC5C,IAAQvC,EAAU6oB,qBAAqBjc,EAAUkc,OAAzC9oB,MACR,GAAIA,EACA,MAAO,CAAE+S,WAAYjT,EAAOgN,SAAU9M,GAG1C,IAAMoS,EAAM1J,OAAOnG,GACnB,OAAImG,OAAOC,MAAMyJ,GACN,CACHW,WAAYjT,EACZgN,SAAUF,EAAUE,SACdF,EAAUE,UACV8B,EAAAA,0CAAAA,GAAoB,GAAI,CAAClM,QAIlCgK,EAAUqd,qBAAqBxnB,IAAS6P,EAAMxF,EAAUkc,MAAM,IAC/D1W,EAAMxF,EAAUkc,MAAM,KAEf,CACH/V,WAAYjT,EACZgN,SAAUF,EAAUE,SACdF,EAAUE,UACV8B,EAAAA,0CAAAA,GAAoB,EAAG,CAAClM,EAAOkK,EAAUkc,MAAM,GAAIlc,EAAUkc,MAAM,KAIrF,KAAC,EA5JU,GA4JV,gBA5JCpc,UAAS,wBAOmB,SAAC0d,GAAS,OACpCA,UAEsB,iBAAdA,GAA8C,KAArBA,EAAUrD,OAAqB,IA2TxE,8zCCtXA,IAAMnjB,EAAmB,SAAH,GAUhB,IATFD,EAAW,EAAXA,YACApC,EAAW,EAAXA,YACAkC,EAAM,EAANA,OACA6R,EAAI,EAAJA,KACA/R,EAAW,EAAXA,YAAW,IACXoS,cAAAA,OAAa,IAAG,GAAC,EAAC,MAClBC,OAAAA,OAAM,IAAG,QAAK,MACdpS,YAAAA,OAAW,IAAG,GAAK,MACnB+iB,gBAAAA,OAAe,IAAG,aAAO,EAAC,EAEpBtS,EAAWtQ,GAAc0mB,EAAAA,EAAAA,IAAoB1mB,GAAepC,EAC5D+oB,EAAU,CACZC,IAAAA,EAAAA,IACAC,MAAO,UAELC,EAAc,CAChB,oBAAqBC,EAAAA,UACrB,mBAAoB,iBACpB,eAAgB,oBAEdtI,EAAUzQ,OAAOgZ,OAAOF,EAAa9U,GACrC0C,GAAMuS,EAAAA,EAAAA,eAAc3W,EAAUqW,GAEhCO,EAAY,CAAEC,YAAa,QAC3BrnB,IACAonB,EAAY,EAAH,KAAQA,GAAcpnB,IAGnC,IAAMR,EAAU,CACZQ,OAAQonB,EACRjV,OAAAA,EACAyC,IAAAA,EACA0S,YAAa,UACb3I,QAAAA,EACA7e,YAAAA,GAOJ,MAJe,SAAXqS,IACA3S,EAAQV,KAAO+S,GAGZ9R,GACDF,EAAAA,EAAAA,GAAML,GAAQ,OAAO,SAACjD,GAClB,IAAImR,EAAU,GACd,OAAI7N,EAAAA,EAAAA,SAAetD,KAKfmR,EAFAnR,EAAM8D,SAEI,wCAAH,OAA2C9D,EAAM8D,SAASvB,KAAK2jB,SAAS,GAAG9nB,MAC3E4B,EAAMmmB,QAEH,gDAAH,OAAmDlS,GAGhD,gBAAH,OAAmB2B,EAAM,uBAAe3B,IAEnDoC,EAAAA,EAAAA,IAAclF,EAAS,SACvBoV,EAAgBvmB,IAbLwH,QAAQ4Z,OAAOphB,EAe9B,KACAsD,EAAAA,EAAAA,GAAML,EAChB","sources":["webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/MarkdownMessage.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/TextComponent.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/TextAreaComponent.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/SingleInputComponent.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/MultiInputComponent.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CheckBoxComponent.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/RadioComponent.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/PlaceholderComponent.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CustomControl.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/FileInputComponent.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CheckboxGroup/StyledComponent.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CheckboxGroup/checkboxGroup.utils.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/Group.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CheckboxGroup/CheckboxRow.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CheckboxGroup/CheckboxRowWrapper.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CheckboxGroup/CheckboxSubGroup.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CheckboxGroup/CheckboxGroup.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/constants/ControlTypeMap.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CheckboxGroup/checkboxGroupValidation.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/constants/fileInputConstant.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/HelpLinkComponent.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/ControlWrapper.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/constants/oAuthErrorMessage.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/BaseFormView.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/EntityModal.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/EntityPage.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/constants/errorCodes.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/ErrorBoundary.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/table/CustomTableControl.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/table/TableExpansionRow.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/table/CustomTableRow.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/DeleteModal.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/table/CustomTable.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/table/TableFilter.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/AcceptModal.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/InteractAllStatusButton.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/table/TableHeader.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/table/TableWrapper.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/constants/dialogStyles.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/constants/modes.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/constants/preDefinedRegex.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/context/TableContext.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/hooks/useQuery.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/pages/Input/InputPageStyle.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/util/Validator.js","webpack://@splunk/ucc_ui_lib/./src/main/webapp/util/axiosCallWrapper.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Link from '@splunk/react-ui/Link';\n\nconst MarkdownWrapper = styled.span`\n    color: ${(props) => props.color};\n`;\n\nfunction MarkdownMessage(props) {\n    // flatMap adds the link to the part of text that has been split from text\n    // and returns a new array formed by applying a given function to each element of the array,\n    // and then flattening the result by one level\n    function flatMap(array, fn) {\n        let markdownText = [];\n        for (let i = 0; i < array.length; i += 1) {\n            const mapping = fn(array[i]);\n            markdownText = markdownText.concat(mapping);\n        }\n        return markdownText;\n    }\n\n    function getMarkdownText() {\n        let markdownText = props.text;\n        if (props.markdownType === 'link') {\n            markdownText = <Link to={props.link}>{props.text}</Link>;\n        } else if (props.markdownType === 'hybrid') {\n            // markdownType hybrid is for support of both text and link\n            markdownText = flatMap(markdownText.split(props.token), (part) => [\n                part,\n                <Link key={part} to={props.link}>\n                    {props.linkText}\n                </Link>,\n            ]);\n            markdownText.pop();\n        } else if (props.markdownType === 'text') {\n            markdownText = <MarkdownWrapper color={props.color}>{props.text}</MarkdownWrapper>;\n        }\n\n        return markdownText;\n    }\n\n    return <div data-test=\"msg-markdown\">{getMarkdownText()}</div>;\n}\n\nMarkdownMessage.propTypes = {\n    text: PropTypes.string,\n    link: PropTypes.string,\n    color: PropTypes.string,\n    markdownType: PropTypes.string,\n    token: PropTypes.string,\n    linkText: PropTypes.string,\n};\n\nexport default React.memo(MarkdownMessage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from '@splunk/react-ui/Text';\nimport styled from 'styled-components';\n\nconst TextWrapper = styled(Text)`\n    width: 320px !important;\n`;\n\nclass TextComponent extends Component {\n    handleChange = (e, { value }) => {\n        this.props.handleChange(this.props.field, value);\n    };\n\n    render() {\n        return (\n            <TextWrapper\n                inline\n                error={this.props.error}\n                className={this.props.field}\n                disabled={this.props.disabled}\n                value={\n                    this.props.value === null || typeof this.props.value === 'undefined'\n                        ? ''\n                        : this.props.value.toString()\n                }\n                onChange={this.handleChange}\n                type={this.props.encrypted ? 'password' : 'text'}\n            />\n        );\n    }\n}\n\nTextComponent.propTypes = {\n    // Number is expected if provided number in globalConfig.json instead of a string.\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    handleChange: PropTypes.func.isRequired,\n    field: PropTypes.string,\n    error: PropTypes.bool,\n    encrypted: PropTypes.bool,\n    disabled: PropTypes.bool,\n};\n\nexport default TextComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextArea from '@splunk/react-ui/TextArea';\nimport styled from 'styled-components';\n\nconst TextWrapper = styled(TextArea)`\n    width: 320px !important;\n`;\n\nfunction TextAreaComponent(props) {\n    const handleChange = (e, { value }) => {\n        props.handleChange(props.field, value);\n    };\n\n    return (\n        <TextWrapper\n            inline\n            canClear\n            error={props.error}\n            className={props.field}\n            disabled={props.disabled}\n            value={props.value?.toString() || ''}\n            onChange={handleChange}\n            rowsMax={props?.controlOptions?.rowsMax ? props?.controlOptions?.rowsMax : 12}\n            rowsMin={props?.controlOptions?.rowsMin ? props?.controlOptions?.rowsMin : 8}\n        />\n    );\n}\n\nTextAreaComponent.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    handleChange: PropTypes.func.isRequired,\n    field: PropTypes.string,\n    error: PropTypes.bool,\n    controlOptions: PropTypes.object,\n    disabled: PropTypes.bool,\n};\n\nexport default TextAreaComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from '@splunk/react-ui/Select';\nimport Button from '@splunk/react-ui/Button';\nimport ComboBox from '@splunk/react-ui/ComboBox';\nimport Clear from '@splunk/react-icons/enterprise/Clear';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';\n\nimport { axiosCallWrapper } from '../util/axiosCallWrapper';\nimport { filterResponse } from '../util/util';\n\nconst SelectWrapper = styled(Select)`\n    width: 320px !important;\n`;\n\nconst WaitSpinnerWrapper = styled(WaitSpinner)`\n    margin-left: 5px;\n`;\n\nconst StyledDiv = styled.div`\n    div:first-child {\n        width: 320px !important;\n    }\n`;\n\nfunction SingleInputComponent(props) {\n    const {\n        field,\n        disabled = false,\n        error = false,\n        controlOptions,\n        dependencyValues,\n        ...restProps\n    } = props;\n    const {\n        endpointUrl,\n        denyList,\n        allowList,\n        dependencies,\n        createSearchChoice,\n        referenceName,\n        disableSearch,\n        labelField,\n        autoCompleteFields,\n        hideClearBtn,\n    } = controlOptions;\n\n    function handleChange(e, obj) {\n        restProps.handleChange(field, obj.value);\n    }\n    const Option = createSearchChoice ? ComboBox.Option : Select.Option;\n    const Heading = createSearchChoice ? ComboBox.Heading : Select.Heading;\n\n    function generateOptions(items) {\n        const data = [];\n        items.forEach((item) => {\n            if (item.value && item.label) {\n                data.push(<Option label={item.label} value={item.value} key={item.value} />);\n            }\n            if (item.children && item.label) {\n                data.push(<Heading key={item.label}>{item.label}</Heading>);\n                item.children.forEach((child) => {\n                    data.push(<Option label={child.label} value={child.value} key={child.value} />);\n                });\n            }\n        });\n        return data;\n    }\n\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState(null);\n\n    useEffect(() => {\n        if (!endpointUrl && !referenceName && autoCompleteFields) {\n            setOptions(generateOptions(autoCompleteFields));\n            return;\n        }\n\n        let current = true;\n        const source = axios.CancelToken.source();\n\n        // eslint-disable-next-line no-shadow\n        const options = { cancelToken: source.token, handleError: true, params: { count: -1 } };\n        if (referenceName) {\n            options.serviceName = referenceName;\n        } else if (endpointUrl) {\n            options.endpointUrl = endpointUrl;\n        }\n\n        if (dependencyValues) {\n            options.params = { ...options.params, ...dependencyValues };\n        }\n        if (!dependencies || dependencyValues) {\n            setLoading(true);\n            axiosCallWrapper(options)\n                .then((response) => {\n                    if (current) {\n                        setOptions(\n                            generateOptions(\n                                filterResponse(response.data.entry, labelField, allowList, denyList)\n                            )\n                        );\n                        setLoading(false);\n                    }\n                })\n                .catch(() => {\n                    if (current) {\n                        setLoading(false);\n                    }\n                    setOptions(null);\n                });\n        } else {\n            setOptions(null);\n        }\n        // eslint-disable-next-line consistent-return\n        return () => {\n            source.cancel('Operation canceled.');\n            current = false;\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dependencyValues]);\n\n    const effectiveDisabled = loading ? true : disabled;\n    const loadingIndicator = loading ? <WaitSpinnerWrapper /> : null;\n    // hideClearBtn=true only passed for OAuth else its undefined\n    // effectiveIsClearable button will be visible only for the required=false and createSearchChoice=false single-select fields.\n    const effectiveIsClearable = !(effectiveDisabled || restProps.required || hideClearBtn);\n\n    return createSearchChoice ? (\n        <StyledDiv className=\"dropdownBox\">\n            <ComboBox\n                value={props.value === null ? '' : props.value}\n                name={field}\n                error={error}\n                disabled={effectiveDisabled}\n                onChange={handleChange} // eslint-disable-line react/jsx-no-bind\n                inline\n            >\n                {options && options.length > 0 && options}\n            </ComboBox>\n            {loadingIndicator}\n        </StyledDiv>\n    ) : (\n        <>\n            <SelectWrapper\n                className=\"dropdownBox\"\n                data-test-loading={loading}\n                value={props.value}\n                name={field}\n                error={error}\n                disabled={effectiveDisabled}\n                onChange={handleChange} // eslint-disable-line react/jsx-no-bind\n                filter={!disableSearch}\n                inline\n            >\n                {options && options.length > 0 && options}\n            </SelectWrapper>{' '}\n            {loadingIndicator}\n            {effectiveIsClearable ? (\n                <Button\n                    data-test=\"clear\"\n                    appearance=\"secondary\"\n                    icon={<Clear />}\n                    onClick={() => restProps.handleChange(field, '')}\n                />\n            ) : null}\n        </>\n    );\n}\n\nSingleInputComponent.propTypes = {\n    disabled: PropTypes.bool,\n    value: PropTypes.string,\n    error: PropTypes.bool,\n    handleChange: PropTypes.func.isRequired,\n    field: PropTypes.string,\n    dependencyValues: PropTypes.object,\n    controlOptions: PropTypes.shape({\n        autoCompleteFields: PropTypes.array,\n        endpointUrl: PropTypes.string,\n        denyList: PropTypes.string,\n        allowList: PropTypes.string,\n        dependencies: PropTypes.array,\n        createSearchChoice: PropTypes.bool,\n        referenceName: PropTypes.string,\n        disableSearch: PropTypes.bool,\n        labelField: PropTypes.string,\n        hideClearBtn: PropTypes.bool,\n    }),\n    required: PropTypes.bool,\n};\n\nexport default SingleInputComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Multiselect from '@splunk/react-ui/Multiselect';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';\n\nimport { axiosCallWrapper } from '../util/axiosCallWrapper';\nimport { filterResponse } from '../util/util';\n\nconst MultiSelectWrapper = styled(Multiselect)`\n    width: 320px !important;\n`;\n\nconst WaitSpinnerWrapper = styled(WaitSpinner)`\n    margin-left: 5px;\n`;\n\nfunction MultiInputComponent(props) {\n    const {\n        field,\n        disabled = false,\n        error = false,\n        value,\n        controlOptions,\n        dependencyValues,\n        ...restProps\n    } = props;\n    const {\n        endpointUrl,\n        denyList,\n        allowList,\n        items,\n        dependencies,\n        referenceName,\n        createSearchChoice,\n        labelField,\n        delimiter = ',',\n    } = controlOptions;\n\n    function handleChange(e, { values }) {\n        restProps.handleChange(field, values.join(delimiter));\n    }\n\n    function generateOptions(itemList) {\n        return itemList.map((item) => (\n            <Multiselect.Option label={item.label} value={item.value} key={item.value} />\n        ));\n    }\n\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState(null);\n\n    useEffect(() => {\n        if (!endpointUrl && items) {\n            setOptions(generateOptions(items));\n            return;\n        }\n\n        let current = true;\n        const source = axios.CancelToken.source();\n\n        // eslint-disable-next-line no-shadow\n        const options = { cancelToken: source.token, handleError: true, params: { count: -1 } };\n        if (referenceName) {\n            options.serviceName = referenceName;\n        } else if (endpointUrl) {\n            options.endpointUrl = endpointUrl;\n        }\n\n        if (dependencyValues) {\n            options.params = { ...options.params, ...dependencyValues };\n        }\n        if (!dependencies || dependencyValues) {\n            setLoading(true);\n            axiosCallWrapper(options)\n                .then((response) => {\n                    if (current) {\n                        setOptions(\n                            generateOptions(\n                                filterResponse(response.data.entry, labelField, allowList, denyList)\n                            )\n                        );\n                        setLoading(false);\n                    }\n                })\n                .catch(() => {\n                    if (current) {\n                        setLoading(false);\n                    }\n                });\n        }\n        // eslint-disable-next-line consistent-return\n        return () => {\n            source.cancel('Operation canceled.');\n            current = false;\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dependencyValues]);\n\n    const effectiveDisabled = loading ? true : disabled;\n    const loadingIndicator = loading ? <WaitSpinnerWrapper /> : null;\n\n    const valueList = value ? value.split(delimiter) : [];\n\n    return (\n        <>\n            <MultiSelectWrapper\n                values={valueList}\n                error={error}\n                name={field}\n                disabled={effectiveDisabled}\n                allowNewValues={createSearchChoice}\n                onChange={handleChange} // eslint-disable-line react/jsx-no-bind\n                inline\n            >\n                {options && options.length > 0 && options}\n            </MultiSelectWrapper>\n            {loadingIndicator}\n        </>\n    );\n}\n\nMultiInputComponent.propTypes = {\n    disabled: PropTypes.bool,\n    value: PropTypes.string,\n    error: PropTypes.bool,\n    handleChange: PropTypes.func.isRequired,\n    field: PropTypes.string,\n    dependencyValues: PropTypes.object,\n    controlOptions: PropTypes.shape({\n        delimiter: PropTypes.string,\n        createSearchChoice: PropTypes.bool,\n        referenceName: PropTypes.string,\n        dependencies: PropTypes.array,\n        endpointUrl: PropTypes.string,\n        denyList: PropTypes.string,\n        allowList: PropTypes.string,\n        labelField: PropTypes.string,\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                label: PropTypes.string.isRequired,\n                value: PropTypes.string.isRequired,\n            })\n        ),\n    }),\n};\n\nexport default MultiInputComponent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Switch from '@splunk/react-ui/Switch';\nimport { isFalse } from '../util/util';\n\nclass CheckBoxComponent extends Component {\n    handleChange = () => {\n        if (this.props.value && !isFalse(this.props.value)) {\n            this.props.handleChange(this.props.field, 0);\n        } else {\n            this.props.handleChange(this.props.field, 1);\n        }\n    };\n\n    render() {\n        return (\n            <Switch\n                key={this.props.field}\n                value={this.props.field}\n                onClick={this.handleChange}\n                disabled={this.props.disabled}\n                selected={!(this.props.value ? isFalse(this.props.value) : true)}\n                appearance=\"checkbox\"\n            />\n        );\n    }\n}\n\nCheckBoxComponent.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n    handleChange: PropTypes.func.isRequired,\n    field: PropTypes.string,\n    disabled: PropTypes.bool,\n};\n\nexport default CheckBoxComponent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport RadioBar from '@splunk/react-ui/RadioBar';\nimport styled from 'styled-components';\n\nconst RadioBarWrapper = styled(RadioBar)`\n    width: 320px;\n`;\n\nconst RadioBarOption = styled(RadioBar.Option)`\n    margin-left: 0px !important;\n`;\n\nclass RadioComponent extends Component {\n    handleChange = (e, { value }) => {\n        this.props.handleChange(this.props.field, value);\n    };\n\n    render() {\n        return (\n            <RadioBarWrapper\n                inline\n                onChange={this.handleChange}\n                value={this.props.value}\n                key={this.props.field}\n            >\n                {this.props.controlOptions.items.map((item) => (\n                    <RadioBarOption key={item.value} value={item.value} label={item.label} />\n                ))}\n            </RadioBarWrapper>\n        );\n    }\n}\n\nRadioComponent.propTypes = {\n    value: PropTypes.string,\n    handleChange: PropTypes.func.isRequired,\n    field: PropTypes.string,\n    controlOptions: PropTypes.object,\n};\n\nexport default RadioComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StaticContent from '@splunk/react-ui/StaticContent';\n\nfunction PlaceholderComponent(props) {\n    const { defaultValue } = props.controlOptions;\n\n    return <StaticContent>{defaultValue}</StaticContent>;\n}\n\nPlaceholderComponent.propTypes = {\n    controlOptions: PropTypes.object,\n};\n\nexport default PlaceholderComponent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { _ } from '@splunk/ui-utils/i18n';\n\nimport { getUnifiedConfigs } from '../util/util';\nimport { getBuildDirPath } from '../util/script';\n\nclass CustomControl extends Component {\n    static loadCustomControl = (module, type, appName) =>\n        new Promise((resolve) => {\n            if (type === 'external') {\n                import(/* webpackIgnore: true */ `${getBuildDirPath()}/custom/${module}.js`).then(\n                    (external) => {\n                        const Control = external.default;\n                        resolve(Control);\n                    }\n                );\n            } else {\n                __non_webpack_require__([`app/${appName}/js/build/custom/${module}`], (Control) => {\n                    resolve(Control);\n                });\n            }\n        });\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n        this.shouldRender = true;\n    }\n\n    componentDidMount() {\n        const globalConfig = getUnifiedConfigs();\n        const appName = globalConfig.meta.name;\n\n        CustomControl.loadCustomControl(\n            this.props.controlOptions.src,\n            this.props.controlOptions.type,\n            appName\n        ).then((Control) => {\n            const customControl = new Control(\n                globalConfig,\n                this.el,\n                this.props.data,\n                this.setValue,\n                this.props.utilCustomFunctions\n            );\n            customControl.render();\n\n            if (typeof customControl.validation === 'function') {\n                this.props.addCustomValidator(this.props.field, customControl.validation);\n            }\n            this.setState({ loading: false });\n        });\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (!nextState.loading && this.shouldRender) {\n            this.shouldRender = false;\n            return true;\n        }\n        return false;\n    }\n\n    setValue = (newValue) => {\n        this.props.handleChange(this.props.field, newValue);\n    };\n\n    render() {\n        return (\n            <>\n                {this.state.loading && _('Loading...')}\n                {\n                    <span // nosemgrep: typescript.react.security.audit.react-no-refs.react-no-refs\n                        ref={(el) => {\n                            this.el = el;\n                        }}\n                        style={{ visibility: this.state.loading ? 'hidden' : 'visible' }}\n                    />\n                }\n            </>\n        );\n    }\n}\n\nCustomControl.propTypes = {\n    data: PropTypes.object,\n    field: PropTypes.string,\n    handleChange: PropTypes.func,\n    controlOptions: PropTypes.object,\n    addCustomValidator: PropTypes.func,\n    utilCustomFunctions: PropTypes.object,\n};\n\nexport default CustomControl;\n","import React, { ReactElement, useState } from 'react';\nimport File from '@splunk/react-ui/File';\nimport styled from 'styled-components';\n\nimport FileConstants from '../constants/fileInputConstant';\nimport { getFormattedMessage } from '../util/messageUtil';\n\nconst FileWrapper = styled(File)`\n    width: 320px !important;\n    > div[class*='FileStyles__StyledHelp-'] {\n        margin-bottom: 0px;\n    }\n`;\n\ninterface FileInputComponentProps {\n    field: string;\n    controlOptions: {\n        fileSupportMessage?: string;\n        supportedFileTypes: string[];\n        maxFileSize?: number;\n    };\n    disabled: boolean;\n    handleChange: (field: string, data: string) => void;\n    encrypted?: boolean;\n    fileNameToDisplay?: string;\n}\n\nfunction isValidFile(\n    fileType: string | undefined,\n    fileSize: number,\n    supportedFileTypes: string[],\n    maxFileSize: number\n) {\n    if (!fileType || !supportedFileTypes.includes(fileType)) {\n        return (\n            <span style={{ color: 'red' }}>\n                {getFormattedMessage(supportedFileTypes.length === 1 ? 28 : 24, [\n                    supportedFileTypes.join(', '),\n                ])}\n            </span>\n        );\n    }\n    if (fileSize > maxFileSize) {\n        return <span style={{ color: 'red' }}>{getFormattedMessage(25, [maxFileSize])}</span>;\n    }\n    return true;\n}\n\nfunction FileInputComponent(props: FileInputComponentProps) {\n    const { field, disabled, controlOptions, handleChange, fileNameToDisplay, encrypted } = props;\n    const {\n        fileSupportMessage,\n        supportedFileTypes,\n        maxFileSize = FileConstants.FILE_MAX_SIZE,\n    } = controlOptions;\n\n    const fileReader = new FileReader();\n    const textDecoder = new TextDecoder(); // default utf-8\n\n    /*\n     use fileNameToDisplay during editing to get\n     the possibility of removal previously added file\n    */\n    const [fileName, setFileName] = useState<string | null>(fileNameToDisplay || '');\n\n    /* \n      if the file data is encrypted and we display its name\n      then we display error message \"file needs to be reuploaded\"\n      as there is no access to data inside due to encription\n     */\n    const [errorMsg, setErrorMsg] = useState<ReactElement | string>(\n        fileNameToDisplay && encrypted ? FileConstants.REUPLOAD_MESSAGE : ''\n    );\n\n    const handleAddFiles = (files: File[]) => {\n        if (files.length) {\n            const file = files[0];\n\n            if (fileReader.readyState === 1) {\n                fileReader.abort();\n            }\n\n            fileReader.readAsArrayBuffer(file);\n\n            fileReader.onload = () => {\n                const isValid = isValidFile(\n                    file.name.split('.').pop(),\n                    file.size / 1024,\n                    supportedFileTypes,\n                    maxFileSize\n                );\n                if (isValid === true) {\n                    setErrorMsg('');\n                    try {\n                        if (fileReader.result && typeof fileReader.result !== 'string') {\n                            handleChange(field, textDecoder.decode(fileReader.result));\n                        }\n                    } catch (err) {\n                        // eslint-disable-next-line no-console\n                        console.log(err);\n                    }\n                } else {\n                    setErrorMsg(isValid);\n                    handleChange(field, FileConstants.INVALID_FILE_MESSAGE);\n                }\n                setFileName(file.name);\n            };\n        }\n    };\n\n    const handleRemoveFile = () => {\n        if (fileReader.readyState === 1) {\n            fileReader.abort();\n        }\n        setFileName(null);\n        handleChange(field, '');\n        setErrorMsg('');\n    };\n\n    return (\n        <FileWrapper\n            key={field}\n            onRequestAdd={handleAddFiles}\n            onRequestRemove={handleRemoveFile}\n            supportsMessage={<> {fileSupportMessage} </>}\n            disabled={disabled}\n            help={errorMsg}\n            error={!!errorMsg}\n        >\n            {fileName && <File.Item name={fileName} />}\n        </FileWrapper>\n    );\n}\n\nexport default FileInputComponent;\n","import styled from 'styled-components';\nimport ColumnLayout from '@splunk/react-ui/ColumnLayout';\n\nconst StyledColumnLayout = styled(ColumnLayout)`\n    width: 320px;\n`;\n\nexport { StyledColumnLayout };\n","import { NumberValidator } from '../../types/ValidatorsTypes';\nimport { Mode } from '../../constants/modes';\n\ntype Field = string;\ntype Value = {\n    checkbox: boolean;\n    inputValue?: number;\n    error?: string;\n};\n\nexport type ValueByField = Map<Field, Value>;\n/**\n *\n * @param collection string like collect_collaboration/1200,collect_file/1,collect_task/1\n */\nexport function parseValue(collection?: string): ValueByField {\n    const resultMap = new Map<Field, Value>();\n\n    if (!collection) {\n        return resultMap;\n    }\n\n    const splitValues = collection.split(',');\n    splitValues.forEach((rawValue) => {\n        const [field, inputValue] = rawValue.split('/');\n        const parsedInputValue = inputValue === '' ? undefined : Number(inputValue);\n        if (!field || Number.isNaN(parsedInputValue)) {\n            throw new Error(`Value is not parsable: ${collection}`);\n        }\n\n        resultMap.set(field, {\n            checkbox: true,\n            inputValue: parsedInputValue,\n        });\n    });\n\n    return resultMap;\n}\n\nexport function packValue(map: ValueByField) {\n    return Array.from(map.entries())\n        .filter(([, value]) => value.checkbox)\n        .map(([field, { inputValue = '' }]) => `${field}/${inputValue}`)\n        .join(',');\n}\n\nexport interface Group {\n    label: string;\n    fields: string[];\n    options?: {\n        isExpandable?: boolean;\n        expand?: boolean;\n    };\n}\n\nexport interface Row {\n    field: string;\n    checkbox?: {\n        label?: string;\n        defaultValue?: boolean;\n    };\n    input?: {\n        defaultValue?: number;\n        validators?: NumberValidator[];\n        required?: boolean;\n    };\n}\n\nexport type GroupWithRows = Group & { rows: Row[] };\n\nexport interface CheckboxGroupProps {\n    field: string;\n    value?: string;\n    controlOptions: {\n        groups?: Group[];\n        rows: Row[];\n    };\n    mode: Mode;\n    addCustomValidator?: (\n        field: string,\n        validator: (submittedField: string, submittedValue: string) => void\n    ) => void;\n    handleChange: (field: string, value: string, componentType?: 'checkboxGroup') => void;\n}\n\nexport function isGroupWithRows(item: GroupWithRows | Row): item is GroupWithRows {\n    return 'label' in item;\n}\n\nexport function getFlattenRowsWithGroups({ groups, rows }: CheckboxGroupProps['controlOptions']) {\n    const flattenRowsMixedWithGroups: Array<GroupWithRows | Row> = [];\n\n    rows.forEach((row) => {\n        const groupForThisRow = groups?.find((group) => group.fields.includes(row.field));\n        if (groupForThisRow) {\n            const addedGroup = flattenRowsMixedWithGroups.find(\n                (item): item is GroupWithRows =>\n                    isGroupWithRows(item) && item.label === groupForThisRow.label\n            );\n            const groupToAdd = addedGroup || {\n                ...groupForThisRow,\n                rows: [],\n            };\n            groupToAdd.rows.push(row);\n            if (!addedGroup) {\n                flattenRowsMixedWithGroups.push(groupToAdd);\n            }\n            return;\n        }\n        flattenRowsMixedWithGroups.push(row);\n    });\n\n    return flattenRowsMixedWithGroups;\n}\n\nexport function getNewCheckboxValues(\n    values: ValueByField,\n    newValue: {\n        field: string;\n        checkbox: boolean;\n        inputValue?: number;\n    }\n) {\n    const newValues = new Map(values);\n    newValues.set(newValue.field, {\n        checkbox: newValue.checkbox,\n        inputValue: newValue.inputValue,\n    });\n\n    return newValues;\n}\n\nexport function getCheckedCheckboxesCount(group: GroupWithRows, values: ValueByField) {\n    let checkedCheckboxesCount = 0;\n    group.rows.forEach((row) => {\n        if (values.get(row.field)?.checkbox) {\n            checkedCheckboxesCount += 1;\n        }\n    });\n    return checkedCheckboxesCount;\n}\n\nexport function getDefaultValues(rows: Row[]): ValueByField {\n    const resultMap = new Map<Field, Value>();\n\n    rows.forEach((row) => {\n        if (!isGroupWithRows(row)) {\n            const checkboxDefaultValue = row.checkbox?.defaultValue;\n            if (typeof checkboxDefaultValue === 'boolean') {\n                resultMap.set(row.field, {\n                    checkbox: checkboxDefaultValue,\n                    inputValue: row.input?.defaultValue,\n                });\n            }\n        }\n    });\n\n    return resultMap;\n}\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport CollapsiblePanel from '@splunk/react-ui/CollapsiblePanel';\n\nconst GroupWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n`;\n\nconst CollapsiblePanelWrapper = styled(CollapsiblePanel)`\n    span {\n        button {\n            background-color: #f2f4f5;\n            font-size: 14px;\n\n            &:hover:not([disabled]),\n            &:focus:not([disabled]),\n            &:active:not([disabled]) {\n                background-color: #f2f4f5;\n                box-shadow: none;\n            }\n        }\n    }\n`;\n\nconst StyledPadding8 = styled.div`\n    padding-top: 8px;\n    padding-bottom: 8px;\n`;\n\nconst CustomGroupLabel = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding: 6px 10px;\n    background-color: #f2f4f5;\n    font-size: 14px;\n    margin-bottom: 10px;\n`;\n\nconst Description = styled.span`\n    padding-right: 20px;\n    margin-left: 10px;\n    font-size: 12px;\n`;\n\ninterface GroupProps {\n    title: ReactNode;\n    description?: string;\n    children: ReactNode;\n    isExpandable?: boolean;\n    defaultOpen?: boolean;\n}\n\nfunction Group({ isExpandable, defaultOpen, children, title, description }: GroupProps) {\n    return (\n        <GroupWrapper>\n            {isExpandable ? (\n                <CollapsiblePanelWrapper\n                    title={title}\n                    defaultOpen={defaultOpen}\n                    description={description}\n                >\n                    <StyledPadding8>{children}</StyledPadding8>\n                </CollapsiblePanelWrapper>\n            ) : (\n                <>\n                    <CustomGroupLabel>\n                        <span>{title}</span>\n                        <Description>{description}</Description>\n                    </CustomGroupLabel>\n                    <div>{children}</div>\n                </>\n            )}\n        </GroupWrapper>\n    );\n}\n\nexport default Group;\n","import React, { useState, useEffect } from 'react';\nimport ColumnLayout from '@splunk/react-ui/ColumnLayout';\nimport NumberComponent, { NumberChangeHandler } from '@splunk/react-ui/Number';\nimport styled from 'styled-components';\nimport Switch from '@splunk/react-ui/Switch';\nimport { StyledColumnLayout } from './StyledComponent';\n\nconst StyledSwitch = styled(Switch)`\n    padding-left: 3px;\n`;\n\ninterface CheckboxRowProps {\n    field: string;\n    label: string;\n    checkbox: boolean;\n    input?: number;\n    disabled?: boolean;\n    handleChange: (value: { field: string; checkbox: boolean; inputValue?: number }) => void;\n}\n\nfunction CheckboxRow(props: CheckboxRowProps) {\n    const { field, label, checkbox, input, disabled, handleChange } = props;\n\n    const [isTextDisabled, setIsTextDisabled] = useState(!checkbox || disabled);\n\n    useEffect(() => {\n        setIsTextDisabled(!checkbox || disabled);\n    }, [checkbox, disabled]);\n\n    const handleChangeInput: NumberChangeHandler = (event: unknown, { value }) => {\n        handleChange({ field, inputValue: value, checkbox });\n    };\n\n    const handleChangeCheckbox = (event: unknown, data: { selected: boolean; value?: unknown }) => {\n        const previousValue = data.selected;\n        handleChange({ field, inputValue: input, checkbox: !previousValue });\n    };\n\n    return (\n        <StyledColumnLayout>\n            <ColumnLayout.Row>\n                <ColumnLayout.Column span={7}>\n                    <StyledSwitch\n                        key={field}\n                        value={field}\n                        selected={checkbox}\n                        onClick={handleChangeCheckbox}\n                        appearance=\"checkbox\"\n                        disabled={disabled}\n                    >\n                        {label}\n                    </StyledSwitch>\n                </ColumnLayout.Column>\n                <ColumnLayout.Column span={3}>\n                    <NumberComponent\n                        inline\n                        disabled={isTextDisabled}\n                        defaultValue={input}\n                        onChange={handleChangeInput}\n                    />\n                </ColumnLayout.Column>\n            </ColumnLayout.Row>\n        </StyledColumnLayout>\n    );\n}\nexport default CheckboxRow;\n","import React from 'react';\nimport CheckboxRow from './CheckboxRow';\nimport { Row, ValueByField } from './checkboxGroup.utils';\n\nfunction CheckboxRowWrapper({\n    row,\n    values,\n    handleRowChange,\n}: {\n    row: Row;\n    values: ValueByField;\n    handleRowChange: (newValue: { field: string; checkbox: boolean; text?: string }) => void;\n}) {\n    const valueForField = values.get(row.field);\n    return (\n        <CheckboxRow\n            field={row.field}\n            label={row.checkbox?.label || row.field}\n            checkbox={!!valueForField?.checkbox}\n            input={valueForField ? valueForField.inputValue : row.input?.defaultValue}\n            handleChange={handleRowChange}\n        />\n    );\n}\nexport default CheckboxRowWrapper;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Group from '../Group';\nimport { getCheckedCheckboxesCount, GroupWithRows, ValueByField } from './checkboxGroup.utils';\nimport CheckboxRowWrapper from './CheckboxRowWrapper';\n\nconst StyledCheckboxRowWrapper = styled.div`\n    & > *:not(:last-child) {\n        margin-bottom: 10px;\n    }\n`;\n\ninterface CheckboxSubGroupProps {\n    group: GroupWithRows;\n    values: ValueByField;\n    handleRowChange: (newValue: { field: string; checkbox: boolean; text?: string }) => void;\n}\n\nfunction CheckboxSubGroup({ group, values, handleRowChange }: CheckboxSubGroupProps) {\n    const checkedCheckboxesCount = getCheckedCheckboxesCount(group, values);\n    return (\n        <Group\n            title={group.label}\n            description={`${checkedCheckboxesCount} of ${group.fields.length}`}\n            isExpandable={group.options?.isExpandable}\n            defaultOpen={group.options?.expand}\n        >\n            <StyledCheckboxRowWrapper>\n                {group.rows.map((rowInsideGroup) => (\n                    <CheckboxRowWrapper\n                        row={rowInsideGroup}\n                        values={values}\n                        handleRowChange={handleRowChange}\n                        key={`row_${rowInsideGroup.field}`}\n                    />\n                ))}\n            </StyledCheckboxRowWrapper>\n        </Group>\n    );\n}\n\nexport default CheckboxSubGroup;\n","import React, { useEffect, useState } from 'react';\nimport ColumnLayout from '@splunk/react-ui/ColumnLayout';\nimport Button from '@splunk/react-ui/Button';\nimport { StyledColumnLayout } from './StyledComponent';\nimport {\n    CheckboxGroupProps,\n    getDefaultValues,\n    getFlattenRowsWithGroups,\n    getNewCheckboxValues,\n    isGroupWithRows,\n    packValue,\n    parseValue,\n} from './checkboxGroup.utils';\nimport CheckboxSubGroup from './CheckboxSubGroup';\nimport CheckboxRowWrapper from './CheckboxRowWrapper';\nimport { useValidation } from './checkboxGroupValidation';\nimport { MODE_CREATE } from '../../constants/modes';\n\nfunction CheckboxGroup(props: CheckboxGroupProps) {\n    const { field, handleChange, controlOptions, addCustomValidator } = props;\n\n    const flattenedRowsWithGroups = getFlattenRowsWithGroups(controlOptions);\n    const shouldUseDefaultValue = props.mode === MODE_CREATE && props.value === null;\n    const value = shouldUseDefaultValue\n        ? getDefaultValues(controlOptions.rows)\n        : parseValue(props.value);\n\n    // propagate defaults up if the component is not touched\n    useEffect(() => {\n        if (shouldUseDefaultValue) {\n            handleChange(field, packValue(value), 'checkboxGroup');\n        }\n    }, [field, handleChange, shouldUseDefaultValue, value]);\n\n    const [values, setValues] = useState(value);\n\n    useValidation(addCustomValidator, field, controlOptions);\n    const handleRowChange = (newValue: { field: string; checkbox: boolean; text?: string }) => {\n        const newValues = getNewCheckboxValues(values, newValue);\n\n        setValues(newValues);\n        handleChange(field, packValue(newValues), 'checkboxGroup');\n    };\n\n    const handleCheckboxToggleAll = (newCheckboxValue: boolean) => {\n        const newValues = new Map(values);\n\n        controlOptions.rows.forEach((row) => {\n            const oldValue = values.get(row.field);\n            if (!!oldValue?.checkbox === newCheckboxValue) {\n                return;\n            }\n            newValues.set(row.field, {\n                checkbox: newCheckboxValue,\n                inputValue: oldValue?.inputValue || row.input?.defaultValue,\n            });\n        });\n        setValues(newValues);\n        handleChange(field, packValue(newValues), 'checkboxGroup');\n    };\n\n    return (\n        <>\n            <StyledColumnLayout gutter={5}>\n                {flattenedRowsWithGroups.map((row) => {\n                    if (isGroupWithRows(row)) {\n                        // labels are unique across groups\n                        return (\n                            <ColumnLayout.Row key={`group_${row.label}`}>\n                                <CheckboxSubGroup\n                                    group={row}\n                                    values={values}\n                                    handleRowChange={handleRowChange}\n                                />\n                            </ColumnLayout.Row>\n                        );\n                    }\n                    return (\n                        <ColumnLayout.Row key={`row_${row.field}`}>\n                            <CheckboxRowWrapper\n                                row={row}\n                                values={values}\n                                handleRowChange={handleRowChange}\n                            />\n                        </ColumnLayout.Row>\n                    );\n                })}\n                <ColumnLayout.Row />\n            </StyledColumnLayout>\n            <div>\n                <Button\n                    label=\"Select All\"\n                    appearance=\"pill\"\n                    onClick={() => handleCheckboxToggleAll(true)}\n                />\n                <Button\n                    label=\"Clear All\"\n                    appearance=\"pill\"\n                    onClick={() => handleCheckboxToggleAll(false)}\n                />\n            </div>\n        </>\n    );\n}\n\nexport default CheckboxGroup;\n","import HelpLinkComponent from '../components/HelpLinkComponent';\nimport TextComponent from '../components/TextComponent';\nimport TextAreaComponent from '../components/TextAreaComponent';\nimport SingleInputComponent from '../components/SingleInputComponent';\nimport MultiInputComponent from '../components/MultiInputComponent';\nimport CheckBoxComponent from '../components/CheckBoxComponent';\nimport RadioComponent from '../components/RadioComponent';\nimport PlaceholderComponent from '../components/PlaceholderComponent';\nimport CustomControl from '../components/CustomControl';\nimport FileInputComponent from '../components/FileInputComponent';\nimport CheckboxGroup from '../components/CheckboxGroup/CheckboxGroup';\n\nexport default {\n    checkbox: CheckBoxComponent,\n    checkboxGroup: CheckboxGroup,\n    custom: CustomControl,\n    file: FileInputComponent,\n    helpLink: HelpLinkComponent,\n    multipleSelect: MultiInputComponent,\n    placeholder: PlaceholderComponent,\n    radio: RadioComponent,\n    singleSelect: SingleInputComponent,\n    text: TextComponent,\n    textarea: TextAreaComponent,\n} as const;\n","import { useEffect } from 'react';\nimport Validator from '../../util/Validator';\nimport { CheckboxGroupProps, parseValue } from './checkboxGroup.utils';\n\ntype MaybeError =\n    | {\n          errorField: string;\n          errorMsg: string;\n      }\n    | false;\n\nexport function validateCheckboxGroup(\n    field: string,\n    packedValue: string,\n    options: CheckboxGroupProps['controlOptions']\n): MaybeError {\n    let errorMessage: MaybeError = false;\n    const parsedValue = parseValue(packedValue);\n    options.rows.some((row) => {\n        const rowSubmittedValue = parsedValue.get(row.field);\n        if (rowSubmittedValue) {\n            if (row.input?.required) {\n                errorMessage = Validator.RequiredValidator(\n                    field,\n                    row.checkbox?.label || row.field,\n                    rowSubmittedValue.inputValue\n                );\n                // break loop\n                return errorMessage;\n            }\n\n            if (row.input?.validators?.length) {\n                return row.input?.validators.some((validator) => {\n                    const { type } = validator;\n                    switch (type) {\n                        case 'number':\n                            errorMessage = Validator.NumberValidator(\n                                field,\n                                row.checkbox?.label || row.field,\n                                validator,\n                                rowSubmittedValue.inputValue\n                            );\n\n                            return errorMessage;\n\n                        default:\n                            throw new Error(\n                                `[CheckboxGroup] Unsupported validator ${type} for field ${field}`\n                            );\n                    }\n                });\n            }\n        }\n        return false;\n    });\n    return errorMessage;\n}\n\nexport function useValidation(\n    addCustomValidator: CheckboxGroupProps['addCustomValidator'],\n    field: string,\n    controlOptions: CheckboxGroupProps['controlOptions']\n) {\n    useEffect(() => {\n        addCustomValidator?.(field, (submittedField, submittedValue) => {\n            const validationResult = validateCheckboxGroup(\n                submittedField,\n                submittedValue,\n                controlOptions\n            );\n            if (validationResult !== false) {\n                return validationResult.errorMsg;\n            }\n            return validationResult;\n        });\n    }, [field, addCustomValidator, controlOptions]);\n}\n","export default {\n    FILE_MAX_SIZE: 500,\n    REUPLOAD_MESSAGE: 'Please reupload this file',\n    INVALID_FILE_MESSAGE: '##INVALID_FILE##',\n} as const;\n","import React from 'react';\nimport Link from '@splunk/react-ui/Link';\n\ninterface Props {\n    controlOptions: {\n        text: string;\n        link: string;\n    };\n}\n\nfunction HelpLinkComponent(props: Props) {\n    const { text, link } = props.controlOptions;\n\n    return (\n        <Link to={link} openInNewContext>\n            {text}\n        </Link>\n    );\n}\n\nexport default HelpLinkComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ControlGroup from '@splunk/react-ui/ControlGroup';\nimport styled from 'styled-components';\n\nimport MarkdownMessage from './MarkdownMessage';\nimport CONTROL_TYPE_MAP from '../constants/ControlTypeMap';\n\nconst CustomElement = styled.div`\n    margin-left: 30px;\n`;\n\nconst ControlGroupWrapper = styled(ControlGroup).attrs((props) => ({\n    'data-name': props.dataName,\n}))`\n    width: 100%;\n    max-width: 100%;\n\n    > * {\n        &:first-child {\n            width: 240px !important;\n        }\n        &:nth-child(3) {\n            margin-left: 270px !important;\n            width: 320px;\n        }\n    }\n\n    span[class*='ControlGroupStyles__StyledAsterisk-'] {\n        color: red;\n    }\n`;\n\nclass ControlWrapper extends React.PureComponent {\n    static isString = (str) => !!(typeof str === 'string' || str instanceof String);\n\n    constructor(props) {\n        super(props);\n        this.controlType = ControlWrapper.isString(props.entity.type)\n            ? CONTROL_TYPE_MAP[props.entity.type]\n            : null;\n    }\n\n    render() {\n        const {\n            field,\n            type,\n            label,\n            tooltip,\n            help,\n            encrypted = false,\n            required,\n        } = this.props.entity;\n        const { handleChange, addCustomValidator, utilCustomFunctions } = this.props.utilityFuncts;\n        // We have to put empty object because markDownMessage prop can be undefined\n        // because we are not explicitly setting it but expecting it from custom hooks only.\n        const { text, link, color, markdownType, token, linkText } =\n            this.props.markdownMessage || {};\n        let rowView;\n        if (this.props.entity.type === 'custom') {\n            const data = {\n                value: this.props.value,\n                mode: this.props.mode,\n                serviceName: this.props.serviceName,\n            };\n\n            rowView = this.controlType\n                ? React.createElement(this.controlType, {\n                      data,\n                      field,\n                      handleChange,\n                      addCustomValidator,\n                      utilCustomFunctions,\n                      controlOptions: this.props.entity.options,\n                  })\n                : `No View Found for ${type} type`;\n        } else {\n            rowView = this.controlType\n                ? React.createElement(this.controlType, {\n                      handleChange,\n                      value: this.props.value,\n                      field,\n                      controlOptions: this.props.entity.options,\n                      error: this.props.error,\n                      disabled: this.props.disabled,\n                      encrypted,\n                      dependencyValues: this.props.dependencyValues,\n                      required,\n                      addCustomValidator,\n                      fileNameToDisplay: this.props.fileNameToDisplay,\n                      mode: this.props.mode,\n                  })\n                : `No View Found for ${type} type`;\n        }\n\n        const helpText = (\n            <>\n                <MarkdownMessage\n                    text={text || ''}\n                    link={link || ''}\n                    color={color || ''}\n                    markdownType={markdownType || ''}\n                    token={token || ''}\n                    linkText={linkText || ''}\n                />\n                {help}\n            </>\n        );\n\n        return (\n            this.props.display && (\n                <ControlGroupWrapper\n                    label={label}\n                    help={helpText}\n                    tooltip={tooltip}\n                    error={this.props.error}\n                    dataName={field}\n                    required={required}\n                >\n                    <CustomElement>{rowView}</CustomElement>\n                </ControlGroupWrapper>\n            )\n        );\n    }\n}\n\nControlWrapper.propTypes = {\n    mode: PropTypes.string,\n    utilityFuncts: PropTypes.object,\n    value: PropTypes.any,\n    display: PropTypes.bool,\n    error: PropTypes.bool,\n    entity: PropTypes.object,\n    disabled: PropTypes.bool,\n    markdownMessage: PropTypes.object,\n    serviceName: PropTypes.string,\n    dependencyValues: PropTypes.object,\n    fileNameToDisplay: PropTypes.string,\n};\n\nexport default ControlWrapper;\n","export const ERROR_REQUEST_TIMEOUT_TRY_AGAIN =\n    'Request time out while authenticating. Please try again.';\nexport const ERROR_REQUEST_TIMEOUT_ACCESS_TOKEN_TRY_AGAIN =\n    'Request time out while getting accesstoken. Please try again.';\nexport const ERROR_OCCURRED_TRY_AGAIN =\n    'Error occurred while trying to authenticate. Please try Again.';\nexport const ERROR_AUTH_PROCESS_TERMINATED_TRY_AGAIN =\n    'Authentication process interrupted. Please try again.';\nexport const ERROR_STATE_MISSING_TRY_AGAIN =\n    'Response not received from the expected sender. Please try again.';\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Message from '@splunk/react-ui/Message';\n\nimport ControlWrapper from './ControlWrapper';\nimport Validator, { SaveValidator } from '../util/Validator';\nimport { getUnifiedConfigs, generateToast } from '../util/util';\nimport { MODE_CLONE, MODE_CREATE, MODE_EDIT, MODE_CONFIG } from '../constants/modes';\nimport { PAGE_INPUT, PAGE_CONF } from '../constants/pages';\nimport { axiosCallWrapper } from '../util/axiosCallWrapper';\nimport { parseErrorMsg, getFormattedMessage } from '../util/messageUtil';\nimport { getBuildDirPath } from '../util/script';\n\nimport {\n    ERROR_REQUEST_TIMEOUT_TRY_AGAIN,\n    ERROR_REQUEST_TIMEOUT_ACCESS_TOKEN_TRY_AGAIN,\n    ERROR_OCCURRED_TRY_AGAIN,\n    ERROR_AUTH_PROCESS_TERMINATED_TRY_AGAIN,\n    ERROR_STATE_MISSING_TRY_AGAIN,\n} from '../constants/oAuthErrorMessage';\nimport TableContext from '../context/TableContext';\nimport Group from './Group';\n\nfunction onCustomHookError(params) {\n    // eslint-disable-next-line no-console\n    console.error(\n        `[Custom Hook] Something went wrong while calling ${params.methodName}. Error: ${params.error?.name} ${params.error?.message}`\n    );\n}\n\nclass BaseFormView extends PureComponent {\n    static contextType = TableContext;\n\n    constructor(props, context) {\n        super(props);\n        // flag for to render hook method for once\n        this.flag = true;\n        this.state = {};\n        this.currentInput = {};\n        const globalConfig = getUnifiedConfigs();\n        this.appName = globalConfig.meta.name;\n        this.groupEntities = [];\n        this.endpoint =\n            props.mode === MODE_EDIT || props.mode === MODE_CONFIG\n                ? `${this.props.serviceName}/${encodeURIComponent(this.props.stanzaName)}`\n                : `${this.props.serviceName}`;\n\n        this.util = {\n            setState: (callback) => {\n                this.onSavePromise = new Promise((resolve) => {\n                    this.setState((previousState) => callback(previousState), resolve);\n                });\n            },\n            setErrorFieldMsg: this.setErrorFieldMsg,\n            clearAllErrorMsg: this.clearAllErrorMsg,\n            setErrorMsg: this.setErrorMsg,\n        };\n\n        this.utilControlWrapper = {\n            handleChange: this.handleChange,\n            addCustomValidator: this.addCustomValidator,\n            utilCustomFunctions: this.util,\n        };\n\n        if (props.page === PAGE_INPUT) {\n            globalConfig.pages.inputs.services.forEach((service) => {\n                if (service.name === props.serviceName) {\n                    this.groups = service.groups;\n                    this.entities = service.entity;\n                    this.updateGroupEntities();\n                    this.options = service.options;\n                    if (service.hook) {\n                        this.hookDeferred = this.loadHook(\n                            service.hook.src,\n                            service.hook.type,\n                            globalConfig\n                        );\n                    }\n                    if (props.mode === MODE_EDIT || props.mode === MODE_CLONE) {\n                        this.currentInput = context.rowData[props.serviceName][props.stanzaName];\n                    }\n                }\n            });\n        } else {\n            globalConfig.pages.configuration.tabs.forEach((tab) => {\n                const flag = tab.table\n                    ? tab.name === props.serviceName\n                    : tab.name === props.stanzaName && props.serviceName === 'settings';\n                if (flag) {\n                    this.entities = tab.entity;\n                    this.options = tab.options;\n                    if (tab.hook) {\n                        this.hookDeferred = this.loadHook(\n                            tab.hook.src,\n                            tab.hook.type,\n                            globalConfig\n                        );\n                    }\n                    if (tab.table && (props.mode === MODE_EDIT || props.mode === MODE_CLONE)) {\n                        this.currentInput = context.rowData[props.serviceName][props.stanzaName];\n                    } else if (props.mode === MODE_CONFIG) {\n                        this.currentInput = props.currentServiceState;\n                        this.mode_config_title = tab.title;\n                    } else {\n                        this.currentInput = context.rowData[props.serviceName];\n                    }\n                }\n            });\n        }\n        this.dependencyMap = new Map();\n        this.isOAuth = false;\n        this.isAuthVal = false;\n        this.authMap = {};\n        let temState = {};\n        const temEntities = [];\n\n        this.entities.forEach((e) => {\n            if (e.type === 'oauth') {\n                this.isOAuth = true;\n                if (props.page === PAGE_CONF && props.serviceName === 'account') {\n                    const authType = e?.options?.auth_type;\n                    this.isoauthState =\n                        typeof e?.options?.oauth_state_enabled !== 'undefined'\n                            ? e?.options?.oauth_state_enabled\n                            : null;\n\n                    if (authType.length > 1) {\n                        this.isAuthVal = true;\n                        // Defining state for auth_type in case of multiple Authentication\n                        const tempEntity = {};\n                        tempEntity.value =\n                            typeof this.currentInput.auth_type !== 'undefined'\n                                ? this.currentInput.auth_type\n                                : authType[0];\n                        tempEntity.display = true;\n                        tempEntity.error = false;\n                        tempEntity.disabled = false;\n                        temState.auth_type = tempEntity;\n\n                        // Defining Entity for auth_type in entitylist of globalConfig\n                        const entity = {};\n                        entity.field = 'auth_type';\n                        entity.type = 'singleSelect';\n                        entity.label = 'Auth Type';\n                        const content = {\n                            basic: 'Basic Authentication',\n                            oauth: 'OAuth 2.0 Authentication',\n                        };\n                        entity.options = {};\n                        entity.options.hideClearBtn = true;\n                        entity.options.autoCompleteFields = authType.map((type) => ({\n                            label: content[type],\n                            value: type,\n                        }));\n                        temEntities.push(entity);\n                    } else {\n                        this.isSingleOauth = authType.includes('oauth');\n                    }\n\n                    // Adding State and Entity(in entitylist) for every Fields of \"oauth\" type\n                    // Iterating over everytype of Authentication under \"oauth\" type\n                    authType.forEach((type) => {\n                        const authfields = [];\n                        const fields = e?.options[type];\n                        if (fields) {\n                            // For Particaular type iterating over fields\n                            fields.forEach((field) => {\n                                // every field for auth type\n                                const tempEntity = {};\n\n                                if (props.mode === MODE_CREATE) {\n                                    tempEntity.value =\n                                        typeof field?.defaultValue !== 'undefined'\n                                            ? field.defaultValue\n                                            : null;\n                                } else {\n                                    const isEncrypted =\n                                        typeof field?.encrypted !== 'undefined'\n                                            ? field?.encrypted\n                                            : false;\n                                    tempEntity.value = isEncrypted\n                                        ? ''\n                                        : this.currentInput[field.field];\n                                }\n                                tempEntity.display =\n                                    typeof temState.auth_type !== 'undefined'\n                                        ? type === temState.auth_type.value\n                                        : true;\n                                tempEntity.error = false;\n                                tempEntity.disabled = false;\n                                temState[field.field] = tempEntity;\n                                // eslint-disable-next-line no-param-reassign\n                                field.type =\n                                    typeof field?.type !== 'undefined' ? field.type : 'text';\n\n                                // Handled special case for redirect_url\n                                if (field.field === 'redirect_url') {\n                                    tempEntity.value = window.location.href\n                                        .split('?')[0]\n                                        .replace(\n                                            'configuration',\n                                            `${this.appName.toLowerCase()}_redirect`\n                                        );\n                                    tempEntity.disabled = true;\n                                }\n                                temEntities.push(field);\n                                authfields.push(field.field);\n                            });\n                            this.authMap[type] = authfields;\n                        }\n                    });\n                    if (authType.includes('oauth')) {\n                        const oauthConfData = {};\n                        // Storing O-Auth Configuration data to class variable to use later\n                        oauthConfData.popupWidth = e.options.oauth_popup_width\n                            ? e.options.oauth_popup_width\n                            : 600;\n                        oauthConfData.popupHeight = e.options.oauth_popup_height\n                            ? e.options.oauth_popup_height\n                            : 600;\n                        oauthConfData.authTimeout = e.options.oauth_timeout\n                            ? e.options.oauth_timeout\n                            : 180;\n                        oauthConfData.authCodeEndpoint = e.options.auth_code_endpoint\n                            ? e.options.auth_code_endpoint\n                            : null;\n                        oauthConfData.accessTokenEndpoint = e.options.access_token_endpoint\n                            ? e.options.access_token_endpoint\n                            : null;\n                        oauthConfData.authEndpointAccessTokenType = e.options\n                            .auth_endpoint_token_access_type\n                            ? e.options.auth_endpoint_token_access_type\n                            : null;\n                        this.oauthConf = oauthConfData;\n                    }\n                }\n            } else {\n                const tempEntity = {};\n                e.encrypted = typeof e.encrypted !== 'undefined' ? e.encrypted : false;\n\n                if (e.type === 'file' && this.currentInput[e.field]) {\n                    /* \n                     adding example name to enable possibility of removal file,\n                     not forcing value addition as if value is encrypted it is shared as\n                     string ie. ***** and it is considered a valid default value\n                     if value is not encrypted it is pushed correctly along with this name\n                    */\n                    tempEntity.fileNameToDisplay = 'Previous File';\n                }\n\n                if (props.mode === MODE_CREATE) {\n                    tempEntity.value =\n                        typeof e.defaultValue !== 'undefined' ? e.defaultValue : null;\n                    tempEntity.display =\n                        typeof e?.options?.display !== 'undefined' ? e.options.display : true;\n                    tempEntity.error = false;\n                    tempEntity.disabled = false;\n                    temState[e.field] = tempEntity;\n                } else if (props.mode === MODE_EDIT) {\n                    tempEntity.value =\n                        typeof this.currentInput[e.field] !== 'undefined'\n                            ? this.currentInput[e.field]\n                            : null;\n                    tempEntity.value = e.encrypted ? '' : tempEntity.value;\n                    tempEntity.display =\n                        typeof e?.options?.display !== 'undefined' ? e.options.display : true;\n                    tempEntity.error = false;\n                    tempEntity.disabled = false;\n                    if (e.field === 'name') {\n                        tempEntity.disabled = true;\n                    } else if (typeof e?.options?.disableonEdit !== 'undefined') {\n                        tempEntity.disabled = e.options.disableonEdit;\n                    }\n                    temState[e.field] = tempEntity;\n                } else if (props.mode === MODE_CLONE) {\n                    tempEntity.value =\n                        e.field === 'name' || e.encrypted ? '' : this.currentInput[e.field];\n                    tempEntity.display =\n                        typeof e?.options?.display !== 'undefined' ? e.options.display : true;\n                    tempEntity.error = false;\n                    tempEntity.disabled = false;\n                    temState[e.field] = tempEntity;\n                } else if (props.mode === MODE_CONFIG) {\n                    e.defaultValue = typeof e.defaultValue !== 'undefined' ? e.defaultValue : null;\n                    tempEntity.value =\n                        typeof this.currentInput[e.field] !== 'undefined'\n                            ? this.currentInput[e.field]\n                            : e.defaultValue;\n                    tempEntity.value = e.encrypted ? '' : tempEntity.value;\n                    tempEntity.display =\n                        typeof e?.options?.display !== 'undefined' ? e.options.display : true;\n                    tempEntity.error = false;\n                    tempEntity.disabled = false;\n                    if (e.field === 'name') {\n                        tempEntity.disabled = true;\n                    } else if (typeof e?.options?.disableonEdit !== 'undefined') {\n                        tempEntity.disabled = e.options.disableonEdit;\n                    }\n                    temState[e.field] = tempEntity;\n                } else {\n                    throw new Error('Invalid mode :', props.mode);\n                }\n\n                // handle dependent fields\n                const fields = e.options?.dependencies;\n                if (fields) {\n                    fields.forEach((field) => {\n                        const changeFields = this.dependencyMap.get(field);\n                        if (changeFields) {\n                            changeFields[e.field] = fields;\n                        } else {\n                            this.dependencyMap.set(field, {\n                                [e.field]: fields,\n                            });\n                        }\n                    });\n                }\n                temEntities.push(e);\n            }\n        });\n\n        this.entities = temEntities;\n\n        // flatten the dependencyMap to remove redundant iterations for resolving them\n        // one-by-one in following loop\n        let flattenedMap = {};\n        this.dependencyMap.forEach((value) => {\n            flattenedMap = { ...flattenedMap, ...value };\n        });\n\n        const changes = {};\n        Object.keys(flattenedMap).forEach((field) => {\n            const values = flattenedMap[field];\n            const data = {};\n            let load = true;\n\n            values.forEach((dependency) => {\n                const required = !!this.entities.find((e) => e.field === dependency).required;\n\n                const currentValue = temState[dependency].value;\n                if (required && !currentValue) {\n                    load = false;\n                    data[dependency] = null;\n                } else {\n                    data[dependency] = currentValue;\n                }\n            });\n\n            if (load) {\n                changes[field] = {\n                    dependencyValues: { $set: data },\n                };\n            }\n        });\n\n        // apply dependency field changes in state\n        temState = update(temState, changes);\n        this.state = {\n            data: temState,\n            errorMsg: '',\n            warningMsg: '',\n        };\n\n        // Hook on create method call\n        if (this.hookDeferred) {\n            this.hookDeferred.then(() => {\n                if (typeof this.hook.onCreate === 'function') {\n                    try {\n                        this.hook.onCreate();\n                    } catch (error) {\n                        onCustomHookError({ methodName: 'onCreate', error });\n                    }\n                }\n            });\n        }\n    }\n\n    updateGroupEntities = () => {\n        if (this.groups) {\n            this.groups.forEach((group) => {\n                group.fields.forEach((fieldName) => this.groupEntities.push(fieldName));\n            });\n        }\n    };\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    handleSubmit = () => {\n        this.clearErrorMsg();\n        this.props.handleFormSubmit(/* isSubmitting */ true, /* closeEntity */ false);\n\n        this.datadict = {};\n\n        Object.keys(this.state.data).forEach((field) => {\n            this.datadict[field] = this.state.data[field].value;\n        });\n\n        if (this.hook && typeof this.hook.onSave === 'function') {\n            const validationPass = this.hook.onSave(this.datadict);\n            if (!validationPass) {\n                this.props.handleFormSubmit(/* isSubmitting */ false, /* closeEntity */ false);\n                return;\n            }\n        }\n        const executeValidationSubmit = () => {\n            Object.keys(this.state.data).forEach((field) => {\n                this.datadict[field] = this.state.data[field].value;\n            });\n\n            // validation for unique name\n            if ([MODE_CREATE, MODE_CLONE].includes(this.props.mode)) {\n                const isExistingName = Boolean(\n                    Object.values(this.context.rowData).find((val) =>\n                        Object.keys(val).find((name) => name === this.datadict.name)\n                    )\n                );\n\n                if (isExistingName) {\n                    const index = this.entities.findIndex((e) => e.field === 'name');\n                    this.setErrorFieldMsg(\n                        'name',\n                        getFormattedMessage(2, [this.entities[index].label, this.datadict.name])\n                    );\n                    this.props.handleFormSubmit(/* isSubmitting */ false, /* closeEntity */ false);\n                    return;\n                }\n            }\n\n            // validation condition of required fields in O-Auth\n            let temEntities;\n            if (this.isOAuth) {\n                let reqFields = [];\n                Object.keys(this.authMap).forEach((type) => {\n                    // `isAuthVal` is required in a case where only single auth type is provided\n                    if (type === this.datadict.auth_type || !this.isAuthVal) {\n                        reqFields = [...reqFields, ...this.authMap[type]];\n                    }\n                });\n                temEntities = this.entities.map((e) => {\n                    if (reqFields.includes(e.field)) {\n                        // All oauth fields are required except if explicitely `required` is set to `false`\n                        return { required: true, ...e };\n                    }\n                    return e;\n                });\n            } else {\n                temEntities = this.entities;\n            }\n\n            // Validation of form fields on Submit\n            const validator = new Validator(temEntities);\n            let error = validator.doValidation(this.datadict);\n            if (error) {\n                this.setErrorFieldMsg(error.errorField, error.errorMsg);\n            } else if (this.options && this.options.saveValidator) {\n                error = SaveValidator(this.options.saveValidator, this.datadict);\n                if (error) {\n                    this.setErrorMsg(error.errorMsg);\n                }\n            }\n\n            if (error) {\n                this.props.handleFormSubmit(/* isSubmitting */ false, /* closeEntity */ false);\n            } else if (\n                this.isOAuth &&\n                (this.isSingleOauth || (this.isAuthVal && this.datadict.auth_type === 'oauth'))\n            ) {\n                // handle oauth Authentication\n                // Populate the parameter string with client_id, redirect_url and response_type\n                let parameters = `?response_type=code&client_id=${this.datadict.client_id}&redirect_uri=${this.datadict.redirect_url}`;\n                // Get the value for state_enabled\n                const stateEnabled = this.isoauthState != null ? this.isoauthState : false;\n                if (stateEnabled === 'true' || stateEnabled === true) {\n                    this.state_enabled = true;\n                    // Generating a cryptographically strong state parameter, which will be used ONLY during configuration\n                    this.oauth_state = uuidv4().replace(/-/g, '');\n\n                    // Appending the state in the headers\n                    parameters = `${parameters}&state=${this.oauth_state}`;\n                }\n\n                if (this.datadict.scope) {\n                    parameters = `${parameters}&scope=${this.datadict.scope}`;\n                }\n\n                if (this.oauthConf.authEndpointAccessTokenType) {\n                    parameters = `${parameters}&token_access_type=${this.oauthConf.authEndpointAccessTokenType}`;\n                }\n\n                let host = encodeURI(\n                    `https://${this.datadict.endpoint}${this.oauthConf.authCodeEndpoint}${parameters}`\n                );\n                const redirectURI = new URLSearchParams(host).get('redirect_uri');\n                host = host.replace(redirectURI, encodeURIComponent(redirectURI));\n\n                (async () => {\n                    this.isCalled = false;\n                    this.isError = false;\n                    this.isResponse = false;\n                    // Get auth_type element from global config json\n\n                    // Open a popup to make auth request\n                    this.childWin = window.open(\n                        host,\n                        `${this.appName} OAuth`,\n                        `width=${this.oauthConf.popupWidth}, height=${this.oauthConf.popupHeight}`\n                    );\n                    // Callback to receive data from redirect url\n                    window.getMessage = (message) => {\n                        this.isCalled = true;\n                        // On Call back with Auth code this method will be called.\n                        this.handleOauthToken(message);\n                    };\n                    // Wait till we get auth_code from calling site through redirect url, we will wait for 3 mins\n                    await this.waitForAuthentication(this.oauthConf.authTimeout);\n\n                    if (!this.isCalled && this.childWin.closed) {\n                        // Add error message if the user has close the authentication window without taking any action\n                        this.setErrorMsg(ERROR_AUTH_PROCESS_TERMINATED_TRY_AGAIN);\n                        this.props.handleFormSubmit(\n                            /* isSubmitting */ false,\n                            /* closeEntity */ false\n                        );\n                        return false;\n                    }\n\n                    if (!this.isCalled) {\n                        // Add timeout error message\n                        this.setErrorMsg(ERROR_REQUEST_TIMEOUT_TRY_AGAIN);\n                        this.props.handleFormSubmit(\n                            /* isSubmitting */ false,\n                            /* closeEntity */ false\n                        );\n                        return false;\n                    }\n\n                    // Reset called flag as we have to wait till we get the access_token, refresh_token and instance_url\n                    // Wait till we get the response, here we have added wait for 30 secs\n                    await this.waitForBackendResponse(30);\n\n                    if (!this.isResponse && !this.isError) {\n                        // Set error message to prevent saving.\n                        this.isError = true;\n\n                        // Add timeout error message\n                        this.setErrorMsg(ERROR_REQUEST_TIMEOUT_ACCESS_TOKEN_TRY_AGAIN);\n                        this.props.handleFormSubmit(\n                            /* isSubmitting */ false,\n                            /* closeEntity */ false\n                        );\n                        return false;\n                    }\n                    return true;\n                })().then(() => {\n                    if (!this.isError) {\n                        this.saveData();\n                    } else {\n                        this.props.handleFormSubmit(\n                            /* isSubmitting */ false,\n                            /* closeEntity */ false\n                        );\n                    }\n                });\n            } else {\n                this.saveData();\n            }\n        };\n        if (\n            this.hook &&\n            typeof this.hook.onSave === 'function' &&\n            typeof this.onSavePromise !== 'undefined'\n        ) {\n            this.onSavePromise.then(() => {\n                executeValidationSubmit();\n            });\n        } else {\n            executeValidationSubmit();\n        }\n    };\n\n    saveData = () => {\n        const body = new URLSearchParams();\n        Object.keys(this.datadict).forEach((key) => {\n            if (this.datadict[key] != null) {\n                // Custom logic for only sending file content in payload, not file name and file size.\n                if (\n                    typeof this.datadict[key] === 'object' &&\n                    this.entities.find((x) => x.field === key).type === 'file'\n                ) {\n                    body.append(key, this.datadict[key].fileContent);\n                } else {\n                    body.append(key, this.datadict[key]);\n                }\n            }\n        });\n\n        // clear out fields of other authentication methods when using one\n        if (this.isAuthVal) {\n            Object.keys(this.authMap).forEach((type) => {\n                if (this.datadict.auth_type !== type) {\n                    this.authMap[type].forEach((e) => {\n                        body.set(e, '');\n                    });\n                }\n            });\n        }\n\n        if (this.isOAuth) {\n            // Prevent passing redirect_url field used in OAuth to backend conf file\n            body.delete('redirect_url');\n        }\n        if (this.props.mode === MODE_EDIT) {\n            body.delete('name');\n        }\n\n        axiosCallWrapper({\n            serviceName: this.endpoint,\n            body,\n            customHeaders: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            method: 'post',\n            handleError: false,\n        })\n            .then((response) => {\n                const val = response?.data?.entry[0];\n                if (this.props.mode !== MODE_CONFIG) {\n                    const tmpObj = {};\n\n                    tmpObj[val.name] = {\n                        // ADDON-38581: `datadict` provides fallback values if rh skips\n                        ...this.datadict,\n                        ...val.content,\n                        id: val.id,\n                        name: val.name,\n                        serviceName: this.props.serviceName,\n                    };\n\n                    this.context.setRowData(\n                        update(this.context.rowData, {\n                            [this.props.serviceName]: { $merge: tmpObj },\n                        })\n                    );\n                }\n                if (this.hook && typeof this.hook.onSaveSuccess === 'function') {\n                    this.hook.onSaveSuccess();\n                }\n                if (this.props.mode === MODE_EDIT) {\n                    generateToast(`Updated \"${val.name}\"`, 'success');\n                } else if (this.props.mode === MODE_CONFIG) {\n                    generateToast(\n                        `Updated \"${this.mode_config_title ? this.mode_config_title : val.name}\"`,\n                        'success'\n                    );\n                } else {\n                    generateToast(`Created \"${val.name}\"`, 'success');\n                }\n                this.props.handleFormSubmit(/* isSubmitting */ false, /* closeEntity */ true);\n            })\n            .catch((err) => {\n                const errorSubmitMsg = parseErrorMsg(err);\n                this.setState({ errorMsg: errorSubmitMsg });\n                if (this.hook && typeof this.hook.onSaveFail === 'function') {\n                    this.hook.onSaveFail();\n                }\n                this.props.handleFormSubmit(/* isSubmitting */ false, /* closeEntity */ false);\n            });\n    };\n\n    handleChange = (field, targetValue) => {\n        this.setState((prevState) => {\n            const changes = {};\n            if (field === 'auth_type') {\n                Object.keys(this.authMap).forEach((type) => {\n                    if (type === targetValue) {\n                        this.authMap[type].forEach((e) => {\n                            changes[e] = { display: { $set: true } };\n                        });\n                    } else {\n                        this.authMap[type].forEach((e) => {\n                            changes[e] = { display: { $set: false } };\n                        });\n                    }\n                });\n            }\n\n            if (this.dependencyMap.has(field)) {\n                const value = this.dependencyMap.get(field);\n                Object.keys(value).forEach((loadField) => {\n                    const data = {};\n                    let load = true;\n\n                    value[loadField].forEach((dependency) => {\n                        const required = !!this.entities.find((e) => e.field === dependency)\n                            .required;\n\n                        const currentValue =\n                            dependency === field ? targetValue : prevState.data[dependency].value;\n                        if (required && !currentValue) {\n                            load = false;\n                            data[dependency] = null;\n                        } else {\n                            data[dependency] = currentValue;\n                        }\n                    });\n\n                    if (load) {\n                        changes[loadField] = {\n                            dependencyValues: { $set: data },\n                            value: { $set: null },\n                        };\n                    }\n                });\n            }\n\n            changes[field] = { value: { $set: targetValue } };\n\n            const newFields = update(prevState, { data: changes });\n            const tempState = this.clearAllErrorMsg(newFields);\n\n            if (this.hookDeferred) {\n                this.hookDeferred.then(() => {\n                    if (typeof this.hook.onChange === 'function') {\n                        this.hook.onChange(field, targetValue, tempState);\n                    }\n                });\n            }\n\n            return tempState;\n        });\n    };\n\n    addCustomValidator = (field, validatorFunc) => {\n        const index = this.entities.findIndex((x) => x.field === field);\n        const validator = [{ type: 'custom', validatorFunc }];\n        this.entities[index].validators = validator;\n    };\n\n    // Set error message to display and set error in perticular field\n    setErrorFieldMsg = (field, msg) => {\n        this.setState((previousState) => {\n            const newFields = update(previousState, {\n                data: { [field]: { error: { $set: true } } },\n            });\n            newFields.errorMsg = msg;\n            return newFields;\n        });\n    };\n\n    // Set error in perticular field\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    setErrorField = (field) => {\n        this.setState((previousState) =>\n            update(previousState, { data: { [field]: { error: { $set: true } } } })\n        );\n    };\n\n    // Clear error message\n    clearErrorMsg = () => {\n        if (this.state.errorMsg) {\n            this.setState((previousState) => ({ ...previousState, errorMsg: '' }));\n        }\n    };\n\n    // Set error message\n    setErrorMsg = (msg) => {\n        this.setState((previousState) => ({ ...previousState, errorMsg: msg }));\n    };\n\n    // Clear error/warning message and errors from fields\n    clearAllErrorMsg = (State) => {\n        const newFields = State ? { ...State } : { ...this.state };\n        newFields.errorMsg = '';\n        newFields.warningMsg = '';\n        const newData = State ? { ...State.data } : { ...this.state.data };\n        const temData = {};\n        Object.keys(newData).forEach((key) => {\n            if (newData[key].error) {\n                temData[key] = { ...newData[key], error: false };\n            } else {\n                temData[key] = newData[key];\n            }\n        });\n        newFields.data = temData;\n        return State ? newFields : null;\n    };\n\n    // Display error message\n    generateErrorMessage = () => {\n        if (this.state.errorMsg) {\n            return (\n                <Message appearance=\"fill\" type=\"error\">\n                    {this.state.errorMsg}\n                </Message>\n            );\n        }\n        return null;\n    };\n\n    generateWarningMessage = () => {\n        if (this.state.warningMsg) {\n            return (\n                <Message appearance=\"fill\" type=\"warning\">\n                    {this.state.warningMsg}\n                </Message>\n            );\n        }\n        return null;\n    };\n\n    // generatesubmitMessage\n    loadHook = (module, type, globalConfig) => {\n        const myPromise = new Promise((resolve) => {\n            if (type === 'external') {\n                import(/* webpackIgnore: true */ `${getBuildDirPath()}/custom/${module}.js`).then(\n                    (external) => {\n                        const Hook = external.default;\n                        this.hook = new Hook(\n                            globalConfig,\n                            this.props.serviceName,\n                            this.state,\n                            this.props.mode,\n                            this.util,\n                            this.props.groupName\n                        );\n                        resolve(Hook);\n                    }\n                );\n            } else {\n                __non_webpack_require__(\n                    [`app/${this.appName}/js/build/custom/${module}`],\n                    (Hook) => {\n                        this.hook = new Hook(\n                            globalConfig,\n                            this.props.serviceName,\n                            this.state,\n                            this.props.mode,\n                            this.util\n                        );\n                        resolve(Hook);\n                    }\n                );\n            }\n        });\n        return myPromise;\n    };\n\n    /*\n     * Function to get access token, refresh token and instance url\n     * using rest call once oauth code received from child window\n     */\n    // eslint-disable-next-line consistent-return\n    handleOauthToken = (message) => {\n        // Check message for error. If error show error message.\n        if (!message || (message && message.error) || message.code === undefined) {\n            this.setErrorMsg(ERROR_OCCURRED_TRY_AGAIN);\n            this.isError = true;\n            this.isResponse = true;\n            return false;\n        }\n        const stateResponse = message.state;\n\n        if (this.state_enabled === true && this.oauth_state !== stateResponse) {\n            this.setErrorMsg(ERROR_STATE_MISSING_TRY_AGAIN);\n            this.isError = true;\n            this.isResponse = true;\n            return false;\n        }\n\n        const code = decodeURIComponent(message.code);\n        const data = {\n            method: 'POST',\n            url: `https://${this.datadict.endpoint}${this.oauthConf.accessTokenEndpoint}`,\n            grant_type: 'authorization_code',\n            client_id: this.datadict.client_id,\n            client_secret: this.datadict.client_secret,\n            code,\n            redirect_uri: this.datadict.redirect_url,\n        };\n\n        if (this.datadict.scope) {\n            data.scope = this.datadict.scope;\n        }\n\n        const body = new URLSearchParams();\n        Object.keys(data).forEach((key) => {\n            body.append(key, data[key]);\n        });\n\n        const OAuthEndpoint = `${this.appName}_oauth/oauth`;\n        // Internal handler call to get the access token and other values\n        axiosCallWrapper({\n            endpointUrl: OAuthEndpoint,\n            body,\n            customHeaders: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            method: 'post',\n            handleError: false,\n        })\n            .then((response) => {\n                if (response.data.entry[0].content.error === undefined) {\n                    const accessToken = response.data.entry[0].content.access_token;\n                    const instanceUrl = response.data.entry[0].content.instance_url;\n                    const refreshToken = response.data.entry[0].content.refresh_token;\n\n                    this.datadict.instance_url = instanceUrl;\n                    this.datadict.refresh_token = refreshToken;\n                    this.datadict.access_token = accessToken;\n                    this.isResponse = true;\n                    return true;\n                }\n                this.setErrorMsg(response.data.entry[0].content.error);\n                this.isError = true;\n                this.isResponse = true;\n                return false;\n            })\n            .catch(() => {\n                this.setErrorMsg(ERROR_OCCURRED_TRY_AGAIN);\n                this.isError = true;\n                this.isResponse = true;\n                return false;\n            });\n    };\n\n    // Function to wait for authentication call back in child window.\n    // eslint-disable-next-line consistent-return\n    waitForAuthentication = async (count) => {\n        // eslint-disable-next-line no-param-reassign\n        count -= 1;\n        // Check if callback function called if called then exit from wait\n        if (this.isCalled === true) {\n            return true;\n        }\n        // If callback function is not called and count is not reached to 180 then return error for timeout\n        if (count === 0 || this.childWin.closed) {\n            this.isError = true;\n            return false;\n        }\n        // else call sleep and recall the same function\n        await this.sleep(this.waitForAuthentication, count);\n    };\n\n    // Function to wait for backend call get response from backend\n\n    // eslint-disable-next-line consistent-return\n    waitForBackendResponse = async (count) => {\n        // eslint-disable-next-line no-param-reassign\n        count += 1;\n        // Check if callback function called if called then exit from wait\n        if (this.isResponse === true) {\n            return true;\n        }\n        // If callback function is not called and count is not reached to 60 then return error for timeout\n        if (count === 60) {\n            return false;\n        }\n        // else call sleep and recall the same function\n        await this.sleep(this.waitForBackendResponse, count);\n    };\n\n    /*\n     * This function first add sleep for 1 secs and the call the function passed in argument\n     */\n    sleep = async (fn, ...args) => {\n        await this.timeout(1000);\n        return fn(...args);\n    };\n\n    /*\n     * This function will resolve the promise once the provided timeout occurs\n     */\n    // eslint-disable-next-line class-methods-use-this\n    timeout = (ms) => new Promise((resolve) => setTimeout(resolve, ms)); // eslint-disable-line no-promise-executor-return\n\n    renderGroupElements = () => {\n        let el = null;\n        if (this.groups && this.groups.length) {\n            el = this.groups.map((group) => {\n                const collapsibleElement =\n                    group.fields?.length &&\n                    group.fields.map((fieldName) =>\n                        this.entities.map((e) => {\n                            if (e.field === fieldName) {\n                                const temState = this.state.data[e.field];\n                                return (\n                                    <ControlWrapper\n                                        key={e.field}\n                                        utilityFuncts={this.utilControlWrapper}\n                                        value={temState.value}\n                                        display={temState.display}\n                                        error={temState.error}\n                                        entity={e}\n                                        serviceName={this.props.serviceName}\n                                        mode={this.props.mode}\n                                        disabled={temState.disabled}\n                                        markdownMessage={temState.markdownMessage}\n                                        dependencyValues={temState.dependencyValues || null}\n                                    />\n                                );\n                            }\n                            return null;\n                        })\n                    );\n\n                return (\n                    <Group\n                        key={group.label}\n                        isExpandable={group.options?.isExpandable}\n                        defaultOpen={group.options?.expand}\n                        title={group.label}\n                    >\n                        {collapsibleElement}\n                    </Group>\n                );\n            });\n        }\n        return el;\n    };\n\n    render() {\n        // onRender method of Hook\n        if (this.flag) {\n            if (this.hookDeferred) {\n                this.hookDeferred.then(() => {\n                    if (typeof this.hook.onRender === 'function') {\n                        try {\n                            this.hook.onRender();\n                        } catch (error) {\n                            onCustomHookError({ methodName: 'onRender', error });\n                        }\n                    }\n                });\n            }\n\n            if (this.props.mode === MODE_EDIT) {\n                if (this.hookDeferred) {\n                    this.hookDeferred.then(() => {\n                        if (typeof this.hook.onEditLoad === 'function') {\n                            try {\n                                this.hook.onEditLoad();\n                            } catch (error) {\n                                onCustomHookError({ methodName: 'onEditLoad', error });\n                            }\n                        }\n                    });\n                }\n            }\n            this.flag = false;\n        }\n        return (\n            <div>\n                <form style={this.props.mode === MODE_CONFIG ? { marginTop: '25px' } : {}}>\n                    {this.generateWarningMessage()}\n                    {this.generateErrorMessage()}\n                    {this.entities.map((e) => {\n                        // Return null if we need to show element in a group\n                        if (this.groupEntities.includes(e.field)) {\n                            return null;\n                        }\n\n                        const temState = this.state.data[e.field];\n\n                        if (!temState) return null;\n\n                        return (\n                            <ControlWrapper\n                                key={e.field}\n                                utilityFuncts={this.utilControlWrapper}\n                                value={temState.value}\n                                display={temState.display}\n                                error={temState.error}\n                                entity={e}\n                                serviceName={this.props.serviceName}\n                                mode={this.props.mode}\n                                disabled={temState.disabled}\n                                markdownMessage={temState.markdownMessage}\n                                dependencyValues={temState.dependencyValues || null}\n                                fileNameToDisplay={temState.fileNameToDisplay || null}\n                            />\n                        );\n                    })}\n                    {this.renderGroupElements()}\n                </form>\n            </div>\n        );\n    }\n}\n\nBaseFormView.propTypes = {\n    page: PropTypes.string,\n    serviceName: PropTypes.string,\n    stanzaName: PropTypes.string,\n    currentServiceState: PropTypes.object,\n    mode: PropTypes.string,\n    handleFormSubmit: PropTypes.func,\n    groupName: PropTypes.string,\n};\n\nexport default BaseFormView;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '@splunk/react-ui/Modal';\nimport styled from 'styled-components';\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';\nimport { _ } from '@splunk/ui-utils/i18n';\n\nimport { MODE_CLONE, MODE_CREATE, MODE_EDIT } from '../constants/modes';\nimport { StyledButton } from '../pages/EntryPageStyle';\nimport BaseFormView from './BaseFormView';\n\nconst ModalWrapper = styled(Modal)`\n    width: 800px;\n`;\n\nclass EntityModal extends Component {\n    constructor(props) {\n        super(props);\n        // Ref is used here to call submit method of form only\n        this.form = React.createRef(); // nosemgrep: typescript.react.security.audit.react-no-refs.react-no-refs\n        this.state = { isSubmititng: false };\n\n        if (props.mode === MODE_CREATE) {\n            this.buttonText = _('Add');\n        } else if (props.mode === MODE_CLONE) {\n            this.buttonText = _('Save');\n        } else if (props.mode === MODE_EDIT) {\n            this.buttonText = _('Update');\n        } else {\n            this.buttonText = _('Submit');\n        }\n    }\n\n    handleRequestClose = () => {\n        this.props.handleRequestClose();\n    };\n\n    handleSubmit = () => {\n        const result = this.form.current.handleSubmit();\n        if (result) {\n            this.handleRequestClose();\n        }\n    };\n\n    /*\n     * @param {boolean} set: whether form is submitting\n     * @param {boolean} close : close the Entity modal\n     */\n    handleFormSubmit = (set, close) => {\n        this.setState({ isSubmititng: set });\n        if (close) {\n            this.handleRequestClose();\n        }\n    };\n\n    render() {\n        return (\n            <ModalWrapper open={this.props.open}>\n                <Modal.Header\n                    title={this.props.formLabel}\n                    onRequestClose={this.handleRequestClose}\n                />\n                <Modal.Body>\n                    <BaseFormView // nosemgrep: typescript.react.security.audit.react-no-refs.react-no-refs\n                        ref={this.form}\n                        page={this.props.page}\n                        serviceName={this.props.serviceName}\n                        mode={this.props.mode}\n                        stanzaName={this.props.stanzaName}\n                        handleFormSubmit={this.handleFormSubmit}\n                        groupName={this.props.groupName}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <StyledButton\n                        appearance=\"secondary\"\n                        onClick={this.handleRequestClose}\n                        label={_('Cancel')}\n                        disabled={this.state.isSubmititng}\n                    />\n                    <StyledButton\n                        className=\"saveBtn\"\n                        appearance=\"primary\"\n                        label={this.state.isSubmititng ? <WaitSpinner /> : this.buttonText}\n                        onClick={this.handleSubmit}\n                        disabled={this.state.isSubmititng}\n                    />\n                </Modal.Footer>\n            </ModalWrapper>\n        );\n    }\n}\n\nEntityModal.propTypes = {\n    page: PropTypes.string,\n    open: PropTypes.bool,\n    handleRequestClose: PropTypes.func,\n    serviceName: PropTypes.string,\n    mode: PropTypes.string,\n    stanzaName: PropTypes.string,\n    formLabel: PropTypes.string,\n    groupName: PropTypes.string,\n};\n\nexport default EntityModal;\n","import React, { memo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Link from '@splunk/react-ui/Link';\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';\nimport ColumnLayout from '@splunk/react-ui/ColumnLayout';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport { useSplunkTheme } from '@splunk/themes';\n\nimport { MODE_CLONE, MODE_CREATE, MODE_EDIT } from '../constants/modes';\nimport BaseFormView from './BaseFormView';\nimport { SubTitleComponent } from '../pages/Input/InputPageStyle';\nimport { PAGE_INPUT } from '../constants/pages';\nimport { StyledButton } from '../pages/EntryPageStyle';\n\nfunction EntityPage({\n    handleRequestClose,\n    serviceName,\n    mode,\n    stanzaName,\n    formLabel,\n    page,\n    groupName,\n}) {\n    // Ref is used here to call submit method of form only\n    const form = useRef(); // nosemgrep: typescript.react.security.audit.react-no-refs.react-no-refs\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    let buttonText = _('Submit');\n\n    if (mode === MODE_CREATE) {\n        buttonText = _('Add');\n    } else if (mode === MODE_CLONE) {\n        buttonText = _('Clone Input');\n    } else if (mode === MODE_EDIT) {\n        buttonText = _('Update');\n    }\n\n    const { embossShadow } = useSplunkTheme();\n    const colStyle = {\n        boxShadow: embossShadow,\n        padding: '1%',\n        backgroundColor: 'white',\n    };\n\n    const handleSubmit = () => {\n        const result = form.current.handleSubmit();\n        if (result) {\n            handleRequestClose();\n        }\n    };\n\n    const handleFormSubmit = (set, close) => {\n        setIsSubmitting(set);\n        if (close) {\n            handleRequestClose();\n        }\n    };\n    return (\n        <ColumnLayout gutter={8}>\n            <ColumnLayout.Row style={{ padding: '5px 0px' }}>\n                <ColumnLayout.Column>\n                    <SubTitleComponent>\n                        <Link onClick={handleRequestClose}>\n                            {page === PAGE_INPUT ? _('Inputs') : _('Configuration')}\n                        </Link>\n                        {' > '}\n                        {_(formLabel)}\n                    </SubTitleComponent>\n                </ColumnLayout.Column>\n            </ColumnLayout.Row>\n            <ColumnLayout.Row>\n                <ColumnLayout.Column span={2} />\n                <ColumnLayout.Column span={8} style={colStyle}>\n                    <BaseFormView // nosemgrep: typescript.react.security.audit.react-no-refs.react-no-refs\n                        ref={form}\n                        page={page}\n                        serviceName={serviceName}\n                        mode={mode}\n                        stanzaName={stanzaName}\n                        handleFormSubmit={handleFormSubmit}\n                        groupName={groupName}\n                    />\n                </ColumnLayout.Column>\n                <ColumnLayout.Column span={2} />\n            </ColumnLayout.Row>\n            <ColumnLayout.Row>\n                <ColumnLayout.Column span={7} />\n                <ColumnLayout.Column span={3} style={{ textAlign: 'right' }}>\n                    <StyledButton\n                        appearance=\"secondary\"\n                        onClick={handleRequestClose}\n                        label={_('Cancel')}\n                        disabled={isSubmitting}\n                        style={{ width: '80px' }}\n                    />\n                    <StyledButton\n                        appearance=\"primary\"\n                        label={isSubmitting ? <WaitSpinner /> : buttonText}\n                        onClick={handleSubmit}\n                        disabled={isSubmitting}\n                        style={{ width: '80px' }}\n                    />\n                </ColumnLayout.Column>\n                <ColumnLayout.Column span={2} />\n            </ColumnLayout.Row>\n        </ColumnLayout>\n    );\n}\n\nEntityPage.propTypes = {\n    handleRequestClose: PropTypes.func,\n    serviceName: PropTypes.string,\n    mode: PropTypes.string,\n    stanzaName: PropTypes.string,\n    formLabel: PropTypes.string,\n    page: PropTypes.string,\n    groupName: PropTypes.string,\n};\n\nexport default memo(EntityPage);\n","import React from 'react';\nimport Link from '@splunk/react-ui/Link';\n\nexport default {\n    ERR0001: (\n        <>\n            This is normal on Splunk search heads as they do not require an Input page. Check your\n            installation or return to the <Link to=\"configuration\">configuration page</Link>.\n        </>\n    ),\n    ERR0002:\n        'Configuration page failed to load, the server reported internal errors which may indicate you do not have access to this page.',\n    ERR0003: 'Failed to load content due to no response from server!',\n    ERR0004: 'Failed to load content due to failed request processing!',\n    ERR0005: 'Failed to load current state for selected entity in form!',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Heading from '@splunk/react-ui/Heading';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport Card from '@splunk/react-ui/Card';\nimport WarningIcon from '@splunk/react-icons/enterprise/Warning';\nimport errorCodes from '../constants/errorCodes';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { errorCode: null, error: null };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { errorCode: error.uccErrorCode };\n    }\n\n    componentDidCatch(error) {\n        // Catch errors in any components below and re-render with error message\n        this.setState({\n            error,\n        });\n        // You can also log error messages to an error reporting service here\n    }\n\n    render() {\n        if (this.state.error) {\n            // Error path\n            return (\n                <div style={{ marginTop: '10%' }}>\n                    <Card style={{ boxShadow: '10px 10px 5px #aaaaaa' }}>\n                        <Card.Header>\n                            <Heading style={{ textAlign: 'center' }} level={2}>\n                                <WarningIcon style={{ fontSize: '120px', color: '#ff9900' }} />\n                                <br />\n                                <br />\n                                {this.state.errorCode === 'ERR0001'\n                                    ? _('Failed to load Inputs Page')\n                                    : _('Something went wrong!')}\n                            </Heading>\n                        </Card.Header>\n                        <Card.Body>\n                            {this.state.errorCode ? (\n                                <>\n                                    {_(errorCodes[this.state.errorCode])}\n                                    <br />\n                                    <br />\n                                </>\n                            ) : null}\n                            <details style={{ whiteSpace: 'pre-wrap' }}>\n                                {this.state.error?.toString()}\n                            </details>\n                        </Card.Body>\n                        <Card.Footer showBorder={false}>\n                            {this.state.errorCode ? this.state.errorCode : null}\n                        </Card.Footer>\n                    </Card>\n                </div>\n            );\n        }\n        // Normally, just render children\n        return this.props.children;\n    }\n}\n\nErrorBoundary.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nexport default ErrorBoundary;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { _ } from '@splunk/ui-utils/i18n';\n\nimport { getUnifiedConfigs } from '../../util/util';\nimport { getBuildDirPath } from '../../util/script';\n\nfunction onCustomControlError(params) {\n    // eslint-disable-next-line no-console\n    console.error(\n        `[Custom Control] Something went wrong while calling ${params.methodName}. Error: ${params.error?.name} ${params.error?.message}`\n    );\n}\n\nclass CustomTableControl extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n        this.shouldRender = true;\n    }\n\n    componentDidMount() {\n        const globalConfig = getUnifiedConfigs();\n        this.setState({ loading: true });\n        this.loadCustomControl().then((Control) => {\n            this.customControl = new Control(\n                globalConfig,\n                this.props.serviceName,\n                this.el,\n                this.props.row,\n                this.props.field\n            );\n            this.setState({ loading: false });\n        });\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.props.row !== nextProps.row) {\n            return true;\n        }\n        if (!nextState.loading && this.shouldRender) {\n            this.shouldRender = false;\n            return true;\n        }\n        return false;\n    }\n\n    loadCustomControl = () =>\n        new Promise((resolve) => {\n            if (this.props.type === 'external') {\n                import(\n                    /* webpackIgnore: true */ `${getBuildDirPath()}/custom/${\n                        this.props.fileName\n                    }.js`\n                ).then((external) => {\n                    const Control = external.default;\n                    resolve(Control);\n                });\n            } else {\n                const globalConfig = getUnifiedConfigs();\n                const appName = globalConfig.meta.name;\n                __non_webpack_require__(\n                    [`app/${appName}/js/build/custom/${this.props.fileName}`],\n                    (Control) => resolve(Control)\n                );\n            }\n        });\n\n    render() {\n        if (!this.state.loading) {\n            try {\n                this.customControl.render(this.props.row, this.props.field);\n            } catch (error) {\n                onCustomControlError({ methodName: 'render', error });\n            }\n        }\n        return (\n            <>\n                {this.state.loading && _('Loading...')}\n                {\n                    <span // nosemgrep: typescript.react.security.audit.react-no-refs.react-no-refs\n                        ref={(el) => {\n                            this.el = el;\n                        }}\n                        style={{ visibility: this.state.loading ? 'hidden' : 'visible' }}\n                    />\n                }\n            </>\n        );\n    }\n}\n\nCustomTableControl.propTypes = {\n    serviceName: PropTypes.string.isRequired,\n    row: PropTypes.object.isRequired,\n    field: PropTypes.string,\n    fileName: PropTypes.string.isRequired,\n    type: PropTypes.string,\n};\n\nexport default CustomTableControl;\n","import React from 'react';\nimport DL from '@splunk/react-ui/DefinitionList';\nimport Table from '@splunk/react-ui/Table';\nimport Button from '@splunk/react-ui/Button';\nimport styled from 'styled-components';\nimport { _ } from '@splunk/ui-utils/i18n';\n\nimport CustomTableControl from './CustomTableControl';\nimport { getUnifiedConfigs } from '../../util/util';\n\nconst TableCellWrapper = styled(Table.Cell)`\n    border-top: none;\n`;\n\nfunction getExpansionRowData(row, moreInfo) {\n    const DefinitionLists = [];\n\n    if (moreInfo?.length) {\n        moreInfo.forEach((val) => {\n            const label = _(val.label);\n            // remove extra rows which are empty in moreInfo\n            if (val.field in row && row[val.field] !== null && row[val.field] !== '') {\n                DefinitionLists.push(<DL.Term key={val.field}>{label}</DL.Term>);\n                DefinitionLists.push(\n                    <DL.Description key={`${val.field}_decr`}>\n                        {val.mapping && val.mapping[row[val.field]]\n                            ? val.mapping[row[val.field]]\n                            : String(row[val.field])}\n                    </DL.Description>\n                );\n            }\n        });\n    }\n    return DefinitionLists;\n}\n\nexport function getExpansionRow(colSpan, row, moreInfo) {\n    const inputs = getUnifiedConfigs().pages?.inputs;\n\n    const customRow = inputs?.table\n        ? inputs.table.customRow\n        : inputs.services.find((service) => service.name === row.serviceName).table?.customRow;\n\n    return (\n        <Table.Row key={`${row.id}-expansion`} style={{ wordBreak: 'break-word' }}>\n            <TableCellWrapper colSpan={colSpan}>\n                {customRow && customRow.src ? (\n                    <>\n                        {React.createElement(CustomTableControl, {\n                            serviceName: row.serviceName,\n                            row,\n                            fileName: customRow.src,\n                            type: customRow.type,\n                        })}\n                    </>\n                ) : (\n                    <>\n                        <DL termWidth={250}>{getExpansionRowData(row, moreInfo)}</DL>\n                        <Button\n                            to={`/app/search/search?q=search%20index%3D_internal%20source%3D*${row.name}*`}\n                            openInNewContext\n                            label={_(`Show ${row.name} input events`)}\n                        />\n                    </>\n                )}\n            </TableCellWrapper>\n        </Table.Row>\n    );\n}\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';\nimport Switch from '@splunk/react-ui/Switch';\nimport Table from '@splunk/react-ui/Table';\nimport ButtonGroup from '@splunk/react-ui/ButtonGroup';\nimport Tooltip from '@splunk/react-ui/Tooltip';\nimport Pencil from '@splunk/react-icons/Pencil';\nimport Clone from '@splunk/react-icons/enterprise/Clone';\nimport Trash from '@splunk/react-icons/enterprise/Trash';\nimport styled from 'styled-components';\nimport { _ } from '@splunk/ui-utils/i18n';\n\nimport CustomTableControl from './CustomTableControl';\nimport { ActionButtonComponent } from './CustomTableStyle';\n\nconst TableCellWrapper = styled(Table.Cell)`\n    padding: 2px;\n`;\n\nconst SwitchWrapper = styled.div`\n    display: flex;\n\n    .toggle_switch {\n        padding: 0;\n        margin-right: 10px;\n    }\n`;\n\nfunction CustomTableRow(props) {\n    const {\n        row,\n        columns,\n        rowActions,\n        headerMapping,\n        handleToggleActionClick,\n        handleEditActionClick,\n        handleCloneActionClick,\n        handleDeleteActionClick,\n    } = props;\n\n    const getCustomCell = (customRow, header) =>\n        React.createElement(CustomTableControl, {\n            serviceName: row.serviceName,\n            field: header.field,\n            row: customRow,\n            fileName: header.customCell.src,\n            type: header.customCell.type,\n        });\n\n    const rowActionsPrimaryButton = useCallback(\n        (selectedRow) => (\n            <TableCellWrapper data-column=\"actions\" key={selectedRow.id}>\n                <ButtonGroup>\n                    {rowActions.includes('edit') && (\n                        <Tooltip content={_('Edit')}>\n                            <ActionButtonComponent\n                                appearance=\"flat\"\n                                icon={<Pencil screenReaderText={null} size={1} />}\n                                onClick={() => handleEditActionClick(selectedRow)}\n                                className=\"editBtn\"\n                            />\n                        </Tooltip>\n                    )}\n                    {rowActions.includes('clone') && (\n                        <Tooltip content={_('Clone')}>\n                            <ActionButtonComponent\n                                appearance=\"flat\"\n                                icon={<Clone screenReaderText={null} size={1} />}\n                                onClick={() => handleCloneActionClick(selectedRow)}\n                                className=\"cloneBtn\"\n                            />\n                        </Tooltip>\n                    )}\n                    {rowActions.includes('delete') && (\n                        <Tooltip content={_('Delete')}>\n                            <ActionButtonComponent\n                                appearance=\"flat\"\n                                icon={<Trash screenReaderText={null} size={1} />}\n                                onClick={() => handleDeleteActionClick(selectedRow)}\n                                className=\"deleteBtn\"\n                            />\n                        </Tooltip>\n                    )}\n                </ButtonGroup>\n            </TableCellWrapper>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [handleEditActionClick, handleCloneActionClick, handleDeleteActionClick]\n    );\n\n    let statusContent = 'Enabled';\n    // eslint-disable-next-line no-underscore-dangle\n    if (row.__toggleShowSpinner) {\n        statusContent = <WaitSpinner />;\n    } else if (row.disabled) {\n        statusContent =\n            headerMapping?.disabled && headerMapping.disabled[row.disabled]\n                ? headerMapping.disabled[row.disabled]\n                : 'Disabled';\n    }\n\n    // Fix set of props are passed to Table.Row element\n    return (\n        <Table.Row // nosemgrep: typescript.react.security.audit.react-props-injection.react-props-injection, typescript.react.best-practice.react-props-spreading.react-props-spreading\n            key={row.id}\n            {...props}\n        >\n            {columns &&\n                columns.length &&\n                columns.map((header) => {\n                    let cellHTML = '';\n\n                    if (header.customCell && header.customCell.src) {\n                        cellHTML = (\n                            <Table.Cell data-column={header.field} key={header.field}>\n                                {getCustomCell(row, header)}\n                            </Table.Cell>\n                        );\n                    } else if (header.field === 'disabled') {\n                        cellHTML = (\n                            <Table.Cell data-column={header.field} key={header.field}>\n                                <SwitchWrapper>\n                                    <Switch\n                                        key={row.name}\n                                        value={row.disabled}\n                                        onClick={() => handleToggleActionClick(row)}\n                                        selected={!row.disabled}\n                                        // eslint-disable-next-line no-underscore-dangle\n                                        disabled={row.__toggleShowSpinner}\n                                        appearance=\"toggle\"\n                                        className=\"toggle_switch\"\n                                        selectedLabel={_(\n                                            headerMapping?.disabled?.false\n                                                ? headerMapping.disabled.false\n                                                : 'Enabled'\n                                        )}\n                                        unselectedLabel={_(\n                                            headerMapping?.disabled?.true\n                                                ? headerMapping.disabled.true\n                                                : 'Disabled'\n                                        )}\n                                    />\n                                    <span data-test=\"status\">{statusContent}</span>\n                                </SwitchWrapper>\n                            </Table.Cell>\n                        );\n                    } else if (header.field === 'actions') {\n                        cellHTML = rowActionsPrimaryButton(row);\n                    } else {\n                        cellHTML = (\n                            <Table.Cell\n                                style={{ wordBreak: 'break-word' }}\n                                data-column={header.field}\n                                key={header.field}\n                            >\n                                {headerMapping[header.field] &&\n                                Object.prototype.hasOwnProperty.call(\n                                    headerMapping[header.field],\n                                    row[header.field]\n                                )\n                                    ? headerMapping[header.field][row[header.field]]\n                                    : row[header.field]}\n                            </Table.Cell>\n                        );\n                    }\n                    return cellHTML;\n                })}\n        </Table.Row>\n    );\n}\n\nCustomTableRow.propTypes = {\n    row: PropTypes.any,\n    columns: PropTypes.array,\n    rowActions: PropTypes.array,\n    headerMapping: PropTypes.object,\n    handleToggleActionClick: PropTypes.func,\n    handleEditActionClick: PropTypes.func,\n    handleCloneActionClick: PropTypes.func,\n    handleDeleteActionClick: PropTypes.func,\n};\n\nexport default React.memo(CustomTableRow);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '@splunk/react-ui/Modal';\nimport Message from '@splunk/react-ui/Message';\nimport styled from 'styled-components';\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';\nimport update from 'immutability-helper';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport { generateToast } from '../util/util';\nimport { StyledButton } from '../pages/EntryPageStyle';\n\nimport { axiosCallWrapper } from '../util/axiosCallWrapper';\nimport TableContext from '../context/TableContext';\nimport { parseErrorMsg, getFormattedMessage } from '../util/messageUtil';\nimport { PAGE_INPUT } from '../constants/pages';\n\nconst ModalWrapper = styled(Modal)`\n    width: 800px;\n`;\n\nclass DeleteModal extends Component {\n    static contextType = TableContext;\n\n    constructor(props) {\n        super(props);\n        this.state = { isDeleting: false, ErrorMsg: '' };\n    }\n\n    handleRequestClose = () => {\n        // set ErrorMsg to empty string on close or cancel\n        // so that on again open of modal it does not show the same ErrorMsg\n        this.state.ErrorMsg = '';\n        this.props.handleRequestClose();\n    };\n\n    handleDelete = () => {\n        this.setState(\n            (prevState) => ({ ...prevState, isDeleting: true, ErrorMsg: '' }),\n            () => {\n                axiosCallWrapper({\n                    serviceName: `${this.props.serviceName}/${encodeURIComponent(\n                        this.props.stanzaName\n                    )}`,\n                    customHeaders: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                    method: 'delete',\n                    handleError: false,\n                })\n                    .catch((err) => {\n                        const errorSubmitMsg = parseErrorMsg(err);\n                        this.setState({ ErrorMsg: errorSubmitMsg, isDeleting: false });\n                        return Promise.reject(err);\n                    })\n                    .then(() => {\n                        this.context.setRowData(\n                            update(this.context.rowData, {\n                                [this.props.serviceName]: { $unset: [this.props.stanzaName] },\n                            })\n                        );\n                        this.setState({ isDeleting: false });\n                        this.handleRequestClose();\n                        generateToast(`Deleted \"${this.props.stanzaName}\"`, 'success');\n                    });\n            }\n        );\n    };\n\n    // Display error message\n    generateErrorMessage = () => {\n        if (this.state.ErrorMsg) {\n            return (\n                <div>\n                    <Message appearance=\"fill\" type=\"error\">\n                        {this.state.ErrorMsg}\n                    </Message>\n                </div>\n            );\n        }\n        return null;\n    };\n\n    render() {\n        let deleteMsg;\n        if (this.props.page === PAGE_INPUT) {\n            deleteMsg = getFormattedMessage(103, [this.props.stanzaName]);\n        } else {\n            deleteMsg = getFormattedMessage(102, [this.props.stanzaName]);\n        }\n        return (\n            <ModalWrapper open={this.props.open}>\n                <Modal.Header\n                    title={getFormattedMessage(101)}\n                    onRequestClose={this.handleRequestClose}\n                />\n                <Modal.Body className=\"deletePrompt\">\n                    {this.generateErrorMessage()}\n                    <p>{deleteMsg}</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <StyledButton\n                        appearance=\"secondary\"\n                        onClick={this.handleRequestClose}\n                        label={_('Cancel')}\n                        disabled={this.state.isDeleting}\n                    />\n                    <StyledButton\n                        appearance=\"primary\"\n                        label={this.state.isDeleting ? <WaitSpinner /> : _('Delete')}\n                        onClick={this.handleDelete}\n                        disabled={this.state.isDeleting}\n                    />\n                </Modal.Footer>\n            </ModalWrapper>\n        );\n    }\n}\n\nDeleteModal.propTypes = {\n    page: PropTypes.string.isRequired,\n    open: PropTypes.bool,\n    handleRequestClose: PropTypes.func,\n    serviceName: PropTypes.string,\n    stanzaName: PropTypes.string,\n};\n\nexport default DeleteModal;\n","import React, { useCallback, useEffect, memo, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Table from '@splunk/react-ui/Table';\nimport { _ } from '@splunk/ui-utils/i18n';\n\nimport useQuery from '../../hooks/useQuery';\nimport { MODE_CLONE, MODE_EDIT } from '../../constants/modes';\nimport { PAGE_INPUT } from '../../constants/pages';\nimport { getUnifiedConfigs } from '../../util/util';\nimport { getExpansionRow } from './TableExpansionRow';\nimport { STYLE_MODAL, STYLE_PAGE } from '../../constants/dialogStyles';\nimport CustomTableRow from './CustomTableRow';\nimport EntityModal from '../EntityModal';\nimport DeleteModal from '../DeleteModal';\nimport TableContext from '../../context/TableContext';\nimport { NoRecordsDiv } from './CustomTableStyle';\n\nfunction CustomTable({\n    page,\n    serviceName,\n    data,\n    handleToggleActionClick,\n    handleOpenPageStyleDialog,\n    handleSort,\n    sortDir,\n    sortKey,\n    tableConfig,\n}) {\n    const unifiedConfigs = getUnifiedConfigs();\n    const [entityModal, setEntityModal] = useState({ open: false });\n    const [deleteModal, setDeleteModal] = useState({ open: false });\n\n    const { rowData } = useContext(TableContext);\n\n    const { moreInfo, header: headers, actions } = tableConfig;\n\n    const headerMapping = {};\n    headers.forEach((x) => {\n        headerMapping[x.field] = x.mapping;\n    });\n\n    const serviceToStyleMap = {};\n    if (page === PAGE_INPUT) {\n        unifiedConfigs.pages.inputs.services.forEach((x) => {\n            serviceToStyleMap[x.name] = x.style === STYLE_PAGE ? STYLE_PAGE : STYLE_MODAL;\n        });\n    } else {\n        unifiedConfigs.pages.configuration.tabs.forEach((x) => {\n            serviceToStyleMap[x.name] = x.style === STYLE_PAGE ? STYLE_PAGE : STYLE_MODAL;\n        });\n    }\n\n    const query = useQuery();\n\n    // Run only once when component is mounted to load component based on initial query params\n    // and when query params are updated\n    useEffect(() => {\n        // Only run when tab matches serviceName or if in input page where serviceName is undefined\n        if (query && (query.get('tab') === serviceName || typeof serviceName === 'undefined')) {\n            // Open modal when record is available in query params and modal is not open\n            if (query.get('record') && !entityModal.open) {\n                const serviceKey = Object.keys(rowData).find(\n                    (x) => typeof rowData[x][query.get('record')] !== 'undefined'\n                );\n                if (serviceKey) {\n                    const row = rowData[serviceKey][query.get('record')];\n                    setEntityModal({\n                        ...entityModal,\n                        open: true,\n                        serviceName: row.serviceName,\n                        stanzaName: row.name,\n                        mode: MODE_EDIT,\n                    });\n                }\n            } else if (!query.get('record') && entityModal.open) {\n                // Close modal if record query param is not available and modal is open\n                // NOTE: This should only be executed in case of MODE_EDIT which is handled by\n                // useEffect dependency which will only be changed in case of editing entity\n                setEntityModal({ ...entityModal, open: false });\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleEntityClose = () => {\n        setEntityModal({ ...entityModal, open: false });\n    };\n\n    const handleEditActionClick = useCallback(\n        (selectedRow) => {\n            if (serviceToStyleMap[selectedRow.serviceName] === STYLE_PAGE) {\n                handleOpenPageStyleDialog(selectedRow, MODE_EDIT);\n            } else {\n                setEntityModal({\n                    ...entityModal,\n                    open: true,\n                    serviceName: selectedRow.serviceName,\n                    stanzaName: selectedRow.name,\n                    mode: MODE_EDIT,\n                });\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [entityModal]\n    );\n\n    const handleDeleteClose = () => {\n        setDeleteModal({ ...deleteModal, open: false });\n    };\n\n    const handleCloneActionClick = useCallback(\n        (selectedRow) => {\n            if (serviceToStyleMap[selectedRow.serviceName] === STYLE_PAGE) {\n                handleOpenPageStyleDialog(selectedRow, MODE_CLONE);\n            } else {\n                setEntityModal({\n                    ...entityModal,\n                    open: true,\n                    serviceName: selectedRow.serviceName,\n                    stanzaName: selectedRow.name,\n                    mode: MODE_CLONE,\n                });\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [entityModal]\n    );\n\n    const handleDeleteActionClick = useCallback(\n        (selectedRow) => {\n            setDeleteModal({\n                ...deleteModal,\n                open: true,\n                stanzaName: selectedRow.name,\n                serviceName: selectedRow.serviceName,\n            });\n        },\n        [deleteModal]\n    );\n\n    const generateModalDialog = () => {\n        if (entityModal.open) {\n            let label;\n            if (page === 'inputs') {\n                const { services } = unifiedConfigs.pages.inputs;\n                label = services.find((x) => x.name === entityModal.serviceName)?.title;\n            } else if (page === 'configuration') {\n                const { tabs } = unifiedConfigs.pages.configuration;\n                label = tabs.find((x) => x.name === entityModal.serviceName)?.title;\n            }\n            return (\n                <EntityModal\n                    page={page}\n                    open={entityModal.open}\n                    handleRequestClose={handleEntityClose}\n                    serviceName={entityModal.serviceName}\n                    stanzaName={entityModal.stanzaName}\n                    mode={entityModal.mode}\n                    formLabel={\n                        entityModal.mode === MODE_CLONE ? _(`Clone `) + label : _(`Update `) + label\n                    }\n                />\n            );\n        }\n        return null;\n    };\n\n    const generateDeleteDialog = () => (\n        <DeleteModal\n            page={page}\n            open={deleteModal.open}\n            handleRequestClose={handleDeleteClose}\n            serviceName={deleteModal.serviceName}\n            stanzaName={deleteModal.stanzaName}\n        />\n    );\n\n    const generateColumns = () => {\n        const column = [];\n        if (headers && headers.length) {\n            headers.forEach((item) => {\n                column.push({\n                    ...item,\n                    sortKey: item.field || null,\n                });\n            });\n        }\n\n        if (actions && actions.length) {\n            column.push({ label: 'Actions', field: 'actions', sortKey: '' });\n        }\n\n        return column;\n    };\n\n    const columns = generateColumns();\n\n    const getTableHeaderCell = useCallback(\n        () => (\n            <Table.Head>\n                {columns &&\n                    columns.length &&\n                    columns.map((headData) => (\n                        <Table.HeadCell\n                            key={headData.field}\n                            onSort={headData.sortKey ? handleSort : null}\n                            sortKey={headData.sortKey ? headData.sortKey : null}\n                            sortDir={\n                                headData.sortKey && headData.sortKey === sortKey ? sortDir : 'none'\n                            }\n                        >\n                            {headData.label}\n                        </Table.HeadCell>\n                    ))}\n            </Table.Head>\n        ),\n        [columns, handleSort, sortDir, sortKey]\n    );\n\n    const getTableBody = () => (\n        <Table.Body>\n            {data &&\n                data.length &&\n                data.map((row) => (\n                    <CustomTableRow // nosemgrep: typescript.react.best-practice.react-props-spreading.react-props-spreading\n                        key={row.id}\n                        row={row}\n                        columns={columns}\n                        rowActions={actions}\n                        headerMapping={headerMapping}\n                        {...{\n                            handleEditActionClick,\n                            handleCloneActionClick,\n                            handleDeleteActionClick,\n                        }}\n                        handleToggleActionClick={handleToggleActionClick}\n                        {...(moreInfo\n                            ? {\n                                  expansionRow: getExpansionRow(columns.length, row, moreInfo),\n                              }\n                            : {})}\n                    />\n                ))}\n        </Table.Body>\n    );\n\n    return (\n        <>\n            {columns && columns.length && (\n                <Table // nosemgrep: typescript.react.best-practice.react-props-spreading.react-props-spreading\n                    stripeRows\n                    headType=\"docked\"\n                    {...(moreInfo ? { rowExpansion: 'single' } : {})}\n                >\n                    {getTableHeaderCell()}\n                    {getTableBody()}\n                </Table>\n            )}\n            {!data.length ? <NoRecordsDiv>No records found</NoRecordsDiv> : null}\n            {generateModalDialog()}\n            {generateDeleteDialog()}\n        </>\n    );\n}\n\nCustomTable.propTypes = {\n    page: PropTypes.string.isRequired,\n    serviceName: PropTypes.string,\n    data: PropTypes.array.isRequired,\n    handleToggleActionClick: PropTypes.func,\n    handleOpenPageStyleDialog: PropTypes.func,\n    handleSort: PropTypes.func,\n    sortDir: PropTypes.string,\n    sortKey: PropTypes.string,\n    tableConfig: PropTypes.object.isRequired,\n};\n\nexport default memo(CustomTable);\n","import React, { useContext } from 'react';\nimport Text from '@splunk/react-ui/Text';\nimport PropTypes from 'prop-types';\nimport TableContext from '../../context/TableContext';\n\nfunction TableFilter(props) {\n    const { searchText } = useContext(TableContext);\n\n    return <Text appearance=\"search\" onChange={props.handleChange} value={searchText} />;\n}\n\nTableFilter.propTypes = {\n    handleChange: PropTypes.func,\n};\n\nexport default TableFilter;\n","import React from 'react';\nimport Modal from '@splunk/react-ui/Modal';\nimport Message from '@splunk/react-ui/Message';\nimport styled from 'styled-components';\nimport { StyledButton } from '../pages/EntryPageStyle';\n\nconst ModalWrapper = styled(Modal)`\n    width: 600px;\n`;\n\ninterface AcceptModalProps {\n    title: string;\n    open: boolean;\n    handleRequestClose: (accepted: boolean) => void;\n    message?: string;\n    declineBtnLabel?: string;\n    acceptBtnLabel?: string;\n}\n\nfunction AcceptModal(props: AcceptModalProps) {\n    return (\n        <ModalWrapper open={props.open}>\n            <Modal.Header\n                onRequestClose={() => props.handleRequestClose(false)}\n                title={props.title}\n            />\n            <Modal.Body>\n                <Message appearance=\"fill\" type=\"warning\">\n                    {props.message}\n                </Message>\n            </Modal.Body>\n            <Modal.Footer>\n                <StyledButton\n                    appearance=\"primary\"\n                    onClick={() => props.handleRequestClose(false)}\n                    label={props.declineBtnLabel || 'Cancel'}\n                />\n                <StyledButton\n                    appearance=\"primary\"\n                    onClick={() => props.handleRequestClose(true)}\n                    label={props.acceptBtnLabel || 'OK'}\n                />\n            </Modal.Footer>\n        </ModalWrapper>\n    );\n}\n\nexport default AcceptModal;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '@splunk/react-ui/Button';\nimport { variables } from '@splunk/themes';\nimport AcceptModal from './AcceptModal';\n\nexport interface InputRowData {\n    account: string;\n    disabled: boolean;\n    host: string;\n    host_resolved: string;\n    index: string;\n    interval: string;\n    name: string;\n    serviceName: string;\n    serviceTitle: string;\n    __toggleShowSpinner: boolean;\n}\n\ninterface DisableAllStatusButtonProps {\n    displayActionBtnAllRows: boolean;\n    dataRows: InputRowData[];\n    changeToggleStatus: (row: InputRowData) => void;\n}\n\nconst InteractAllActionButton = styled(Button)`\n    max-width: fit-content;\n    font-size: ${variables.fontSize};\n`;\n\nexport function InteractAllStatusButtons(props: DisableAllStatusButtonProps) {\n    const [tryInteract, setTryInteract] = useState(false);\n    const [isDisabling, setIsDisabling] = useState(false);\n\n    const handleInteractWithAllRowsStatus = (rowsData: InputRowData[]) => {\n        rowsData.forEach((row) => {\n            if (row.disabled !== isDisabling) {\n                props.changeToggleStatus(row);\n            }\n        });\n    };\n\n    const handleAcceptModal = (e: boolean) => {\n        setTryInteract(false);\n        if (e) {\n            handleInteractWithAllRowsStatus(props.dataRows);\n        }\n    };\n\n    return props.displayActionBtnAllRows ? (\n        <div>\n            <InteractAllActionButton\n                data-testid=\"enableAllBtn\"\n                onClick={() => {\n                    setTryInteract(true);\n                    setIsDisabling(false);\n                }}\n                role=\"button\"\n                disabled={props.dataRows.length < 1}\n            >\n                Enable all\n            </InteractAllActionButton>\n            <InteractAllActionButton\n                data-testid=\"disableAllBtn\"\n                onClick={() => {\n                    setTryInteract(true);\n                    setIsDisabling(true);\n                }}\n                role=\"button\"\n                disabled={props.dataRows.length < 1}\n            >\n                Disable all\n            </InteractAllActionButton>\n            {tryInteract && (\n                <AcceptModal\n                    message={`Do you want to ${\n                        isDisabling ? 'disable' : 'enable'\n                    } all? It may take a while.`}\n                    open={tryInteract}\n                    handleRequestClose={handleAcceptModal}\n                    title={isDisabling ? 'Disable all' : 'Enable all'}\n                    declineBtnLabel=\"No\"\n                    acceptBtnLabel=\"Yes\"\n                />\n            )}\n        </div>\n    ) : null;\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from '@splunk/react-ui/Select';\nimport Paginator from '@splunk/react-ui/Paginator';\nimport styled from 'styled-components';\nimport { _ } from '@splunk/ui-utils/i18n';\n\nimport TableFilter from './TableFilter';\nimport TableContext from '../../context/TableContext';\nimport { TableSelectBoxWrapper } from './CustomTableStyle';\nimport { PAGE_INPUT } from '../../constants/pages';\nimport { StyledButton } from '../../pages/EntryPageStyle';\nimport { InteractAllStatusButtons } from '../InteractAllStatusButton';\n\nconst TableHeaderWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    border-top: 1px solid #ccc;\n    padding-top: 5px;\n    margin-bottom: 5px;\n`;\n\nconst TableFilterWrapper = styled.div`\n    max-width: 300px;\n    width: 100%;\n`;\n\nfunction TableHeader({\n    page,\n    isTabs,\n    services,\n    totalElement,\n    handleRequestModalOpen,\n    allFilteredData,\n    changeToggleStatus,\n    displayActionBtnAllRows,\n}) {\n    const {\n        pageSize,\n        currentPage,\n        setCurrentPage,\n        setPageSize,\n        searchType,\n        setSearchType,\n        setSearchText,\n    } = useContext(TableContext);\n\n    const itemLabel = page === PAGE_INPUT ? 'Input' : 'Item';\n\n    const getSearchTypeDropdown = () => {\n        if (services.length < 2) {\n            return null;\n        }\n        let arr = [];\n        arr = services.map((service) => (\n            <Select.Option key={service.name} label={service.title} value={service.name} />\n        ));\n\n        arr.unshift(<Select.Option key=\"all\" label={_('All')} value=\"all\" />);\n        return (\n            <Select\n                value={searchType}\n                className=\"dropdownInput\"\n                onChange={(e, { value }) => {\n                    setCurrentPage(0);\n                    setSearchType(value);\n                }}\n            >\n                {arr}\n            </Select>\n        );\n    };\n\n    return (\n        <TableHeaderWrapper>\n            <div>\n                <span className=\"inputNumber\">\n                    {totalElement}\n                    {totalElement > 1 ? _(` ${itemLabel}s`) : _(` ${itemLabel}`)}\n                </span>\n                {page === PAGE_INPUT ? (\n                    <TableSelectBoxWrapper>\n                        <Select\n                            value={pageSize}\n                            className=\"dropdownPage\"\n                            onChange={(e, { value }) => {\n                                setCurrentPage(0);\n                                setPageSize(value);\n                            }}\n                        >\n                            <Select.Option key=\"10\" label={_('10 Per Page')} value={10} />\n                            <Select.Option key=\"25\" label={_('25 Per Page')} value={25} />\n                            <Select.Option key=\"50\" label={_('50 Per Page')} value={50} />\n                        </Select>\n                        {!isTabs && getSearchTypeDropdown()}\n                    </TableSelectBoxWrapper>\n                ) : null}\n            </div>\n            <TableFilterWrapper>\n                <TableFilter\n                    handleChange={(e, { value }) => {\n                        setCurrentPage(0);\n                        setSearchText(value);\n                    }}\n                />\n            </TableFilterWrapper>\n            <div>\n                <Paginator\n                    onChange={(e, { page: pageNumber }) => setCurrentPage(pageNumber - 1)}\n                    current={currentPage + 1}\n                    alwaysShowLastPageLink\n                    totalPages={Math.ceil(totalElement / pageSize)}\n                />\n                {isTabs && (\n                    <StyledButton\n                        label={_('Add')}\n                        appearance=\"primary\"\n                        onClick={handleRequestModalOpen}\n                    />\n                )}\n            </div>\n            <InteractAllStatusButtons\n                displayActionBtnAllRows={displayActionBtnAllRows}\n                dataRows={allFilteredData}\n                changeToggleStatus={changeToggleStatus}\n            />\n        </TableHeaderWrapper>\n    );\n}\n\nTableHeader.propTypes = {\n    page: PropTypes.string,\n    services: PropTypes.array,\n    totalElement: PropTypes.number,\n    isTabs: PropTypes.bool,\n    handleRequestModalOpen: PropTypes.func,\n    displayActionBtnAllRows: PropTypes.bool,\n    changeToggleStatus: PropTypes.func,\n    allFilteredData: PropTypes.array,\n};\n\nexport default TableHeader;\n","import React, { useState, useContext, useEffect, memo } from 'react';\nimport update from 'immutability-helper';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nimport { WaitSpinnerWrapper } from './CustomTableStyle';\nimport { axiosCallWrapper } from '../../util/axiosCallWrapper';\nimport { getUnifiedConfigs, generateToast, isTrue } from '../../util/util';\nimport CustomTable from './CustomTable';\nimport TableHeader from './TableHeader';\nimport TableContext from '../../context/TableContext';\nimport { PAGE_INPUT } from '../../constants/pages';\n\nfunction TableWrapper({\n    page,\n    serviceName,\n    handleRequestModalOpen,\n    handleOpenPageStyleDialog,\n    displayActionBtnAllRows,\n}) {\n    const [sortKey, setSortKey] = useState('name');\n    const [sortDir, setSortDir] = useState('asc');\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const { rowData, setRowData, pageSize, currentPage, searchText, searchType } =\n        useContext(TableContext);\n\n    const unifiedConfigs = getUnifiedConfigs();\n\n    const services =\n        page === PAGE_INPUT\n            ? unifiedConfigs.pages.inputs.services\n            : unifiedConfigs.pages.configuration.tabs.filter((x) => x.name === serviceName);\n\n    const tableConfig =\n        page === PAGE_INPUT\n            ? unifiedConfigs.pages.inputs.table ||\n              services.find((x) => x.name === serviceName).table\n            : unifiedConfigs.pages.configuration.tabs.find((x) => x.name === serviceName).table;\n\n    const { moreInfo } = tableConfig;\n    const headers = tableConfig.header;\n    const isTabs = !!serviceName;\n\n    const modifyAPIResponse = (data) => {\n        const obj = {};\n        services.forEach((service, index) => {\n            if (service && service.name && data) {\n                const tmpObj = {};\n                data[index].forEach((val) => {\n                    tmpObj[val.name] = {\n                        ...val.content,\n                        id: val.id,\n                        name: val.name,\n                        serviceName: service.name,\n                        serviceTitle: service.title || '',\n                    };\n                });\n                obj[service.name] = tmpObj;\n            }\n        });\n        setRowData(obj);\n        setLoading(false);\n    };\n\n    const fetchInputs = () => {\n        const requests = [];\n        services.forEach((service) => {\n            requests.push(\n                axiosCallWrapper({\n                    serviceName: service.name,\n                    params: { count: -1 },\n                })\n            );\n        });\n        axios\n            .all(requests)\n            // eslint-disable-next-line no-shadow\n            .catch((error) => {\n                let message = '';\n                let errorCode = '';\n                if (error.response) {\n                    // The request was made and the server responded with a status code\n                    message = `Error received from server: ${error.response.data.messages[0].text}`;\n                    errorCode = page === PAGE_INPUT ? 'ERR0001' : 'ERR0002';\n                } else if (error.request) {\n                    // The request was made but no response was received\n                    message = `No response received while making request to ${page} services`;\n                    errorCode = 'ERR0003';\n                } else {\n                    // Something happened in setting up the request that triggered an Error\n                    message = `Error making request to ${page} services`;\n                    errorCode = 'ERR0004';\n                }\n                // eslint-disable-next-line no-param-reassign\n                error.uccErrorCode = errorCode;\n                generateToast(message);\n                setLoading(false);\n                setError(error);\n                return Promise.reject(error);\n            })\n            .then((response) => {\n                modifyAPIResponse(response.map((res) => res.data.entry));\n            });\n    };\n\n    useEffect(() => {\n        fetchInputs();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    /**\n     *\n     * @param row {Object} row\n     */\n    const changeToggleStatus = (row) => {\n        setRowData((currentRowData) =>\n            update(currentRowData, {\n                [row.serviceName]: {\n                    [row.name]: {\n                        __toggleShowSpinner: { $set: true },\n                    },\n                },\n            })\n        );\n        const body = new URLSearchParams();\n        body.append('disabled', !row.disabled);\n        axiosCallWrapper({\n            serviceName: `${row.serviceName}/${row.name}`,\n            body,\n            customHeaders: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            method: 'post',\n            handleError: true,\n            callbackOnError: () => {\n                setRowData((currentRowData) =>\n                    update(currentRowData, {\n                        [row.serviceName]: {\n                            [row.name]: {\n                                __toggleShowSpinner: { $set: false },\n                            },\n                        },\n                    })\n                );\n            },\n        }).then((response) => {\n            setRowData((currentRowData) =>\n                update(currentRowData, {\n                    [row.serviceName]: {\n                        [row.name]: {\n                            // ADDON-39125: isTrue required if splunktaucclib resthandlers' super() is not invoked\n                            disabled: { $set: isTrue(response.data.entry[0].content.disabled) },\n                            __toggleShowSpinner: { $set: false },\n                        },\n                    },\n                })\n            );\n        });\n    };\n\n    const handleSort = (e, val) => {\n        const prevSortKey = sortKey;\n        const prevSortDir = prevSortKey === val.sortKey ? sortDir : 'none';\n        const nextSortDir = prevSortDir === 'asc' ? 'desc' : 'asc';\n        setSortDir(nextSortDir);\n        setSortKey(val.sortKey);\n    };\n\n    /**\n     *\n     * @param {Array} data\n     * This function will iterate an arrray and match each key-value with the searchText\n     * It will return a new array which will match with searchText\n     */\n    const findByMatchingValue = (data) => {\n        const arr = [];\n        const tableFields = [];\n\n        headers.forEach((headData) => {\n            tableFields.push(headData.field);\n        });\n        moreInfo?.forEach((moreInfoData) => {\n            tableFields.push(moreInfoData.field);\n        });\n\n        Object.keys(data).forEach((v) => {\n            let found = false;\n            Object.keys(data[v]).forEach((vv) => {\n                if (\n                    tableFields.includes(vv) &&\n                    typeof data[v][vv] === 'string' &&\n                    data[v][vv].toLowerCase().includes(searchText.toLowerCase().trim()) &&\n                    !found\n                ) {\n                    arr.push(data[v]);\n                    found = true;\n                }\n            });\n        });\n        return arr;\n    };\n\n    const getRowData = () => {\n        let arr = [];\n        if (searchType === 'all') {\n            Object.keys(rowData).forEach((key) => {\n                let newArr = [];\n                if (searchText && searchText.length) {\n                    newArr = findByMatchingValue(rowData[key]);\n                } else {\n                    newArr = Object.keys(rowData[key]).map((val) => rowData[key][val]);\n                }\n                arr = arr.concat(newArr);\n            });\n        } else {\n            arr = findByMatchingValue(rowData[searchType]);\n        }\n\n        // For Inputs page, filter the data when tab change\n        if (isTabs) {\n            arr = arr.filter((v) => v.serviceName === serviceName);\n        }\n\n        // Sort the array based on the sort value\n        const sortedArr = arr.sort((rowA, rowB) => {\n            if (sortDir === 'asc') {\n                const rowAValue = rowA[sortKey] === undefined ? '' : rowA[sortKey];\n                const rowBValue = rowB[sortKey] === undefined ? '' : rowB[sortKey];\n                return rowAValue > rowBValue ? 1 : -1;\n            }\n            if (sortDir === 'desc') {\n                const rowAValue = rowA[sortKey] === undefined ? '' : rowA[sortKey];\n                const rowBValue = rowB[sortKey] === undefined ? '' : rowB[sortKey];\n                return rowBValue > rowAValue ? 1 : -1;\n            }\n            return 0;\n        });\n\n        let updatedArr = sortedArr.slice(currentPage * pageSize, (currentPage + 1) * pageSize);\n\n        if (currentPage > 0 && !updatedArr.length) {\n            updatedArr = sortedArr.slice((currentPage - 1) * pageSize, pageSize);\n        }\n\n        return [updatedArr, arr.length, arr];\n    };\n\n    if (error?.uccErrorCode) {\n        throw error;\n    }\n\n    if (loading) {\n        return <WaitSpinnerWrapper size=\"medium\" />;\n    }\n\n    const [filteredData, totalElement, allFilteredData] = getRowData();\n    return (\n        <>\n            <TableHeader\n                page={page}\n                services={services}\n                totalElement={totalElement}\n                handleRequestModalOpen={handleRequestModalOpen}\n                changeToggleStatus={changeToggleStatus}\n                isTabs={isTabs}\n                allFilteredData={allFilteredData}\n                displayActionBtnAllRows={displayActionBtnAllRows}\n            />\n            <CustomTable\n                page={page}\n                serviceName={serviceName}\n                data={filteredData}\n                handleToggleActionClick={(row) => changeToggleStatus(row)}\n                handleSort={handleSort}\n                sortDir={sortDir}\n                sortKey={sortKey}\n                handleOpenPageStyleDialog={handleOpenPageStyleDialog}\n                tableConfig={tableConfig}\n                services={services}\n            />\n        </>\n    );\n}\n\nTableWrapper.propTypes = {\n    page: PropTypes.string,\n    serviceName: PropTypes.string,\n    handleRequestModalOpen: PropTypes.func,\n    handleOpenPageStyleDialog: PropTypes.func,\n    displayActionBtnAllRows: PropTypes.bool,\n};\n\nexport default memo(TableWrapper);\n","export const STYLE_PAGE = 'page';\nexport const STYLE_MODAL = 'modal';\n","export const MODE_CLONE = 'clone';\nexport const MODE_CREATE = 'create';\nexport const MODE_DELETE = 'delete';\nexport const MODE_EDIT = 'edit';\nexport const MODE_CONFIG = 'config';\n\nexport type Mode =\n    | typeof MODE_CLONE\n    | typeof MODE_CREATE\n    | typeof MODE_DELETE\n    | typeof MODE_EDIT\n    | typeof MODE_CONFIG;\n","import { getFormattedMessage } from '../util/messageUtil';\n\n// Regex of ipv4, email and date come from\n// https://github.com/aldeed/meteor-simple-schema/blob/4c1e2570b1055ad60e1e6540582b882f765fde13/simple-schema.js#L525\nexport const REGEX_IPV4 = /^(?:(?:[0-1]?\\d{1,2}|2[0-4]\\d|25[0-5])(?:\\.|$)){4}$/;\n\nexport const REGEX_EMAIL = // eslint-disable-next-line no-useless-escape\n    /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\n// CodeQL: This Regex will be executed at client side and to avoid regression we won't fix.\nexport const REGEX_URL =\n    /^(?:(?:https?|ftp|opc\\.tcp):\\/\\/)?(?:\\S+(?::\\S*)?@)?(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?_?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))?)(?::\\d{2,5})?(?:\\/[^\\s]*)?$/;\n\n// From https://github.com/moment/moment/blob/2.17.1/moment.js#L1980 moment.js is using regex below for checking ISO8601 date string\nexport const REGEX_DATE = // eslint-disable-next-line no-useless-escape\n    /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nexport const PREDEFINED_VALIDATORS_DICT = {\n    url: { regex: REGEX_URL, inputValueType: getFormattedMessage(111) },\n    email: { regex: REGEX_EMAIL, inputValueType: getFormattedMessage(112) },\n    ipv4: { regex: REGEX_IPV4, inputValueType: getFormattedMessage(113) },\n    date: { regex: REGEX_DATE, inputValueType: getFormattedMessage(114) },\n};\n","import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableContext = createContext({\n    rowData: {},\n    setRowData: () => {},\n});\n\nexport function TableContextProvider({ children }) {\n    const [rowData, setRowData] = useState({});\n    const [searchText, setSearchText] = useState('');\n    const [searchType, setSearchType] = useState('all');\n    const [pageSize, setPageSize] = useState(10);\n    const [currentPage, setCurrentPage] = useState(0);\n\n    return (\n        <TableContext.Provider\n            // eslint-disable-next-line react/jsx-no-constructed-context-values\n            value={{\n                rowData,\n                setRowData,\n                searchText,\n                setSearchText,\n                searchType,\n                setSearchType,\n                pageSize,\n                setPageSize,\n                currentPage,\n                setCurrentPage,\n            }}\n        >\n            {children}\n        </TableContext.Provider>\n    );\n}\n\nTableContextProvider.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nexport default TableContext;\n","import { useLocation } from 'react-router-dom';\n\n// A custom hook that builds on useLocation to parse the query string for you.\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default useQuery;\n","import styled from 'styled-components';\nimport { variables } from '@splunk/themes';\n\nexport const TitleComponent = styled.div.attrs({\n    className: 'pageTitle',\n})`\n    &.pageTitle {\n        font-size: ${variables.fontSizeXXLarge};\n        margin-bottom: 20px;\n    }\n`;\n\nexport const SubTitleComponent = styled.div.attrs({\n    className: 'pageSubtitle',\n})`\n    &.pageSubtitle {\n        font-size: ${variables.fontSize};\n        margin-bottom: 10px;\n    }\n`;\n\nexport const TableCaptionComponent = styled.div`\n    .table-caption-inner {\n        text-align: left;\n    }\n`;\n","import * as _ from 'lodash';\nimport { PREDEFINED_VALIDATORS_DICT } from '../constants/preDefinedRegex';\nimport { getFormattedMessage } from './messageUtil';\n\n/**\n * @typedef Error\n * @type {object}\n * @property {string} errorMsg\n * @property {string} errorField\n */\n\n/**\n * @typedef ValidatorBase\n * @type {object}\n * @property {string} type\n * @property {string} [errorField]\n * @property {string} [errorMsg]\n */\n\nconst parseFunctionRawStr = (rawStr) => {\n    let err;\n    let result;\n\n    try {\n        // eslint-disable-next-line no-eval\n        result = eval(`(${rawStr})`);\n    } catch (e) {\n        err = getFormattedMessage(11, rawStr);\n    }\n\n    return { err, result };\n};\n\n// Validate provided saveValidator function\nexport function SaveValidator(validatorFunc, formData) {\n    const { error, result } = parseFunctionRawStr(validatorFunc);\n    if (error) {\n        return { errorMsg: error };\n    }\n    const ret = result(formData);\n    if (typeof ret === 'string') {\n        return { errorMsg: ret };\n    }\n}\n\nconst parseNumberValidator = (range) => {\n    const isRangeLegal =\n        range.length === 2 && _.isNumber(range[0]) && _.isNumber(range[1]) && range[0] <= range[1];\n\n    const error = isRangeLegal ? undefined : getFormattedMessage(13, JSON.stringify(range));\n\n    return { error };\n};\n\nconst parseRegexRawStr = (rawStr) => {\n    let error;\n    let result;\n\n    try {\n        result = new RegExp(rawStr);\n    } catch (e) {\n        error = getFormattedMessage(12, rawStr);\n    }\n\n    return { error, result };\n};\n\nclass Validator {\n    constructor(entities) {\n        this.entities = entities;\n        this.isName = entities.find((e) => e.field === 'name');\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    static checkIsFieldHasInput = (attrValue) =>\n        attrValue !== undefined &&\n        attrValue !== null &&\n        (typeof attrValue === 'string' ? attrValue.trim() !== '' : true);\n\n    /**\n     * Validate the required field has value\n     * @param {string} field\n     * @param {string|number} label\n     * @param {string|number} [data]\n     * @returns {Error|false}\n     */\n    static RequiredValidator(field, label, data) {\n        if (!Validator.checkIsFieldHasInput(data)) {\n            return { errorField: field, errorMsg: getFormattedMessage(6, [label]) };\n        }\n        return false;\n    }\n\n    /**\n     * @typedef {ValidatorBase} StringValidatorOptions\n     * @property {number} minLength\n     * @property {number} maxLength\n     */\n\n    /**\n     * Validate the string length of field\n     * @param {string} field\n     * @param {string|number} label\n     * @param {StringValidatorOptions} validator\n     * @param {string} data\n     * @returns {Error|false}\n     */\n    static StringValidator(field, label, validator, data) {\n        if (Validator.checkIsFieldHasInput(data) && data.length > validator.maxLength) {\n            return {\n                errorField: field,\n                errorMsg: validator.errorMsg\n                    ? validator.errorMsg\n                    : getFormattedMessage(18, [label, validator.maxLength]),\n            };\n        }\n        if (Validator.checkIsFieldHasInput(data) && data.length < validator.minLength) {\n            return {\n                errorField: field,\n                errorMsg: validator.errorMsg\n                    ? validator.errorMsg\n                    : getFormattedMessage(17, [label, validator.minLength]),\n            };\n        }\n        return false;\n    }\n\n    /**\n     * @typedef {ValidatorBase} RegexValidatorOptions\n     * @property {string} pattern\n     */\n\n    /**\n     * Validate the field should match the provided Regex\n     * @param {string} field\n     * @param {string|number} label\n     * @param {RegexValidatorOptions} validator\n     * @param {string} [data]\n     * @returns {Error|false}\n     */\n    static RegexValidator(field, label, validator, data) {\n        const { error, result: regex } = parseRegexRawStr(validator.pattern);\n        if (error) {\n            return { errorField: field, errorMsg: error };\n        }\n        if (Validator.checkIsFieldHasInput(data) && !regex.test(data)) {\n            return {\n                errorField: field,\n                errorMsg: validator.errorMsg\n                    ? validator.errorMsg\n                    : getFormattedMessage(15, [label, validator.pattern]),\n            };\n        }\n        return false;\n    }\n\n    // Validate the custom component\n    static CustomValidator(validatorFunc, field, data) {\n        const ret = validatorFunc(field, data);\n        if (typeof ret === 'string') {\n            return { errorField: field, errorMsg: ret };\n        }\n        return false;\n    }\n\n    // Validate the field should match predefined Regexes\n    static PreDefinedRegexValidator(field, label, validator, data, pattern, inputValueType) {\n        const { error, result: regex } = parseRegexRawStr(pattern);\n        if (error) {\n            return { errorField: field, errorMsg: error };\n        }\n        if (Validator.checkIsFieldHasInput(data) && !regex.test(data)) {\n            return {\n                errorField: field,\n                errorMsg: validator.errorMsg\n                    ? validator.errorMsg\n                    : getFormattedMessage(19, [label, inputValueType]),\n            };\n        }\n        return false;\n    }\n\n    /**\n     * @typedef {ValidatorBase} NumberValidatorOptions\n     * @property {[number, number]} range\n     */\n\n    /**\n     * Validate the field should match the provided Regex\n     * @param {string} field\n     * @param {string|number} label\n     * @param {NumberValidatorOptions} validator\n     * @param {string|number} [data]\n     * @returns {Error|false}\n     */\n    // Validate the range of numeric field\n    static NumberValidator(field, label, validator, data) {\n        const { error } = parseNumberValidator(validator.range);\n        if (error) {\n            return { errorField: field, errorMsg: error };\n        }\n\n        const val = Number(data);\n        if (Number.isNaN(val)) {\n            return {\n                errorField: field,\n                errorMsg: validator.errorMsg\n                    ? validator.errorMsg\n                    : getFormattedMessage(16, [label]),\n            };\n        }\n        if (\n            (Validator.checkIsFieldHasInput(data) && val > validator.range[1]) ||\n            val < validator.range[0]\n        ) {\n            return {\n                errorField: field,\n                errorMsg: validator.errorMsg\n                    ? validator.errorMsg\n                    : getFormattedMessage(8, [label, validator.range[0], validator.range[1]]),\n            };\n        }\n        return false;\n    }\n\n    doValidation(data) {\n        if (this.isName) {\n            const targetValue = data.name;\n            const nameFieldLabel = this.isName.label;\n\n            if (typeof targetValue === 'undefined' || targetValue === '' || targetValue == null) {\n                return { errorField: 'name', errorMsg: getFormattedMessage(0, [nameFieldLabel]) };\n            }\n            if (!(typeof targetValue === 'string' || targetValue instanceof String)) {\n                return { errorField: 'name', errorMsg: getFormattedMessage(1, [nameFieldLabel]) };\n            }\n            if (\n                targetValue.startsWith('_') ||\n                targetValue === '.' ||\n                targetValue === '..' ||\n                targetValue.toLowerCase() === 'default'\n            ) {\n                return { errorField: 'name', errorMsg: getFormattedMessage(3, [nameFieldLabel]) };\n            }\n            const regexMetaCharacters = ['*', '\\\\', '[', ']', '(', ')', '?', ':'];\n            if (regexMetaCharacters.some((d) => targetValue.indexOf(d) > -1)) {\n                return { errorField: 'name', errorMsg: getFormattedMessage(3, [nameFieldLabel]) };\n            }\n\n            if (targetValue.length >= 1024) {\n                return { errorField: 'name', errorMsg: getFormattedMessage(22, [nameFieldLabel]) };\n            }\n        }\n\n        let ret;\n        let i;\n        let j;\n\n        for (i = 0; i < this.entities.length; i += 1) {\n            if (this.entities[i].required === true) {\n                ret = Validator.RequiredValidator(\n                    this.entities[i].field,\n                    this.entities[i].label,\n                    data[this.entities[i].field]\n                );\n                if (ret) {\n                    return ret;\n                }\n            }\n            if (data[this.entities[i].field] === '' || data[this.entities[i].field] === null) {\n                // eslint-disable-next-line no-continue\n                continue;\n            }\n\n            // Error handling for File Component, by checking field value to ##INVALID_FILE## (Emitting from FileInputComponent.jsx)\n            if (\n                this.entities[i].type === 'file' &&\n                data[this.entities[i].field] === '##INVALID_FILE##'\n            ) {\n                return {\n                    errorField: this.entities[i].field,\n                    errorMsg: getFormattedMessage(26),\n                };\n            }\n\n            if (this.entities[i].validators) {\n                for (j = 0; j < this.entities[i].validators.length; j += 1) {\n                    switch (this.entities[i].validators[j].type) {\n                        case 'string':\n                            ret = Validator.StringValidator(\n                                this.entities[i].field,\n                                this.entities[i].label,\n                                this.entities[i].validators[j],\n                                data[this.entities[i].field]\n                            );\n                            if (ret) {\n                                return ret;\n                            }\n                            break;\n                        case 'regex':\n                            ret = Validator.RegexValidator(\n                                this.entities[i].field,\n                                this.entities[i].label,\n                                this.entities[i].validators[j],\n                                data[this.entities[i].field]\n                            );\n                            if (ret) {\n                                return ret;\n                            }\n                            break;\n                        case 'number':\n                            ret = Validator.NumberValidator(\n                                this.entities[i].field,\n                                this.entities[i].label,\n                                this.entities[i].validators[j],\n                                data[this.entities[i].field]\n                            );\n                            if (ret) {\n                                return ret;\n                            }\n                            break;\n                        case 'url':\n                            ret = Validator.PreDefinedRegexValidator(\n                                this.entities[i].field,\n                                this.entities[i].label,\n                                this.entities[i].validators[j],\n                                data[this.entities[i].field],\n                                PREDEFINED_VALIDATORS_DICT.url.regex,\n                                PREDEFINED_VALIDATORS_DICT.url.inputValueType\n                            );\n                            if (ret) {\n                                return ret;\n                            }\n                            break;\n                        case 'date':\n                            ret = Validator.PreDefinedRegexValidator(\n                                this.entities[i].field,\n                                this.entities[i].label,\n                                this.entities[i].validators[j],\n                                data[this.entities[i].field],\n                                PREDEFINED_VALIDATORS_DICT.date.regex,\n                                PREDEFINED_VALIDATORS_DICT.date.inputValueType\n                            );\n                            if (ret) {\n                                return ret;\n                            }\n                            break;\n                        case 'email':\n                            ret = Validator.PreDefinedRegexValidator(\n                                this.entities[i].field,\n                                this.entities[i].label,\n                                this.entities[i].validators[j],\n                                data[this.entities[i].field],\n                                PREDEFINED_VALIDATORS_DICT.email.regex,\n                                PREDEFINED_VALIDATORS_DICT.email.inputValueType\n                            );\n                            if (ret) {\n                                return ret;\n                            }\n                            break;\n                        case 'ipv4':\n                            ret = Validator.PreDefinedRegexValidator(\n                                this.entities[i].field,\n                                this.entities[i].label,\n                                this.entities[i].validators[j],\n                                data[this.entities[i].field],\n                                PREDEFINED_VALIDATORS_DICT.ipv4.regex,\n                                PREDEFINED_VALIDATORS_DICT.ipv4.inputValueType\n                            );\n                            if (ret) {\n                                return ret;\n                            }\n                            break;\n                        case 'custom':\n                            ret = Validator.CustomValidator(\n                                this.entities[i].validators[j].validatorFunc,\n                                this.entities[i].field,\n                                data[this.entities[i].field]\n                            );\n                            if (ret) {\n                                return ret;\n                            }\n                            break;\n                        default:\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n\nexport default Validator;\n","import axios from 'axios';\nimport { CSRFToken, app } from '@splunk/splunk-utils/config';\nimport { createRESTURL } from '@splunk/splunk-utils/url';\nimport { generateEndPointUrl, generateToast } from './util';\n\n/**\n *\n * @param {Object} data The object containing required params for request\n * @param {string} data.serviceName service name which is input name or tab name based on the page\n * @param {string} data.endpointUrl rest endpoint path\n * @param {object} data.params object with params as key value pairs\n * @param {object} data.body object with body as key value pairs for post request\n * @param {object} data.customHeaders extra headers as key value pair\n * @param {string} data.method rest method type\n * @param {string} data.handleError whether or not show toast notifications on failure\n * @param {string} data.callbackOnError callback function to execute after handling error. Only executed when handleError is set to true\n * @returns\n */\nconst axiosCallWrapper = ({\n    serviceName,\n    endpointUrl,\n    params,\n    body,\n    cancelToken,\n    customHeaders = {},\n    method = 'get',\n    handleError = false,\n    callbackOnError = () => {},\n}) => {\n    const endpoint = serviceName ? generateEndPointUrl(serviceName) : endpointUrl;\n    const appData = {\n        app,\n        owner: 'nobody',\n    };\n    const baseHeaders = {\n        'X-Splunk-Form-Key': CSRFToken,\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/json',\n    };\n    const headers = Object.assign(baseHeaders, customHeaders);\n    const url = createRESTURL(endpoint, appData);\n\n    let newParams = { output_mode: 'json' };\n    if (params) {\n        newParams = { ...newParams, ...params };\n    }\n\n    const options = {\n        params: newParams,\n        method,\n        url,\n        credentials: 'include',\n        headers,\n        cancelToken,\n    };\n\n    if (method === 'post') {\n        options.data = body;\n    }\n\n    return handleError\n        ? axios(options).catch((error) => {\n              let message = '';\n              if (axios.isCancel(error)) {\n                  return Promise.reject(error);\n              }\n              if (error.response) {\n                  // The request was made and the server responded with a status code\n                  message = `Error response received from server: ${error.response.data.messages[0].text}`;\n              } else if (error.request) {\n                  // The request was made but no response was received\n                  message = `No response received while making request to ${endpoint}`;\n              } else {\n                  // Something happened in setting up the request that triggered an Error\n                  message = `Error making ${method} request to ${endpoint}`;\n              }\n              generateToast(message, 'error');\n              callbackOnError(error);\n              return Promise.reject(error);\n          })\n        : axios(options);\n};\n\nexport { axiosCallWrapper };\n"],"names":["MarkdownWrapper","styled","props","color","MarkdownMessage","markdownText","text","markdownType","to","link","array","fn","i","length","mapping","part","key","linkText","concat","flatMap","split","token","pop","propTypes","PropTypes","React","TextWrapper","Text","TextComponent","e","value","handleChange","field","inline","error","this","className","disabled","toString","onChange","type","encrypted","Component","TextArea","TextAreaComponent","canClear","rowsMax","controlOptions","rowsMin","SelectWrapper","Select","WaitSpinnerWrapper","WaitSpinner","StyledDiv","SingleInputComponent","dependencyValues","restProps","endpointUrl","denyList","allowList","dependencies","createSearchChoice","referenceName","disableSearch","labelField","autoCompleteFields","hideClearBtn","obj","Option","ComboBox","Heading","generateOptions","items","data","forEach","item","label","push","children","child","useState","loading","setLoading","options","setOptions","useEffect","current","source","axios","cancelToken","handleError","params","count","serviceName","axiosCallWrapper","then","response","filterResponse","entry","cancel","effectiveDisabled","loadingIndicator","effectiveIsClearable","required","name","filter","appearance","icon","onClick","MultiSelectWrapper","Multiselect","MultiInputComponent","delimiter","itemList","map","valueList","values","allowNewValues","join","CheckBoxComponent","isFalse","selected","RadioBarWrapper","RadioBar","RadioBarOption","RadioComponent","PlaceholderComponent","defaultValue","CustomControl","newValue","state","shouldRender","globalConfig","getUnifiedConfigs","appName","meta","loadCustomControl","src","Control","customControl","el","setValue","utilCustomFunctions","render","validation","addCustomValidator","setState","nextProps","nextState","_","ref","style","visibility","module","Promise","resolve","import","getBuildDirPath","external","__non_webpack_require__","FileWrapper","File","StyledColumnLayout","ColumnLayout","parseValue","collection","resultMap","Map","rawValue","inputValue","parsedInputValue","undefined","Number","isNaN","Error","set","checkbox","packValue","Array","from","entries","isGroupWithRows","GroupWrapper","CollapsiblePanelWrapper","CollapsiblePanel","StyledPadding8","CustomGroupLabel","Description","isExpandable","defaultOpen","title","description","StyledSwitch","Switch","input","isTextDisabled","setIsTextDisabled","Column","span","event","previousValue","row","handleRowChange","valueForField","get","StyledCheckboxRowWrapper","group","checkedCheckboxesCount","rows","getCheckedCheckboxesCount","fields","expand","rowInsideGroup","checkboxGroup","groups","flattenRowsMixedWithGroups","flattenedRowsWithGroups","groupForThisRow","find","includes","addedGroup","groupToAdd","shouldUseDefaultValue","mode","MODE_CREATE","checkboxDefaultValue","getDefaultValues","setValues","submittedField","submittedValue","validationResult","packedValue","errorMessage","parsedValue","some","rowSubmittedValue","Validator","validators","validator","validateCheckboxGroup","errorMsg","useValidation","newValues","getNewCheckboxValues","handleCheckboxToggleAll","newCheckboxValue","oldValue","gutter","custom","file","fileNameToDisplay","fileSupportMessage","supportedFileTypes","maxFileSize","fileReader","FileReader","textDecoder","TextDecoder","fileName","setFileName","setErrorMsg","onRequestAdd","files","readyState","abort","readAsArrayBuffer","onload","isValid","fileType","fileSize","getFormattedMessage","isValidFile","size","result","decode","err","console","log","onRequestRemove","supportsMessage","help","helpLink","openInNewContext","multipleSelect","placeholder","radio","singleSelect","textarea","CustomElement","ControlGroupWrapper","ControlGroup","attrs","dataName","ControlWrapper","controlType","isString","entity","CONTROL_TYPE_MAP","rowView","tooltip","utilityFuncts","markdownMessage","helpText","display","str","String","ERROR_OCCURRED_TRY_AGAIN","onCustomHookError","methodName","message","BaseFormView","context","fieldName","groupEntities","clearErrorMsg","handleFormSubmit","datadict","Object","keys","hook","onSave","executeValidationSubmit","temEntities","MODE_CLONE","Boolean","rowData","val","index","entities","findIndex","setErrorFieldMsg","isOAuth","reqFields","authMap","auth_type","isAuthVal","doValidation","errorField","saveValidator","SaveValidator","isSingleOauth","parameters","client_id","redirect_url","stateEnabled","isoauthState","state_enabled","oauth_state","uuidv4","replace","scope","oauthConf","authEndpointAccessTokenType","host","encodeURI","endpoint","authCodeEndpoint","redirectURI","URLSearchParams","encodeURIComponent","isCalled","isError","isResponse","childWin","window","open","popupWidth","popupHeight","getMessage","handleOauthToken","waitForAuthentication","authTimeout","closed","waitForBackendResponse","saveData","onSavePromise","body","x","append","fileContent","MODE_EDIT","customHeaders","method","MODE_CONFIG","tmpObj","content","id","setRowData","update","$merge","onSaveSuccess","generateToast","mode_config_title","errorSubmitMsg","parseErrorMsg","onSaveFail","targetValue","prevState","changes","$set","dependencyMap","has","loadField","load","dependency","currentValue","newFields","tempState","clearAllErrorMsg","hookDeferred","validatorFunc","msg","previousState","State","warningMsg","newData","temData","Hook","util","groupName","code","stateResponse","decodeURIComponent","url","accessTokenEndpoint","grant_type","client_secret","redirect_uri","OAuthEndpoint","accessToken","access_token","instanceUrl","instance_url","refreshToken","refresh_token","sleep","timeout","args","ms","setTimeout","collapsibleElement","temState","utilControlWrapper","flag","currentInput","stanzaName","callback","page","PAGE_INPUT","pages","inputs","services","service","updateGroupEntities","loadHook","configuration","tabs","tab","table","currentServiceState","PAGE_CONF","authType","oauth_state_enabled","tempEntity","basic","oauth","authfields","isEncrypted","location","href","toLowerCase","oauthConfData","oauth_popup_width","oauth_popup_height","oauth_timeout","auth_code_endpoint","access_token_endpoint","auth_endpoint_token_access_type","disableonEdit","changeFields","flattenedMap","onCreate","onRender","onEditLoad","marginTop","generateWarningMessage","generateErrorMessage","renderGroupElements","PureComponent","TableContext","ModalWrapper","Modal","EntityModal","handleRequestClose","form","handleSubmit","close","isSubmititng","buttonText","formLabel","onRequestClose","EntityPage","useRef","isSubmitting","setIsSubmitting","colStyle","boxShadow","useSplunkTheme","embossShadow","padding","backgroundColor","textAlign","width","memo","ERR0001","ERR0002","ERR0003","ERR0004","ERR0005","ErrorBoundary","errorCode","uccErrorCode","level","fontSize","errorCodes","whiteSpace","showBorder","isRequired","CustomTableControl","TableCellWrapper","Table","getExpansionRow","colSpan","moreInfo","customRow","wordBreak","termWidth","DefinitionLists","getExpansionRowData","SwitchWrapper","CustomTableRow","columns","rowActions","headerMapping","handleToggleActionClick","handleEditActionClick","handleCloneActionClick","handleDeleteActionClick","rowActionsPrimaryButton","useCallback","selectedRow","screenReaderText","statusContent","__toggleShowSpinner","header","cellHTML","customCell","getCustomCell","selectedLabel","unselectedLabel","prototype","hasOwnProperty","call","DeleteModal","ErrorMsg","isDeleting","reject","$unset","deleteMsg","handleDelete","CustomTable","handleOpenPageStyleDialog","handleSort","sortDir","sortKey","tableConfig","unifiedConfigs","entityModal","setEntityModal","deleteModal","setDeleteModal","useContext","headers","actions","serviceToStyleMap","STYLE_PAGE","STYLE_MODAL","query","useQuery","serviceKey","column","handleEntityClose","getTableHeaderCell","headData","onSort","stripeRows","headType","rowExpansion","expansionRow","generateModalDialog","TableFilter","searchText","declineBtnLabel","acceptBtnLabel","InteractAllActionButton","Button","variables","InteractAllStatusButtons","tryInteract","setTryInteract","isDisabling","setIsDisabling","displayActionBtnAllRows","role","dataRows","changeToggleStatus","TableHeaderWrapper","TableFilterWrapper","TableHeader","isTabs","totalElement","handleRequestModalOpen","allFilteredData","pageSize","currentPage","setCurrentPage","setPageSize","searchType","setSearchType","setSearchText","itemLabel","arr","unshift","getSearchTypeDropdown","pageNumber","alwaysShowLastPageLink","totalPages","Math","ceil","TableWrapper","setSortKey","setSortDir","setError","requests","messages","request","res","serviceTitle","currentRowData","callbackOnError","isTrue","findByMatchingValue","tableFields","moreInfoData","v","found","vv","trim","newArr","sortedArr","sort","rowA","rowB","rowAValue","updatedArr","slice","getRowData","filteredData","prevSortDir","PREDEFINED_VALIDATORS_DICT","regex","inputValueType","email","ipv4","date","createContext","TableContextProvider","Provider","useLocation","search","TitleComponent","SubTitleComponent","parseFunctionRawStr","rawStr","eval","formData","ret","parseNumberValidator","range","JSON","stringify","parseRegexRawStr","RegExp","isName","nameFieldLabel","startsWith","d","indexOf","j","RequiredValidator","StringValidator","RegexValidator","NumberValidator","PreDefinedRegexValidator","CustomValidator","checkIsFieldHasInput","maxLength","minLength","pattern","test","attrValue","generateEndPointUrl","appData","app","owner","baseHeaders","CSRFToken","assign","createRESTURL","newParams","output_mode","credentials"],"sourceRoot":""}